import{_ as a,o as t,c as e,d as n,b as s,a as o}from"./app.2aea72c0.js";const f='{"title":"Using ServiceStack Auth in MVC","description":"","frontmatter":{"slug":"authentication-identity-servicestack","title":"Using ServiceStack Auth in MVC"},"headers":[{"level":3,"title":"Defaults to MVC Auth Redirect Conventions","slug":"defaults-to-mvc-auth-redirect-conventions"}],"relativePath":"authentication-identity-servicestack.md"}',p={},c=n("p",null,[n("a",{href:"https://github.com/NetCoreTemplates/mvcauth",target:"_blank",rel:"noopener noreferrer"},"mvcauth"),s(" is a .NET 6.0 MVC Website integrated with ServiceStack Auth:")],-1),u=n("p",null,[n("a",{href:"https://github.com/NetCoreTemplates/mvcauth",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/Assets/master/csharp-templates/mvcauth.png",alt:""})])],-1),i=n("p",null,[s("Create new "),n("code",null,"mvcauth"),s(" project with:")],-1),l=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"x new mvcauth ProjectName")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),r=o(`<p>The ServiceStack Auth is pre-configured to persist users in an OrmLite Auth Repository (default SQLite) and enables both local Username/Password Credentials Auth as well as external Sign In&#39;s via Facebook, Twitter, Google and the new Microsoft Graph OAuth providers:</p><div class="language-csharp"><pre><code>container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Register</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IDbConnectionFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OrmLiteConnectionFactory</span><span class="token punctuation">(</span><span class="token string">&quot;:memory:&quot;</span><span class="token punctuation">,</span> SqliteDialect<span class="token punctuation">.</span>Provider<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Register</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IAuthRepository<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OrmLiteAuthRepository</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IDbConnectionFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        UseDistinctRoleTables <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IAuthRepository<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">InitSchema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// TODO: Replace OAuth App settings in: appsettings.Development.json</span>
Plugins<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AuthFeature</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CustomUserSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">IAuthProvider<span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NetCoreIdentityAuthProvider</span><span class="token punctuation">(</span>AppSettings<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Adapter to enable ServiceStack Auth in MVC</span>
            AdminRoles <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;Manager&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// Automatically Assign additional roles to Admin Users</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CredentialsAuthProvider</span><span class="token punctuation">(</span>AppSettings<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// Sign In with Username / Password credentials </span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FacebookAuthProvider</span><span class="token punctuation">(</span>AppSettings<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// Create App at: https://developers.facebook.com/apps</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TwitterAuthProvider</span><span class="token punctuation">(</span>AppSettings<span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token comment">// Create App at: https://dev.twitter.com/apps</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">GoogleAuthProvider</span><span class="token punctuation">(</span>AppSettings<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment">// https://console.developers.google.com/apis/credentials</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MicrosoftGraphAuthProvider</span><span class="token punctuation">(</span>AppSettings<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// Create App https://apps.dev.microsoft.com</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    IncludeRegistrationService <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    IncludeAssignRoleServices <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>In ServiceStack users with the <code>Admin</code> roles are &quot;super users&quot; with unrestricted access to all protected resources whereas in MVC we need to specify all the Roles Admin Users should have access to with <code>AdminRoles</code> above.</p><p>We also see the built-in <code>Register</code> and <code>AssignRoles</code> Services are enabled to allow new User Registration and assignment of roles/permissions to existing users.</p><p>On Startup, 3 users are created to test out the different access levels:</p><ol><li>A basic Authenticated User</li><li>A Manager with the <code>Manager</code> role</li><li>A Super User with the <code>Admin</code> role</li></ol><div class="language-csharp"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>authRepo<span class="token punctuation">.</span><span class="token function">GetUserAuthByUserName</span><span class="token punctuation">(</span><span class="token string">&quot;user@gmail.com&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> testUser <span class="token operator">=</span> authRepo<span class="token punctuation">.</span><span class="token function">CreateUserAuth</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserAuth</span>
    <span class="token punctuation">{</span>
        DisplayName <span class="token operator">=</span> <span class="token string">&quot;Test User&quot;</span><span class="token punctuation">,</span>
        Email <span class="token operator">=</span> <span class="token string">&quot;user@gmail.com&quot;</span><span class="token punctuation">,</span>
        FirstName <span class="token operator">=</span> <span class="token string">&quot;Test&quot;</span><span class="token punctuation">,</span>
        LastName <span class="token operator">=</span> <span class="token string">&quot;User&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;p@55wOrd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>authRepo<span class="token punctuation">.</span><span class="token function">GetUserAuthByUserName</span><span class="token punctuation">(</span><span class="token string">&quot;manager@gmail.com&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> roleUser <span class="token operator">=</span> authRepo<span class="token punctuation">.</span><span class="token function">CreateUserAuth</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserAuth</span>
    <span class="token punctuation">{</span>
        DisplayName <span class="token operator">=</span> <span class="token string">&quot;Test Manager&quot;</span><span class="token punctuation">,</span>
        Email <span class="token operator">=</span> <span class="token string">&quot;manager@gmail.com&quot;</span><span class="token punctuation">,</span>
        FirstName <span class="token operator">=</span> <span class="token string">&quot;Test&quot;</span><span class="token punctuation">,</span>
        LastName <span class="token operator">=</span> <span class="token string">&quot;Manager&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;p@55wOrd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    authRepo<span class="token punctuation">.</span><span class="token function">AssignRoles</span><span class="token punctuation">(</span>roleUser<span class="token punctuation">,</span> <span class="token named-parameter punctuation">roles</span><span class="token punctuation">:</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span> <span class="token string">&quot;Manager&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>authRepo<span class="token punctuation">.</span><span class="token function">GetUserAuthByUserName</span><span class="token punctuation">(</span><span class="token string">&quot;admin@gmail.com&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> roleUser <span class="token operator">=</span> authRepo<span class="token punctuation">.</span><span class="token function">CreateUserAuth</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserAuth</span>
    <span class="token punctuation">{</span>
        DisplayName <span class="token operator">=</span> <span class="token string">&quot;Admin User&quot;</span><span class="token punctuation">,</span>
        Email <span class="token operator">=</span> <span class="token string">&quot;admin@gmail.com&quot;</span><span class="token punctuation">,</span>
        FirstName <span class="token operator">=</span> <span class="token string">&quot;Admin&quot;</span><span class="token punctuation">,</span>
        LastName <span class="token operator">=</span> <span class="token string">&quot;User&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;p@55wOrd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    authRepo<span class="token punctuation">.</span><span class="token function">AssignRoles</span><span class="token punctuation">(</span>roleUser<span class="token punctuation">,</span> <span class="token named-parameter punctuation">roles</span><span class="token punctuation">:</span><span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span> <span class="token string">&quot;Admin&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>You can sign in with any of these users and go to the the home page to test the behavior of the different granular protection levels which contains links to both MVC and ServiceStack Public and Protected Pages and Services.</p><p><strong>mvcauth</strong> also comes complete with User Registration where users can Sign up with either Password or using any of the registered OAuth providers:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/Assets/master/csharp-templates/mvcauth-login.png" alt=""></p><h3 id="defaults-to-mvc-auth-redirect-conventions" tabindex="-1">Defaults to MVC Auth Redirect Conventions <a class="header-anchor" href="#defaults-to-mvc-auth-redirect-conventions" aria-hidden="true">#</a></h3><p>When using <code>NetCoreIdentityAuthProvider</code> we assume you&#39;re going to use MVC for your UI so it overrides the HTML Redirects that Users will be redirected to when trying to access Pages they don&#39;t have access to:</p><div class="language-csharp"><pre><code>authFeature<span class="token punctuation">.</span>HtmlRedirect <span class="token operator">=</span> <span class="token string">&quot;~/Account/Login&quot;</span><span class="token punctuation">;</span>
authFeature<span class="token punctuation">.</span>HtmlRedirectAccessDenied <span class="token operator">=</span> <span class="token string">&quot;~/Account/AccessDenied&quot;</span><span class="token punctuation">;</span>
authFeature<span class="token punctuation">.</span>HtmlRedirectReturnParam <span class="token operator">=</span> <span class="token string">&quot;ReturnUrl&quot;</span><span class="token punctuation">;</span>
authFeature<span class="token punctuation">.</span>HtmlRedirectReturnPathOnly <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre></div><p>Where non-Authenticated Users will be redirected to MVC&#39;s convention of <code>/Account/Login?ReturnUrl=</code> instead of ServiceStack&#39;s <code>/login?redirect=</code>.</p><p>Alternatively you can retain ServiceStack&#39;s HTML redirect defaults with:</p><div class="language-csharp"><pre><code><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NetCoreIdentityAuthProvider</span><span class="token punctuation">(</span>AppSettings<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    OverrideHtmlRedirect <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre></div>`,16),k=[c,u,i,l,r];function d(h,m,g,v,w,A){return t(),e("div",null,k)}var q=a(p,[["render",d]]);export{f as __pageData,q as default};
