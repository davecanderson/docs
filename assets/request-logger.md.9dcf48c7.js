import{_ as a,a as e}from"./chunks/request-logs-02.260baacf.js";import{_ as t,o,c as p,a as n,d as s}from"./app.2aea72c0.js";const R='{"title":"Request Loggers","description":"","frontmatter":{"title":"Request Loggers"},"headers":[{"level":3,"title":"CSV Request Logger","slug":"csv-request-logger"},{"level":3,"title":"Custom CSV AutoQuery Data implementation","slug":"custom-csv-autoquery-data-implementation"},{"level":2,"title":"Rollbar Request Logger","slug":"rollbar-request-logger"},{"level":3,"title":"Install","slug":"install"},{"level":2,"title":"Redis Request Logger","slug":"redis-request-logger"},{"level":3,"title":"Install","slug":"install-1"},{"level":3,"title":"Configuration","slug":"configuration"},{"level":3,"title":"Usage","slug":"usage"}],"relativePath":"request-logger.md"}',c={},r=n(`<p>Add an In-Memory <code>IRequestLogger</code> and service with the default route at <code>/requestlogs</code> which maintains a live log of the most recent requests (and their responses). Supports multiple config options incl. Rolling-size capacity, error and session tracking, hidden request bodies for sensitive services, etc.</p><div class="language-cs"><pre><code>Plugins<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">RequestLogsFeature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="csv-request-logger" tabindex="-1">CSV Request Logger <a class="header-anchor" href="#csv-request-logger" aria-hidden="true">#</a></h3><p>One of the areas where ServiceStack&#39;s <a href="/csv-format">CSV Support</a> shines is being able to store daily Request Logs in a plain-text structured format, that way they could be immediately inspectable with a text editor or for even better inspection, opened in a spreadsheet and benefit from its filterable, movable, resizable and sortable columns.</p><p>To enable CSV Request Logging you just need to register the <code>RequestLogsFeature</code> and configure it to use the <a href="https://github.com/ServiceStack/ServiceStack/blob/master/src/ServiceStack/CsvRequestLogger.cs" target="_blank" rel="noopener noreferrer">CsvRequestLogger</a>:</p><div class="language-csharp"><pre><code>Plugins<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">RequestLogsFeature</span> <span class="token punctuation">{</span>
    RequestLogger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CsvRequestLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>This will register the CSV Request logger with the following overridable defaults:</p><div class="language-csharp"><pre><code>Plugins<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">RequestLogsFeature</span> <span class="token punctuation">{</span>
    RequestLogger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CsvRequestLogger</span><span class="token punctuation">(</span>
        <span class="token named-parameter punctuation">files</span><span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FileSystemVirtualFiles</span><span class="token punctuation">(</span>HostContext<span class="token punctuation">.</span>Config<span class="token punctuation">.</span>WebHostPhysicalPath<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token named-parameter punctuation">requestLogsPattern</span><span class="token punctuation">:</span> <span class="token string">&quot;requestlogs/{year}-{month}/{year}-{month}-{day}.csv&quot;</span><span class="token punctuation">,</span>
        <span class="token named-parameter punctuation">errorLogsPattern</span><span class="token punctuation">:</span> <span class="token string">&quot;requestlogs/{year}-{month}/{year}-{month}-{day}-errors.csv&quot;</span><span class="token punctuation">,</span>
        <span class="token named-parameter punctuation">appendEvery</span><span class="token punctuation">:</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Where Request Logs are flushed every <strong>1 second</strong> using a background Timer to a daily log maintained in the logical date format structure above. As it would be useful to be able to inspect any errors in isolation, errors are also written to a separate <code>YYYY-MM-DD-errors.csv</code> format, in addition to the main Request logs.</p><h3 id="custom-csv-autoquery-data-implementation" tabindex="-1"><a href="/autoquery-service#custom-autoquery-data-implementation">Custom CSV AutoQuery Data implementation</a> <a class="header-anchor" href="#custom-csv-autoquery-data-implementation" aria-hidden="true">#</a></h3><p>The AutoQuery Service example shows you can quickly create an AutoQuery Data Service that lets you inspect your CSV Request and Error Logs with AutoQuery, which in addition to the rich querying benefits also gives you access to an instant UI in <a href="https://github.com/ServiceStack/Admin" target="_blank" rel="noopener noreferrer">AutoQuery Viewer</a> to be able to <a href="/autoquery-service#view-request-logs-in-autoquery-viewerhttpsgithubcomservicestackadmin">View your Request Logs</a>.</p><h2 id="rollbar-request-logger" tabindex="-1">Rollbar Request Logger <a class="header-anchor" href="#rollbar-request-logger" aria-hidden="true">#</a></h2><p>The <a href="https://github.com/daleholborow/iayos.ServiceStack.RollbarPlugin" target="_blank" rel="noopener noreferrer">iayos.ServiceStack.RollbarPlugin</a> integrates with <a href="https://rollbar.com" target="_blank" rel="noopener noreferrer">Rollbar</a> real-time error monitoring solution which has a free tier to log up to 5,000 requests per month.</p><h3 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-hidden="true">#</a></h3><p>To use <code>RollbarLoggerPlugin</code> install the <a href="https://www.nuget.org/packages/iayos.ServiceStack.RollbarPlugin" target="_blank" rel="noopener noreferrer">iayos.ServiceStack.RollbarPlugin</a> NuGet package:</p>`,15),l=s("div",{class:"nuget-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[s("div",{class:"flex-grow bg-gray-700"},[s("div",{class:"pl-4 py-1 pb-1.5 align-middle text-lg text-white"},[s("p",null,[s("code",null,'<PackageReference Include="iayos.ServiceStack.RollbarPlugin" Version="0.0.1" />')])])]),s("div",{class:"flex"},[s("div",{class:"bg-sky-500 text-white p-1.5 pb-0"},[s("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[s("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),s("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[s("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),i=n(`<p>Sign Up for a new account on <a href="https://rollbar.com" target="_blank" rel="noopener noreferrer">Rollbar</a>. Then register <code>RollbarLoggerPlugin</code> with the your API Key:</p><div class="language-csharp"><pre><code>Plugins<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">RollbarLoggerPlugin</span>
<span class="token punctuation">{</span>
    ApiKey <span class="token operator">=</span> rollbarApiKey<span class="token punctuation">,</span>
    <span class="token comment">//..</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Please see the <a href="https://github.com/daleholborow/iayos.ServiceStack.RollbarPlugin" target="_blank" rel="noopener noreferrer">iayos.ServiceStack.RollbarPlugin</a> project for additional customization options.</p><h2 id="redis-request-logger" tabindex="-1">Redis Request Logger <a class="header-anchor" href="#redis-request-logger" aria-hidden="true">#</a></h2><p>The HTTP Request logs can also be configured to persist to a distributed <a href="https://redis.io" target="_blank" rel="noopener noreferrer">Redis</a> data store instead by configuring the <code>RequestLogsFeature</code> plugin to use the <code>RedisRequestLogger</code>. Persisting logs in redis will allow them to survive and be view-able across App Domain restarts.</p><h3 id="install-1" tabindex="-1">Install <a class="header-anchor" href="#install-1" aria-hidden="true">#</a></h3><p>To use <code>RedisRequestLogger</code> first install the <strong>ServiceStack.Server</strong> NuGet package:</p>`,7),u=s("div",{class:"nuget-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[s("div",{class:"flex-grow bg-gray-700"},[s("div",{class:"pl-4 py-1 pb-1.5 align-middle text-lg text-white"},[s("p",null,[s("code",null,'<PackageReference Include="ServiceStack.Server" Version="6.*" />')])])]),s("div",{class:"flex"},[s("div",{class:"bg-sky-500 text-white p-1.5 pb-0"},[s("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[s("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),s("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[s("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),k=n(`<p>Then configure <code>RequestLogsFeature</code> to use the <code>RedisRequestLogger</code> which can make use of your existing <code>IRedisClientsManager</code> registered IOC dependency, e.g:</p><div class="language-csharp"><pre><code>Plugins<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">RequestLogsFeature</span> <span class="token punctuation">{</span>
    RequestLogger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RedisRequestLogger</span><span class="token punctuation">(</span>
	    container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IRedisClientsManager<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">capacity</span><span class="token punctuation">:</span><span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="info custom-block"><p class="custom-block-title">Tip</p><p>The optional <code>capacity</code> configures Redis Request Logger as a rolling log where it will only keep the most recent 1000 entries</p></div><h3 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-hidden="true">#</a></h3><p>Like other ServiceStack <a href="/plugins">Plugins</a> the <code>RequestLogsFeature</code> has a number of configuration options that can be specified at registration to customize Request Logging:</p><div class="language-csharp"><pre><code><span class="token keyword">class</span> <span class="token class-name">RequestLogsFeature</span> 
<span class="token punctuation">{</span>
    <span class="token comment">// Limit API access to users in role</span>
    <span class="token class-name"><span class="token keyword">string</span></span> AccessRole <span class="token operator">=</span> RoleNames<span class="token punctuation">.</span>Admin<span class="token punctuation">;</span>

    <span class="token comment">// RequestLogs service Route, default is /requestlogs</span>
    <span class="token class-name"><span class="token keyword">string</span></span> AtRestPath <span class="token operator">=</span> <span class="token string">&quot;/requestlogs&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// Size of memory logger circular buffer</span>
    <span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> Capacity<span class="token punctuation">;</span>

    <span class="token comment">// Turn On/Off Session Tracking</span>
    <span class="token class-name"><span class="token keyword">bool</span></span> EnableSessionTracking<span class="token punctuation">;</span>

    <span class="token comment">// Turn On/Off Logging of Raw Request Body, default is Off</span>
    <span class="token class-name"><span class="token keyword">bool</span></span> EnableRequestBodyTracking<span class="token punctuation">;</span>

    <span class="token comment">// Turn On/Off Raw Request Body Tracking per-request</span>
    <span class="token class-name">Func<span class="token punctuation">&lt;</span>IRequest<span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> RequestBodyTrackingFilter<span class="token punctuation">;</span>

    <span class="token comment">// Turn On/Off Tracking of Responses</span>
    <span class="token class-name"><span class="token keyword">bool</span></span> EnableResponseTracking <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token comment">// Turn On/Off Tracking of Responses per-request</span>
    <span class="token class-name">Func<span class="token punctuation">&lt;</span>IRequest<span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> ResponseTrackingFilter<span class="token punctuation">;</span>
    
    <span class="token comment">// Turn On/Off Tracking of Exceptions</span>
    <span class="token class-name"><span class="token keyword">bool</span></span> EnableErrorTracking <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

    <span class="token comment">// Don&#39;t log matching requests</span>
    <span class="token class-name">Func<span class="token punctuation">&lt;</span>IRequest<span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> SkipLogging<span class="token punctuation">;</span>

    <span class="token comment">// Change the RequestLogger provider. Default is InMemoryRollingRequestLogger</span>
    <span class="token class-name">IRequestLogger</span> RequestLogger<span class="token punctuation">;</span>

    <span class="token comment">// Don&#39;t log requests of these types. By default RequestLog&#39;s are excluded</span>
    <span class="token class-name">Type<span class="token punctuation">[</span><span class="token punctuation">]</span></span> ExcludeRequestDtoTypes<span class="token punctuation">;</span>

    <span class="token comment">// Don&#39;t log request body&#39;s for services with sensitive information.</span>
    <span class="token comment">// By default Auth and Registration requests are hidden.</span>
    <span class="token class-name">Type<span class="token punctuation">[</span><span class="token punctuation">]</span></span> HideRequestBodyForRequestDtoTypes<span class="token punctuation">;</span>
    
    <span class="token comment">// Don&#39;t log Response DTO Types</span>
    <span class="token class-name">Type<span class="token punctuation">[</span><span class="token punctuation">]</span></span> ExcludeResponseTypes<span class="token punctuation">;</span>

    <span class="token comment">// Limit logging to only Service Requests</span>
    <span class="token class-name"><span class="token keyword">bool</span></span> LimitToServiceRequests <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Customize Request Log Entry</span>
    <span class="token class-name">Action<span class="token punctuation">&lt;</span>IRequest<span class="token punctuation">,</span> RequestLogEntry<span class="token punctuation">&gt;</span></span> RequestLogFilter<span class="token punctuation">;</span>

    <span class="token comment">// Ignore logging and serializing these Request DTOs</span>
    <span class="token class-name">List<span class="token punctuation">&lt;</span>Type<span class="token punctuation">&gt;</span></span> IgnoreTypes<span class="token punctuation">;</span> <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Use custom Ignore Request DTO predicate</span>
    <span class="token class-name">Func<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">,</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> IgnoreFilter <span class="token operator">=</span> DefaultIgnoreFilter<span class="token punctuation">;</span>

    <span class="token comment">// Default take, if none is specified</span>
    <span class="token class-name"><span class="token keyword">int</span></span> DefaultLimit <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>

    <span class="token comment">// Change what DateTime to use for the current Date (defaults to UtcNow)</span>
    <span class="token class-name">Func<span class="token punctuation">&lt;</span>DateTime<span class="token punctuation">&gt;</span></span> CurrentDateFn <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h3><p>The <code>IRequestLogger</code> is a great way to introspect and analyze your service requests in real-time, e.g:</p><p><img src="`+a+'" alt=""></p><p>It supports multiple queryString filters and switches so you filter out related requests for better analysis and debuggability:</p><p><img src="'+e+'" alt=""></p><p>The <a href="https://github.com/ServiceStack/ServiceStack/blob/master/src/ServiceStack/Admin/RequestLogsService.cs" target="_blank" rel="noopener noreferrer">RequestLogsService</a> is just a simple C# service under-the-hood but is a good example of how a little bit of code can provide a lot of value in ServiceStack&#39;s by leveraging its generic, built-in features.</p>',12),g=[r,l,i,u,k];function d(h,m,f,v,y,b){return o(),p("div",null,g)}var S=t(c,[["render",d]]);export{R as __pageData,S as default};
