import{I as V}from"./chunks/iconify.2272db1b.js";import{_}from"./chunks/ApiReference.8128d97b.js";import{f as D,Z as x,J as I,r as g,i as R,D as c,u as i,o as b,c as q,d as s,e as n,C as f,q as t,b as a,M as P,B as A,a as u}from"./app.2aea72c0.js";import{Q as T,U as E}from"./chunks/dtos.c5cf3f3f.js";import{m as U}from"./chunks/metadata.46b41fb9.js";import{b as N}from"./chunks/data.783f420d.js";const M=["onSubmit"],j={class:"shadow sm:overflow-hidden sm:rounded-md"},H={class:"space-y-6 py-6 px-4 sm:p-6 bg-white dark:bg-black"},Q=s("div",null,[s("h3",{class:"text-lg font-medium leading-6 text-gray-900 dark:text-gray-100"}," Change an existing Room Booking "),s("p",{class:"notes mt-1 text-sm text-gray-500 dark:text-gray-400"},[a(" Find out how to quickly create a "),s("a",{class:"svg-external",target:"_blank",href:"https://youtu.be/rSFiikDjGos"}," C# Bookings App from Scratch ")])],-1),O={class:"bg-gray-50 dark:bg-gray-800 px-4 py-3 text-right sm:px-12"},L=D({__name:"Fields",setup(F){const{toFormValues:v}=x(),p=I();let k=g(),o=g();async function m(l){k.value=await p.api(o.value)}return R(async()=>{let l=await p.api(new T({id:1}));l.succeeded&&(o.value=new E(v(l.response.results[0])))}),(l,e)=>{const y=c("AutoFormFields"),h=c("PrimaryButton");return i(o)?(b(),q("form",{key:0,onSubmit:P(m,["prevent"])},[s("div",j,[s("div",H,[Q,n(y,{modelValue:i(o),"onUpdate:modelValue":e[0]||(e[0]=r=>f(o)?o.value=r:o=r),api:i(k)},null,8,["modelValue","api"])]),s("div",O,[n(h,null,{default:t(()=>[a("Save")]),_:1})])])],40,M)):A("",!0)}}}),G=s("link",{rel:"stylesheet",href:"/css/tailwind-components.css"},null,-1),z=u(`<p>The <code>AutoForm</code> component is a generic form component that can be used to create and wire a traditional Form for any Request DTO definition where successful responses can be handled the <code>@success</code> event, e.g:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoForm</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>QueryBookings<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@success</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onSuccess<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>results<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>py-4 text-2xl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Results<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HtmlFormat</span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>results<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">onSuccess</span> <span class="token operator">=</span> <span class="token parameter">response</span> <span class="token operator">=&gt;</span> results<span class="token punctuation">.</span>value <span class="token operator">=</span> response<span class="token punctuation">.</span>results
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,2),$={class:"py-8 not-prose"},Z={key:0},J=s("h3",{class:"py-4 text-2xl"},"Results",-1),W=u(`<p>These Auto Form components are customizable with the <a href="/locode/declarative#ui-metadata-attributes">declarative C# UI Attributes</a> where you can override the form&#39;s <strong>heading</strong> with <code>[Description]</code> and include a <strong>subHeading</strong> with <code>[Notes]</code> which supports rich HTML markup.</p><p><strong>AutoForm Properties</strong></p><p>Alternatively they can be specified in the components properties:</p><div class="language-ts"><pre><code>defineProps<span class="token operator">&lt;</span><span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token operator">|</span>InstanceType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token builtin">Function</span>
    modelValue<span class="token operator">?</span><span class="token operator">:</span> ApiRequest<span class="token operator">|</span><span class="token builtin">any</span>
    heading<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    subHeading<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    showLoading<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
    jsconfig<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>         <span class="token comment">//= eccn,edv</span>
    configureField<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>field<span class="token operator">:</span>InputProp<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>

    <span class="token comment">/* Default Styles */</span>
    formClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>        <span class="token comment">//= shadow sm:rounded-md</span>
    innerFormClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    bodyClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    headerClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>      <span class="token comment">//= p-6</span>
    buttonsClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>     <span class="token comment">//= mt-4 px-4 py-3 bg-gray-50 dark:bg-gray-900 sm:px-6 flex flex-wrap justify-between</span>
    headingClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>     <span class="token comment">//= text-lg font-medium leading-6 text-gray-900 dark:text-gray-100</span>
    subHeadingClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    submitLabel<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>      <span class="token comment">//= Submit</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>Both <code>@success</code> and <code>@error</code> events are fired after each API call, although built-in validation binding means it&#39;s typically unnecessary to manually handle error responses.</p><div class="language-ts"><pre><code><span class="token generic-function"><span class="token function">defineEmits</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span>
    <span class="token punctuation">(</span>e<span class="token operator">:</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span> response<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
    <span class="token punctuation">(</span>e<span class="token operator">:</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> error<span class="token operator">:</span>ResponseStatus<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
    <span class="token punctuation">(</span>e<span class="token operator">:</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">,</span> model<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p><strong>Model Binding</strong></p><p>Forms can be bound to a Request DTO model where it can be used to pre-populate the Forms default values and Request DTO whereby specifying a <strong>type</strong> is no longer necessary:</p><div class="language-ts"><pre><code><span class="token operator">&lt;</span>AutoForm v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;request&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryBookings</span><span class="token punctuation">(</span><span class="token punctuation">{</span> skip<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> take<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span> orderBy<span class="token operator">:</span><span class="token string">&#39;Name&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre></div>`,9),K=u(`<p><code>AutoCreateForm</code> can be used to create an automated form based on a <a href="/autoquery-crud">AutoQuery CRUD</a> Create Request DTO definition which can be rendered in a traditional inline Form with <strong>card</strong> formStyle option, e.g:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoCreateForm</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CreateBooking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,2),X={class:"py-8"},Y=u(`<p>By default Auto Forms are rendered in a <code>SlideOver</code> dialog:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoCreateForm</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CreateBooking<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><iframe src="/gallery/autoform/new.html" class="w-full border-none h-[45em] w-[1330px] -ml-40 mb-4"></iframe><p>These Auto Forms are powered by the rich <a href="/vue/use-metadata">App Metadata</a> surrounding your APIs, which contain all the necessary metadata to invoke the API and bind any contextual validation errors adjacent to the invalid field inputs.</p>`,4),nn=u(`<p><code>AutoEditForm</code> can be used to render an automated form based on Update and Delete <a href="/autoquery-crud">AutoQuery CRUD</a> APIs which also makes use of <strong>heading</strong> and <strong>sub-heading</strong> customization options:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoEditForm</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UpdateBooking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">deleteType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DeleteBooking<span class="token punctuation">&quot;</span></span> 
    <span class="token attr-name">heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Change an existing Room Booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">sub-heading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Manage reservations for MyApp hotels.<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><iframe src="/gallery/autoform/edit.html" class="w-full border-none h-[46em] w-[1330px] -ml-40 mb-4"></iframe><p>The same form rendered in a traditional inline form with a <strong>card</strong> formStyle with some more advanced customization examples using rich markup in custom <code>&lt;template #heading&gt;</code> and <code>&lt;template #sub-heading&gt;</code> slots:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoEditForm</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UpdateBooking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">deleteType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DeleteBooking<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#heading</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-xl font-semibold text-green-600<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Change an existing Room Booking<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#sub-heading</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
      Here are some 
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextLink</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://youtu.be/rSFiikDjGos<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>good tips on making room reservations 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>inline-block<span class="token punctuation">&#39;</span></span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lucide:external-link<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TextLink</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AutoEditForm</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,5),sn=s("h3",{class:"text-xl font-semibold text-green-600"},"Change an existing Room Booking",-1),an=u(`<p>The forms behavior and appearance is further customizable with the <a href="/locode/declarative#annotate-apis">API annotation</a>, declarative <a href="/locode/declarative#type-validation-attributes">validation</a> and the custom <a href="/locode/declarative#custom-fields-and-inputs">Field and Input</a> attributes, e.g:</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Update an existing Booking&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Notes</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Find out how to quickly create a &lt;a class=&#39;svg-external&#39; target=&#39;_blank&#39; href=&#39;https://youtu.be/rSFiikDjGos&#39;&gt;C# Bookings App from Scratch&lt;/a&gt;&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;/booking/{Id}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PATCH&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateHasRole</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Employee&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoApply</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Behavior<span class="token punctuation">.</span>AuditModify<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateBooking</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IPatchDb<span class="token punctuation">&lt;</span>Booking<span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">IReturn<span class="token punctuation">&lt;</span>IdResponse<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">RoomType<span class="token punctuation">?</span></span> RoomType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateGreaterThan</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> RoomNumber <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateGreaterThan</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span><span class="token punctuation">?</span></span> Cost <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> BookingStartDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> BookingEndDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Input</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type <span class="token operator">=</span> <span class="token string">&quot;textarea&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Notes <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span><span class="token punctuation">?</span></span> Cancelled <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Where they can be used to customize Auto Form&#39;s appearance from annotations on C# Server DTOs:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoEditForm</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">formStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UpdateBooking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">deleteType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DeleteBooking<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,4),tn=u(`<p>For more advanced customization of a Forms appearance and behavior, <code>AutoFormFields</code> can be used to just render the Form&#39;s fields (with validation binding) inside a custom Form which can submit the data-bound populated Request DTO to invoke the API, e.g:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>request<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shadow sm:overflow-hidden sm:rounded-md<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>space-y-6 py-6 px-4 sm:p-6 bg-white dark:bg-black<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-lg font-medium leading-6 text-gray-900 dark:text-gray-100<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    Change an existing Room Booking
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>notes mt-1 text-sm text-gray-500 dark:text-gray-400<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    Find out how to quickly create a 
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>svg-external<span class="token punctuation">&#39;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>_blank<span class="token punctuation">&#39;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>https://youtu.be/rSFiikDjGos<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
                        C# Bookings App from Scratch
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoFormFields</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>request<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:api</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>api<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-gray-50 dark:bg-gray-800 px-4 py-3 text-right sm:px-12<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PrimaryButton</span><span class="token punctuation">&gt;</span></span>Save<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PrimaryButton</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ApiResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@servicestack/client&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useClient<span class="token punctuation">,</span> useMetadata <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@servicestack/vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> QueryBookings<span class="token punctuation">,</span> UpdateBooking <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../dtos&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> toFormValues <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token function">useClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> api <span class="token operator">=</span> ref<span class="token operator">&lt;</span>ApiResponse<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> request <span class="token operator">=</span> ref<span class="token operator">&lt;</span>UpdateBooking<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">e</span><span class="token operator">:</span>Event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    api<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">api</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>value<span class="token operator">!</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> api <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">api</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryBookings</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>succeeded<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        request<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateBooking</span><span class="token punctuation">(</span><span class="token function">toFormValues</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>response<span class="token operator">!</span><span class="token punctuation">.</span>results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,2),pn=s("p",null,[s("code",null,"toFormValues"),a(" is used when updating the data bound "),s("code",null,"request"),a(" DTO to convert API response values into the required format that HTML Inputs expect.")],-1),dn='{"title":"Auto Form Components","description":"","frontmatter":{"title":"Auto Form Components"},"headers":[],"relativePath":"vue/gallery/autoform.md"}',on={},gn=Object.assign(on,{__name:"autoform",setup(F){const{setMetadata:v}=x();v(U);const p=N[0];g(!1);const k=g(),o=l=>k.value=l.results,m=g(new T({skip:1,take:2,orderBy:"Name"}));return(l,e)=>{const y=c("Breadcrumb"),h=c("Breadcrumbs"),r=c("AutoForm"),C=c("HtmlFormat"),B=c("AutoCreateForm"),S=c("TextLink"),w=c("AutoEditForm");return b(),q("div",null,[G,n(h,{class:"not-prose mt-4","home-href":"/vue/"},{default:t(()=>[n(y,{href:"/vue/gallery/"},{default:t(()=>[a("gallery")]),_:1}),n(y,null,{default:t(()=>[a("Auto Form Examples")]),_:1})]),_:1}),n(_,{Component:"AutoForm"},{default:t(()=>[a("AutoForm")]),_:1}),z,s("div",$,[n(r,{class:"mx-auto max-w-3xl",type:"QueryBookings",onSuccess:o}),k.value?(b(),q("div",Z,[J,n(C,{value:k.value},null,8,["value"])])):A("",!0)]),W,n(r,{class:"mx-auto max-w-3xl not-prose",modelValue:m.value,"onUpdate:modelValue":e[0]||(e[0]=d=>m.value=d),type:"QueryBookings"},null,8,["modelValue"]),n(_,{Component:"AutoCreateForm"},{default:t(()=>[a("Create Form")]),_:1}),K,s("div",X,[n(B,{class:"mx-auto max-w-3xl",type:"CreateBooking",formStyle:"card"})]),Y,n(_,{component:"AutoEditForm"},{default:t(()=>[a("Edit Form")]),_:1}),nn,n(w,{class:"mx-auto max-w-3xl mb-4",modelValue:i(p),"onUpdate:modelValue":e[1]||(e[1]=d=>f(p)?p.value=d:null),formStyle:"card",type:"UpdateBooking",deleteType:"DeleteBooking"},{heading:t(()=>[sn]),"sub-heading":t(()=>[s("p",null,[a("Here are some "),n(S,{href:"https://youtu.be/rSFiikDjGos"},{default:t(()=>[a("good tips on making room reservations "),n(i(V),{class:"inline-block",icon:"lucide:external-link"})]),_:1})])]),_:1},8,["modelValue"]),an,n(w,{class:"mx-auto max-w-3xl",modelValue:i(p),"onUpdate:modelValue":e[2]||(e[2]=d=>f(p)?p.value=d:null),formStyle:"card",type:"UpdateBooking",deleteType:"DeleteBooking"},null,8,["modelValue"]),n(_,{component:"AutoFormFields"},{default:t(()=>[a("Form Fields")]),_:1}),tn,s("div",null,[n(L,{class:"my-4 mx-auto max-w-screen-md"})]),pn])}}});export{dn as __pageData,gn as default};
