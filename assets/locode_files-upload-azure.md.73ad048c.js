import{_ as a,o as t,c as e,a as s,d as n}from"./app.2aea72c0.js";var p="/assets/locode-app-create-azure.f1b7de7d.png";const f='{"title":"Azure Blob Storage Managed File Uploads","description":"","frontmatter":{"title":"Azure Blob Storage Managed File Uploads"},"headers":[{"level":2,"title":"Using File Upload Locations in APIs","slug":"using-file-upload-locations-in-apis"},{"level":2,"title":"Blazor Custom Client Upload","slug":"blazor-custom-client-upload"}],"relativePath":"locode/files-upload-azure.md"}',o={},c=s(`<p>The <code>FileUploadFeature</code> plugin supports having multiple <code>UploadLocations</code> configured at once, and each UploadLocation can use a different implementation of the <code>IVirtualFiles</code> interface.</p><p>This can be added in your AppHost Configure method or IHostingStartup ConfigureAppHost method. Each UploadLocation requires a Name string and an instance of an IVirtualFiles provider.</p><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> azureBlobConnString <span class="token operator">=</span> <span class="token range operator">..</span><span class="token punctuation">.</span> <span class="token comment">// Fetch from config/environment variables.</span>
<span class="token class-name"><span class="token keyword">var</span></span> azureBlobVfs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AzureBlobVirtualFiles</span><span class="token punctuation">(</span>azureBlobConnString<span class="token punctuation">,</span> <span class="token string">&quot;my-container-name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Plugins<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">FilesUploadFeature</span><span class="token punctuation">(</span>
  <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UploadLocation</span><span class="token punctuation">(</span><span class="token string">&quot;azure&quot;</span><span class="token punctuation">,</span> azureBlobVfs<span class="token punctuation">,</span>
      <span class="token named-parameter punctuation">readAccessRole</span><span class="token punctuation">:</span> RoleNames<span class="token punctuation">.</span>AllowAnon<span class="token punctuation">,</span>
      <span class="token named-parameter punctuation">resolvePath</span><span class="token punctuation">:</span> ResolveUploadPath<span class="token punctuation">,</span>
      <span class="token named-parameter punctuation">validateUpload</span><span class="token punctuation">:</span> ValidateUpload<span class="token punctuation">,</span>
      <span class="token named-parameter punctuation">validateDownload</span><span class="token punctuation">:</span> ValidateDownload<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>In this example of integrating Azure Blob Storage, we initialize the <code>AzureBlobVirtualFiles</code>, pass it to our IVirtualFiles implementation, and specify a container name.</p><p>To use the <code>AzureBlobVirtualFiles</code> you will need the <code>ServiceStack.Azure</code> NuGet package:</p>`,5),l=n("div",{class:"nuget-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-700"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle text-lg text-white"},[n("p",null,[n("code",null,'<PackageReference Include="ServiceStack.Azure" Version="6.*" />')])])]),n("div",{class:"flex"},[n("div",{class:"bg-sky-500 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),u=s(`<h2 id="using-file-upload-locations-in-apis" tabindex="-1">Using File Upload Locations in APIs <a class="header-anchor" href="#using-file-upload-locations-in-apis" aria-hidden="true">#</a></h2><p>With just the above configured, we can now use them in our APIs. The <code>[UploadTo(&quot;name&quot;)]</code> attribute is used with an AutoQuery Request DTO and related database model class. For example, the AzureFileItem table contains metadata about file access and is referenced by AzureFile table which contains our file metadata.</p><p>In the <code>FileBlazor</code> demo, we store the file metadata in one table which is related back to another to store additional metadata we use to limit file access.</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AzureFile</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoIncrement</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FileName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FilePath <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ContentType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> ContentLength <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Reference</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">AzureFileItem</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> SharedFileId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AzureFileItem</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoIncrement</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">FileAccessType<span class="token punctuation">?</span></span> FileAccessType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Reference</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">AzureFile</span> AppFile <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">References</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">AppUser</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> AppUserId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Reference</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">AppUser</span> AppUser <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> RoleName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>The <code>AzureFile</code> data is populated automatically when a file is uploaded while creating an <code>AzureFileItem</code>. We apply to <code>[UploadTo(&quot;azure&quot;)]</code> attribute to the <code>ICreateDb</code> DTO to the matching type and name for the <code>AzureFile</code>. The &quot;azure&quot; name matches the UploadLocation we previously configured in the FilesUploadFeature. This is what determines where the upload file is stored.</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CreateAzureFileItem</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ICreateDb<span class="token punctuation">&lt;</span>AzureFileItem<span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">IReturn<span class="token punctuation">&lt;</span>AzureFileItem<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">FileAccessType<span class="token punctuation">?</span></span> FileAccessType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> RoleName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token function">Input</span><span class="token punctuation">(</span>Type <span class="token operator">=</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> <span class="token function">UploadTo</span><span class="token punctuation">(</span><span class="token string">&quot;azure&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">AzureFileItem</span> AppFile <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span>
</code></pre></div><p>We also apply the <code>[Input(Type=&quot;file&quot;)]</code> attribute to enhance the Locode App so we can upload files directly from the Locode generated user interface.</p><p><img src="`+p+`" alt=""></p><h2 id="blazor-custom-client-upload" tabindex="-1">Blazor Custom Client Upload <a class="header-anchor" href="#blazor-custom-client-upload" aria-hidden="true">#</a></h2><p>If you need to provide a custom UI, these services accessible from multiple languages since they are HTTP services.</p><p>For example, the <code>FileBlazor</code> demo provides the ability to drag &amp; drop files to upload. It does this using the ServiceStack JsonApiClient to MultipartFormDataContent which includes the request and the file to upload.</p><div class="language-csharp"><pre><code><span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">UploadFile</span><span class="token punctuation">(</span><span class="token class-name">InputFileChangeEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CreateAzureFileItem</span>
    <span class="token punctuation">{</span>
        FileAccessType <span class="token operator">=</span> FileAccessType<span class="token punctuation">.</span>Private
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    
    <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> content <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MultipartFormDataContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">AddParams</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name"><span class="token keyword">var</span></span> file <span class="token operator">=</span> e<span class="token punctuation">.</span>File<span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> stream <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">OpenReadStream</span><span class="token punctuation">(</span>maxFileSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> ms <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> stream<span class="token punctuation">.</span><span class="token function">CopyToAsync</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ms<span class="token punctuation">.</span>Position <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    content<span class="token punctuation">.</span><span class="token function">AddFile</span><span class="token punctuation">(</span><span class="token string">&quot;AppFile&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> ms<span class="token punctuation">,</span> file<span class="token punctuation">.</span>ContentType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name"><span class="token keyword">var</span></span> ap <span class="token operator">=</span> <span class="token keyword">await</span> jsonApiClient<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">ApiFormAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>CreateAzureFileItem<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">CreateAzureFileItem</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToApiUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>api<span class="token punctuation">.</span>Succeeded<span class="token punctuation">)</span>
        errorStatus <span class="token operator">=</span> api<span class="token punctuation">.</span>Error<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,12),i=[c,l,u];function k(r,d,m,y,w,h){return t(),e("div",null,i)}var A=a(o,[["render",k]]);export{f as __pageData,A as default};
