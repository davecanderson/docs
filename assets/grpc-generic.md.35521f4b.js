import{_ as t,o,c as e,a,d as n,b as s}from"./app.2aea72c0.js";const rn='{"title":"Smart Generic C# / F# / VB.NET Service Client","description":"","frontmatter":{"slug":"grpc-generic","title":"Smart Generic C# / F# / VB.NET Service Client"},"headers":[{"level":2,"title":"C# Generic GrpcServiceClient TodoWorld Example","slug":"c-generic-grpcserviceclient-todoworld-example"},{"level":3,"title":"C# gRPC insecure Example","slug":"c-grpc-insecure-example"},{"level":3,"title":"C# gRPC SSL Example","slug":"c-grpc-ssl-example"},{"level":3,"title":"C# Local Development gRPC SSL CRUD Example","slug":"c-local-development-grpc-ssl-crud-example"},{"level":2,"title":"More Examples","slug":"more-examples"},{"level":2,"title":"VB.NET Generic GrpcServiceClient TodoWorld Example","slug":"vb-net-generic-grpcserviceclient-todoworld-example"},{"level":3,"title":"VB.NET gRPC insecure Example","slug":"vb-net-grpc-insecure-example"},{"level":3,"title":"VB.NET gRPC SSL Example","slug":"vb-net-grpc-ssl-example"},{"level":3,"title":"VB.NET Local Development gRPC SSL CRUD Example","slug":"vb-net-local-development-grpc-ssl-crud-example"},{"level":2,"title":"F# Generic GrpcServiceClient TodoWorld Example","slug":"f-generic-grpcserviceclient-todoworld-example"},{"level":3,"title":"F# gRPC insecure Example","slug":"f-grpc-insecure-example"},{"level":3,"title":"F# gRPC SSL Example","slug":"f-grpc-ssl-example"},{"level":3,"title":"F# Local Development gRPC SSL CRUD Example","slug":"f-local-development-grpc-ssl-crud-example"}],"relativePath":"grpc-generic.md"}',p={},c=a('<h2 id="c-generic-grpcserviceclient-todoworld-example" tabindex="-1">C# Generic GrpcServiceClient TodoWorld Example <a class="header-anchor" href="#c-generic-grpcserviceclient-todoworld-example" aria-hidden="true">#</a></h2><p><a href="https://youtu.be/K0QAUQPJNtM" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/grpc/csharp-generic.png" alt=""></a></p><div class="info custom-block"><p class="custom-block-title">YouTube</p><p><a href="https://youtu.be/K0QAUQPJNtM" target="_blank" rel="noopener noreferrer">youtu.be/K0QAUQPJNtM</a></p></div><p>Install <a href="/web-tool">x dotnet tool</a>:</p>',4),l=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet tool install --global x")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),i=n("p",null,"Create a new C# App:",-1),r=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet new console")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),u=n("p",null,[s("Add "),n("a",{href:"https://www.nuget.org/packages/ServiceStack.GrpcClient",target:"_blank",rel:"noopener noreferrer"},"ServiceStack.GrpcClient"),s(" NuGet Package:")],-1),k=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet add package ServiceStack.GrpcClient")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),d=n("p",null,"Add TodoWorld DTOs:",-1),w=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,[n("code",null,"x csharp https://todoworld.servicestack.net")])])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),h=a(`<p>Use TodoWorld DTOs with generic <code>GrpcServiceClient</code> to call TodoWorld gRPC Service:</p><h3 id="c-grpc-insecure-example" tabindex="-1">C# gRPC insecure Example <a class="header-anchor" href="#c-grpc-insecure-example" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ServiceStack</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">TodoWorld<span class="token punctuation">.</span>ServiceModel</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">TodoWorld</span>
<span class="token punctuation">{</span>
    <span class="token keyword">class</span> <span class="token class-name">Program</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            ProtoBuf<span class="token punctuation">.</span>Grpc<span class="token punctuation">.</span>Client<span class="token punctuation">.</span>GrpcClientFactory<span class="token punctuation">.</span>AllowUnencryptedHttp2 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">GrpcServiceClient</span><span class="token punctuation">(</span><span class="token string">&quot;http://todoworld.servicestack.net:5054&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Hello</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;gRPC C#&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>Result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Override <code>Program.cs</code> with the above C# Example:</p>`,4),g=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"x mix todoworld-cs")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),v=n("p",null,"Run example:",-1),y=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet run")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),m=a(`<h3 id="c-grpc-ssl-example" tabindex="-1">C# gRPC SSL Example <a class="header-anchor" href="#c-grpc-ssl-example" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>Cryptography<span class="token punctuation">.</span>X509Certificates</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ServiceStack</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">TodoWorld<span class="token punctuation">.</span>ServiceModel</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">TodoWorld</span>
<span class="token punctuation">{</span>
    <span class="token keyword">class</span> <span class="token class-name">Program</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">GrpcServiceClient</span><span class="token punctuation">(</span><span class="token string">&quot;https://todoworld.servicestack.net:50051&quot;</span><span class="token punctuation">,</span> 
                <span class="token keyword">new</span> <span class="token constructor-invocation class-name">X509Certificate2</span><span class="token punctuation">(</span><span class="token string">&quot;https://todoworld.servicestack.net/grpc.crt&quot;</span><span class="token punctuation">.</span><span class="token function">GetBytesFromUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                GrpcUtils<span class="token punctuation">.</span><span class="token function">AllowSelfSignedCertificatesFrom</span><span class="token punctuation">(</span><span class="token string">&quot;todoworld.servicestack.net&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Hello</span> <span class="token punctuation">{</span> Name <span class="token operator">=</span> <span class="token string">&quot;gRPC C#&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>Result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Override <code>Program.cs</code> with the above C# Example:</p>`,3),x=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"x mix todoworld-cs-ssl")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),f=n("p",null,"Run example:",-1),b=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet run")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),T=a(`<h3 id="c-local-development-grpc-ssl-crud-example" tabindex="-1">C# Local Development gRPC SSL CRUD Example <a class="header-anchor" href="#c-local-development-grpc-ssl-crud-example" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ServiceStack</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">ServiceStack<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">TodoWorld<span class="token punctuation">.</span>ServiceModel</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">CSharpGeneric</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Program</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// Certificate registration not required when using trusted local development certificate  </span>
            <span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">GrpcServiceClient</span><span class="token punctuation">(</span><span class="token string">&quot;https://localhost:5001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">PostAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ResetTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//POST /todos</span>
            <span class="token class-name"><span class="token keyword">var</span></span> todo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">PostAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CreateTodo</span> <span class="token punctuation">{</span> Title <span class="token operator">=</span> <span class="token string">&quot;ServiceStack&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Result<span class="token punctuation">;</span>
            <span class="token interpolation-string"><span class="token string">$&quot;new todo Id: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">todo<span class="token punctuation">.</span>Id</span><span class="token punctuation">}</span></span><span class="token string">, Title: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">todo<span class="token punctuation">.</span>Title</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token comment">//GET /todos</span>
            <span class="token class-name"><span class="token keyword">var</span></span> all <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token interpolation-string"><span class="token string">$&quot;todos: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">all<span class="token punctuation">.</span>Results<span class="token punctuation">?.</span>Count <span class="token operator">??</span> <span class="token number">0</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//GET /todos/1</span>
            todo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetTodo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> todo<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Result<span class="token punctuation">;</span>
            <span class="token interpolation-string"><span class="token string">$&quot;get todo Id: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">todo<span class="token punctuation">.</span>Id</span><span class="token punctuation">}</span></span><span class="token string">, Title: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">todo<span class="token punctuation">.</span>Title</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//GET /todos</span>
            all <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token interpolation-string"><span class="token string">$&quot;todos: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">all<span class="token punctuation">.</span>Results<span class="token punctuation">?.</span>Count <span class="token operator">??</span> <span class="token number">0</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//PUT /todos/1</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">PutAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">UpdateTodo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> todo<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> Title <span class="token operator">=</span> <span class="token string">&quot;gRPC&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//GET /todos/1</span>
            todo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetTodo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> todo<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Result<span class="token punctuation">;</span>
            <span class="token interpolation-string"><span class="token string">$&quot;updated todo Title: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">todo<span class="token punctuation">.</span>Title</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//DELETE /todos/1</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">DeleteAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DeleteTodo</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> todo<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//GET /todos</span>
            all <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token interpolation-string"><span class="token string">$&quot;todos: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">all<span class="token punctuation">.</span>Results<span class="token punctuation">?.</span>Count <span class="token operator">??</span> <span class="token number">0</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Refer to <a href="https://github.com/NetCoreApps/todo-world/tree/master/src/clients/csharp-generic" target="_blank" rel="noopener noreferrer">/src/clients/csharp-generic</a> for a complete example project.</p><h2 id="more-examples" tabindex="-1">More Examples <a class="header-anchor" href="#more-examples" aria-hidden="true">#</a></h2><p>For more C# <code>GrpcServiceClient</code> examples check out the integration tests at:</p><ul><li><a href="https://github.com/ServiceStack/ServiceStack/blob/master/tests/ServiceStack.Extensions.Tests/GrpcTests.cs" target="_blank" rel="noopener noreferrer">GrpcTests.cs</a></li><li><a href="https://github.com/ServiceStack/ServiceStack/blob/master/tests/ServiceStack.Extensions.Tests/GrpcTodoTests.cs" target="_blank" rel="noopener noreferrer">GrpcTodoTests.cs</a></li><li><a href="https://github.com/ServiceStack/ServiceStack/blob/master/tests/ServiceStack.Extensions.Tests/GrpcAuthTests.cs" target="_blank" rel="noopener noreferrer">GrpcAuthTests.cs</a></li><li><a href="https://github.com/ServiceStack/ServiceStack/blob/master/tests/ServiceStack.Extensions.Tests/GrpcAutoQueryTests.cs" target="_blank" rel="noopener noreferrer">GrpcAutoQueryTests.cs</a></li><li><a href="https://github.com/ServiceStack/ServiceStack/blob/master/tests/ServiceStack.Extensions.Tests/GrpcServerEventsTests.cs" target="_blank" rel="noopener noreferrer">GrpcServerEventsTests.cs</a></li></ul><h2 id="vb-net-generic-grpcserviceclient-todoworld-example" tabindex="-1"><a href="http://VB.NET" target="_blank" rel="noopener noreferrer">VB.NET</a> Generic GrpcServiceClient TodoWorld Example <a class="header-anchor" href="#vb-net-generic-grpcserviceclient-todoworld-example" aria-hidden="true">#</a></h2><p><a href="https://youtu.be/9XTy3eOdpHw" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/grpc/vb-generic.png" alt=""></a></p><div class="info custom-block"><p class="custom-block-title">YouTube</p><p><a href="https://youtu.be/9XTy3eOdpHw" target="_blank" rel="noopener noreferrer">youtu.be/9XTy3eOdpHw</a></p></div><p>Install <a href="https://docs.servicestack.net/dotnet-tool" target="_blank" rel="noopener noreferrer">x dotnet tool</a>:</p>`,10),_=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet tool install --global x")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),S=n("p",null,[s("Create a new "),n("a",{href:"http://VB.NET",target:"_blank",rel:"noopener noreferrer"},"VB.NET"),s(" App:")],-1),C=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet new console -lang vb")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),M=n("p",null,[s("Add "),n("a",{href:"https://www.nuget.org/packages/ServiceStack.GrpcClient",target:"_blank",rel:"noopener noreferrer"},"ServiceStack.GrpcClient"),s(" NuGet Package:")],-1),G=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet add package ServiceStack.GrpcClient")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),q=n("p",null,"Add TodoWorld DTOs:",-1),A=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,[s("x vb "),n("a",{href:"https://todoworld.servicestack.net",target:"_blank",rel:"noopener noreferrer"},"https://todoworld.servicestack.net")])])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),E=a(`<p>Use TodoWorld DTOs with generic <code>GrpcServiceClient</code> to call TodoWorld gRPC Service:</p><h3 id="vb-net-grpc-insecure-example" tabindex="-1"><a href="http://VB.NET" target="_blank" rel="noopener noreferrer">VB.NET</a> gRPC insecure Example <a class="header-anchor" href="#vb-net-grpc-insecure-example" aria-hidden="true">#</a></h3><div class="language-vb"><pre><code><span class="token keyword">Imports</span> System
<span class="token keyword">Imports</span> System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic
<span class="token keyword">Imports</span> System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks
<span class="token keyword">Imports</span> ServiceStack
<span class="token keyword">Imports</span> TodoWorld<span class="token punctuation">.</span>ServiceModel

<span class="token keyword">Module</span> Program

    Async <span class="token keyword">Function</span> Todo<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> Task
        ProtoBuf<span class="token punctuation">.</span>Grpc<span class="token punctuation">.</span>Client<span class="token punctuation">.</span>GrpcClientFactory<span class="token punctuation">.</span>AllowUnencryptedHttp2 <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token keyword">Dim</span> client <span class="token operator">=</span> <span class="token keyword">new</span> GrpcServiceClient<span class="token punctuation">(</span><span class="token string">&quot;http://todoworld.servicestack.net:5054&quot;</span><span class="token punctuation">)</span>
        
        <span class="token keyword">Dim</span> response <span class="token operator">=</span> Await client<span class="token punctuation">.</span>GetAsync<span class="token punctuation">(</span><span class="token keyword">New</span> Hello <span class="token keyword">With</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;gRPC VB.NET&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

        Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span>response<span class="token punctuation">.</span>Result<span class="token punctuation">)</span>
    <span class="token keyword">End</span> <span class="token keyword">Function</span>

    <span class="token keyword">Sub</span> Main<span class="token punctuation">(</span>args <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        Task<span class="token punctuation">.</span>WaitAll<span class="token punctuation">(</span>Todo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">End</span> <span class="token keyword">Sub</span>

<span class="token keyword">End</span> <span class="token keyword">Module</span>
</code></pre></div><p>Override <code>Program.vb</code> with the above <a href="http://VB.NET" target="_blank" rel="noopener noreferrer">VB.NET</a> Example:</p>`,4),P=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"x mix todoworld-vb")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),V=n("p",null,"Run example:",-1),B=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet run")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),R=a(`<h3 id="vb-net-grpc-ssl-example" tabindex="-1"><a href="http://VB.NET" target="_blank" rel="noopener noreferrer">VB.NET</a> gRPC SSL Example <a class="header-anchor" href="#vb-net-grpc-ssl-example" aria-hidden="true">#</a></h3><div class="language-vb"><pre><code><span class="token keyword">Imports</span> System
<span class="token keyword">Imports</span> System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic
<span class="token keyword">Imports</span> System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks
<span class="token keyword">Imports</span> System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>Cryptography<span class="token punctuation">.</span>X509Certificates
<span class="token keyword">Imports</span> ServiceStack
<span class="token keyword">Imports</span> TodoWorld<span class="token punctuation">.</span>ServiceModel

<span class="token keyword">Module</span> Program

    Async <span class="token keyword">Function</span> Todo<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> Task
        <span class="token keyword">Dim</span> client <span class="token operator">=</span> <span class="token keyword">new</span> GrpcServiceClient<span class="token punctuation">(</span><span class="token string">&quot;https://todoworld.servicestack.net:50051&quot;</span><span class="token punctuation">,</span> 
                <span class="token keyword">new</span> X509Certificate2<span class="token punctuation">(</span><span class="token string">&quot;https://todoworld.servicestack.net/grpc.crt&quot;</span><span class="token punctuation">.</span>GetBytesFromUrl<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                GrpcUtils<span class="token punctuation">.</span>AllowSelfSignedCertificatesFrom<span class="token punctuation">(</span><span class="token string">&quot;todoworld.servicestack.net&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        
        <span class="token keyword">Dim</span> response <span class="token operator">=</span> Await client<span class="token punctuation">.</span>GetAsync<span class="token punctuation">(</span><span class="token keyword">New</span> Hello <span class="token keyword">With</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;gRPC VB.NET&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

        Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span>response<span class="token punctuation">.</span>Result<span class="token punctuation">)</span>
    <span class="token keyword">End</span> <span class="token keyword">Function</span>

    <span class="token keyword">Sub</span> Main<span class="token punctuation">(</span>args <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        Task<span class="token punctuation">.</span>WaitAll<span class="token punctuation">(</span>Todo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">End</span> <span class="token keyword">Sub</span>

<span class="token keyword">End</span> <span class="token keyword">Module</span>
</code></pre></div><p>Override <code>Program.vb</code> with the above <a href="http://VB.NET" target="_blank" rel="noopener noreferrer">VB.NET</a> Example:</p>`,3),I=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"x mix todoworld-vb-ssl")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),N=n("p",null,"Run example:",-1),L=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet run")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),j=a(`<h3 id="vb-net-local-development-grpc-ssl-crud-example" tabindex="-1"><a href="http://VB.NET" target="_blank" rel="noopener noreferrer">VB.NET</a> Local Development gRPC SSL CRUD Example <a class="header-anchor" href="#vb-net-local-development-grpc-ssl-crud-example" aria-hidden="true">#</a></h3><div class="language-vb"><pre><code><span class="token keyword">Imports</span> System
<span class="token keyword">Imports</span> System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic
<span class="token keyword">Imports</span> System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks
<span class="token keyword">Imports</span> ServiceStack
<span class="token keyword">Imports</span> TodoWorld<span class="token punctuation">.</span>ServiceModel
<span class="token keyword">Imports</span> TodoWorld<span class="token punctuation">.</span>ServiceModel<span class="token punctuation">.</span>Types

<span class="token keyword">Module</span> Program
    <span class="token keyword">Function</span> SeqCount<span class="token punctuation">(</span>c <span class="token keyword">As</span> List<span class="token punctuation">(</span><span class="token keyword">Of</span> Todo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">As</span> <span class="token keyword">Integer</span>
        <span class="token keyword">Return</span> <span class="token keyword">IF</span><span class="token punctuation">(</span>c <span class="token keyword">Is</span> <span class="token boolean">Nothing</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Count<span class="token punctuation">)</span>
    <span class="token keyword">End</span> <span class="token keyword">Function</span>
    
    Async <span class="token keyword">Function</span> TodoExample<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">As</span> Task
        <span class="token comment">&#39; Certificate registration not required when using trusted local development certificate  </span>
        <span class="token keyword">Dim</span> client <span class="token operator">=</span> <span class="token keyword">new</span> GrpcServiceClient<span class="token punctuation">(</span><span class="token string">&quot;https://localhost:5001&quot;</span><span class="token punctuation">)</span>
        Await client<span class="token punctuation">.</span>PostAsync<span class="token punctuation">(</span><span class="token keyword">New</span> ResetTodos<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment">&#39;GET /todos</span>
        <span class="token keyword">Dim</span> all <span class="token operator">=</span> Await client<span class="token punctuation">.</span>GetAsync<span class="token punctuation">(</span><span class="token keyword">New</span> GetTodos<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">$&quot;todos: {SeqCount(all.Results)}&quot;</span><span class="token punctuation">)</span>

        <span class="token comment">&#39;POST /todos</span>
        <span class="token keyword">Dim</span> todo <span class="token keyword">As</span> Todo <span class="token operator">=</span> <span class="token punctuation">(</span>Await client<span class="token punctuation">.</span>PostAsync<span class="token punctuation">(</span><span class="token keyword">New</span> CreateTodo <span class="token keyword">With</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">&quot;ServiceStack&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Result
        Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">$&quot;new todo Id: {todo.Id}, Title: {todo.Title}&quot;</span><span class="token punctuation">)</span>
            
        <span class="token comment">&#39;GET /todos/1</span>
        todo <span class="token operator">=</span> <span class="token punctuation">(</span>Await client<span class="token punctuation">.</span>GetAsync<span class="token punctuation">(</span><span class="token keyword">New</span> GetTodo <span class="token keyword">With</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span>Id <span class="token operator">=</span> todo<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Result
        Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">$&quot;get todo Id: {todo.Id}, Title: {todo.Title}&quot;</span><span class="token punctuation">)</span>

        <span class="token comment">&#39;GET /todos</span>
        all <span class="token operator">=</span> await client<span class="token punctuation">.</span>GetAsync<span class="token punctuation">(</span><span class="token keyword">new</span> GetTodos<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">$&quot;todos: {SeqCount(all.Results)}&quot;</span><span class="token punctuation">)</span>

        <span class="token comment">&#39;PUT /todos/1</span>
        Await client<span class="token punctuation">.</span>PutAsync<span class="token punctuation">(</span><span class="token keyword">New</span> UpdateTodo <span class="token keyword">With</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span>Id <span class="token operator">=</span> todo<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> <span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">&quot;gRPC&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

        <span class="token comment">&#39;GET /todos/1</span>
        todo <span class="token operator">=</span> <span class="token punctuation">(</span>Await client<span class="token punctuation">.</span>GetAsync<span class="token punctuation">(</span><span class="token keyword">New</span> GetTodo <span class="token keyword">With</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span>Id <span class="token operator">=</span> todo<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Result
        Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">&quot;updated todo Title: {todo.Title}&quot;</span><span class="token punctuation">)</span>

        <span class="token comment">&#39;DELETE /todos/1</span>
        Await client<span class="token punctuation">.</span>DeleteAsync<span class="token punctuation">(</span><span class="token keyword">new</span> DeleteTodo <span class="token keyword">With</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span>Id <span class="token operator">=</span> todo<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span>

        <span class="token comment">&#39;GET /todos</span>
        all <span class="token operator">=</span> Await client<span class="token punctuation">.</span>GetAsync<span class="token punctuation">(</span><span class="token keyword">new</span> GetTodos<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">$&quot;todos: {SeqCount(all.Results)}&quot;</span><span class="token punctuation">)</span>
        
    <span class="token keyword">End</span> <span class="token keyword">Function</span>
    
    <span class="token keyword">Sub</span> Main<span class="token punctuation">(</span>args <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        Task<span class="token punctuation">.</span>WaitAll<span class="token punctuation">(</span>TodoExample<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">End</span> <span class="token keyword">Sub</span>
    
<span class="token keyword">End</span> <span class="token keyword">Module</span>
</code></pre></div><p>Refer to <a href="https://github.com/NetCoreApps/todo-world/tree/master/src/clients/vb-generic" target="_blank" rel="noopener noreferrer">/src/clients/vb-generic</a> for a complete example project.</p><h2 id="f-generic-grpcserviceclient-todoworld-example" tabindex="-1">F# Generic GrpcServiceClient TodoWorld Example <a class="header-anchor" href="#f-generic-grpcserviceclient-todoworld-example" aria-hidden="true">#</a></h2><p><a href="https://youtu.be/y3MBaapcN-0" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/grpc/fsharp-generic.png" alt=""></a></p><div class="info custom-block"><p class="custom-block-title">YouTube</p><p><a href="https://youtu.be/y3MBaapcN-0" target="_blank" rel="noopener noreferrer">youtu.be/y3MBaapcN-0</a></p></div><p>Install <a href="https://docs.servicestack.net/dotnet-tool" target="_blank" rel="noopener noreferrer">x dotnet tool</a>:</p>`,7),W=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet tool install --global x")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),D=n("p",null,"Create a new F# App:",-1),F=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet new console -lang f#")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),H=n("p",null,[s("Add "),n("a",{href:"https://www.nuget.org/packages/ServiceStack.GrpcClient",target:"_blank",rel:"noopener noreferrer"},"ServiceStack.GrpcClient"),s(" NuGet Package:")],-1),U=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet add package ServiceStack.GrpcClient")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),O=n("p",null,[s("Add "),n("a",{href:"https://www.nuget.org/packages/TaskBuilder.fs",target:"_blank",rel:"noopener noreferrer"},"TaskBuilder.fs"),s(" NuGet Package")],-1),$=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet add package TaskBuilder.fs")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),X=n("p",null,"Add TodoWorld DTOs:",-1),Q=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,[s("x fsharp "),n("a",{href:"https://todoworld.servicestack.net",target:"_blank",rel:"noopener noreferrer"},"https://todoworld.servicestack.net")])])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),J=a(`<p>Register <code>dto.fs</code> source file to <code>*.fsproj</code>:</p><div class="language-xml"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Compile</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dtos.fs<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Compile</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Program.fs<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemGroup</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Use TodoWorld DTOs with generic <code>GrpcServiceClient</code> to call TodoWorld gRPC Service:</p><h3 id="f-grpc-insecure-example" tabindex="-1">F# gRPC insecure Example <a class="header-anchor" href="#f-grpc-insecure-example" aria-hidden="true">#</a></h3><div class="language-fsharp"><pre><code><span class="token keyword">open</span> System
<span class="token keyword">open</span> System<span class="token punctuation">.</span>Threading
<span class="token keyword">open</span> System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks
<span class="token keyword">open</span> ServiceStack
<span class="token keyword">open</span> TodoWorld<span class="token punctuation">.</span>ServiceModel
<span class="token keyword">open</span> FSharp<span class="token punctuation">.</span>Control<span class="token punctuation">.</span>Tasks<span class="token punctuation">.</span>V2

<span class="token keyword">let</span> todo <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> 
    <span class="token computation-expression keyword">task</span> <span class="token punctuation">{</span>
        ProtoBuf<span class="token punctuation">.</span>Grpc<span class="token punctuation">.</span>Client<span class="token punctuation">.</span>GrpcClientFactory<span class="token punctuation">.</span>AllowUnencryptedHttp2 <span class="token operator">=</span> <span class="token keyword">true</span>
        <span class="token keyword">let</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GrpcServiceClient</span><span class="token punctuation">(</span><span class="token string">&quot;http://todoworld.servicestack.net:5054&quot;</span><span class="token punctuation">)</span>
        
        <span class="token keyword">let!</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Hello</span><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;gRPC F#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        printfn <span class="token string">&quot;%s&quot;</span> response<span class="token punctuation">.</span>Result
    <span class="token punctuation">}</span>

<span class="token annotation"><span class="token punctuation">[&lt;</span><span class="token class-name">EntryPoint</span><span class="token punctuation">&gt;]</span></span>
<span class="token keyword">let</span> main argv <span class="token operator">=</span>
    <span class="token function">todo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token number">0</span>
</code></pre></div><p>Override <code>Program.fs</code> with the above F# Example:</p><pre><code>$ x mix todoworld-fs
</code></pre><p>Run example:</p><pre><code>$ dotnet run
</code></pre><h3 id="f-grpc-ssl-example" tabindex="-1">F# gRPC SSL Example <a class="header-anchor" href="#f-grpc-ssl-example" aria-hidden="true">#</a></h3><div class="language-fsharp"><pre><code><span class="token keyword">open</span> System
<span class="token keyword">open</span> System<span class="token punctuation">.</span>Threading
<span class="token keyword">open</span> System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks
<span class="token keyword">open</span> System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>Cryptography<span class="token punctuation">.</span>X509Certificates
<span class="token keyword">open</span> ServiceStack
<span class="token keyword">open</span> TodoWorld<span class="token punctuation">.</span>ServiceModel
<span class="token keyword">open</span> FSharp<span class="token punctuation">.</span>Control<span class="token punctuation">.</span>Tasks<span class="token punctuation">.</span>V2

<span class="token keyword">let</span> todo <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> 
    <span class="token computation-expression keyword">task</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GrpcServiceClient</span><span class="token punctuation">(</span><span class="token string">&quot;https://todoworld.servicestack.net:50051&quot;</span><span class="token punctuation">,</span> 
                <span class="token keyword">new</span> <span class="token class-name">X509Certificate2</span><span class="token punctuation">(</span><span class="token string">&quot;https://todoworld.servicestack.net/grpc.crt&quot;</span><span class="token punctuation">.</span><span class="token function">GetBytesFromUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                GrpcUtils<span class="token punctuation">.</span><span class="token function">AllowSelfSignedCertificatesFrom</span><span class="token punctuation">(</span><span class="token string">&quot;todoworld.servicestack.net&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        
        <span class="token keyword">let!</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Hello</span><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;gRPC F#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        printfn <span class="token string">&quot;%s&quot;</span> response<span class="token punctuation">.</span>Result
    <span class="token punctuation">}</span>

<span class="token annotation"><span class="token punctuation">[&lt;</span><span class="token class-name">EntryPoint</span><span class="token punctuation">&gt;]</span></span>
<span class="token keyword">let</span> main argv <span class="token operator">=</span>
    <span class="token function">todo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token number">0</span>
</code></pre></div><p>Override <code>Program.fs</code> with the above F# Example:</p>`,12),K=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"x mix todoworld-fs-ssl")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),Y=n("p",null,"Run example:",-1),z=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet run")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),Z=a(`<h3 id="f-local-development-grpc-ssl-crud-example" tabindex="-1">F# Local Development gRPC SSL CRUD Example <a class="header-anchor" href="#f-local-development-grpc-ssl-crud-example" aria-hidden="true">#</a></h3><div class="language-fsharp"><pre><code><span class="token keyword">open</span> System
<span class="token keyword">open</span> System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic
<span class="token keyword">open</span> System<span class="token punctuation">.</span>Threading
<span class="token keyword">open</span> System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks
<span class="token keyword">open</span> ServiceStack
<span class="token keyword">open</span> TodoWorld<span class="token punctuation">.</span>ServiceModel
<span class="token keyword">open</span> FSharp<span class="token punctuation">.</span>Control<span class="token punctuation">.</span>Tasks<span class="token punctuation">.</span>V2

<span class="token keyword">let</span> todo <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> 
    <span class="token keyword">let</span> seqCount <span class="token punctuation">(</span>c<span class="token punctuation">:</span> <span class="token class-name">List</span><span class="token operator">&lt;</span>Todo<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">if</span> c <span class="token operator">&lt;&gt;</span> <span class="token keyword">null</span> <span class="token keyword">then</span> c<span class="token punctuation">.</span>Count <span class="token keyword">else</span> <span class="token number">0</span>    
    <span class="token computation-expression keyword">task</span> <span class="token punctuation">{</span>
        <span class="token comment">// Certificate registration not required when using trusted local development certificate  </span>
        <span class="token keyword">let</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GrpcServiceClient</span><span class="token punctuation">(</span><span class="token string">&quot;https://localhost:5001&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">do</span><span class="token operator">!</span> client<span class="token punctuation">.</span><span class="token function">PostAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResetTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment">//POST /todos</span>
        <span class="token keyword">let!</span> t <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">PostAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CreateTodo</span><span class="token punctuation">(</span>Title <span class="token operator">=</span> <span class="token string">&quot;ServiceStack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> todo <span class="token operator">=</span> t<span class="token punctuation">.</span>Result<span class="token punctuation">;</span>
        printfn <span class="token string">&quot;new todo Id: %i, Title: %s&quot;</span> todo<span class="token punctuation">.</span>Id todo<span class="token punctuation">.</span>Title

        <span class="token comment">//GET /todos</span>
        <span class="token keyword">let!</span> all <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GetTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        printfn <span class="token string">&quot;todos: %i&quot;</span> <span class="token punctuation">(</span>seqCount all<span class="token punctuation">.</span>Results<span class="token punctuation">)</span>
        
        <span class="token comment">//GET /todos/1</span>
        <span class="token keyword">let!</span> t <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GetTodo</span><span class="token punctuation">(</span>Id <span class="token operator">=</span> todo<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> todo <span class="token operator">=</span> t<span class="token punctuation">.</span>Result<span class="token punctuation">;</span>
        printfn <span class="token string">&quot;get todo Id: %i, Title: %s&quot;</span> todo<span class="token punctuation">.</span>Id todo<span class="token punctuation">.</span>Title

        <span class="token comment">//GET /todos</span>
        <span class="token keyword">let!</span> all <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GetTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        printfn <span class="token string">&quot;todos: %i&quot;</span> <span class="token punctuation">(</span>seqCount all<span class="token punctuation">.</span>Results<span class="token punctuation">)</span>
        
        <span class="token comment">//PUT /todos/1</span>
        <span class="token keyword">do</span><span class="token operator">!</span> client<span class="token punctuation">.</span><span class="token function">PutAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UpdateTodo</span><span class="token punctuation">(</span>Id <span class="token operator">=</span> todo<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> Title <span class="token operator">=</span> <span class="token string">&quot;gRPC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment">//GET /todos/1</span>
        <span class="token keyword">let!</span> t <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GetTodo</span><span class="token punctuation">(</span>Id <span class="token operator">=</span> todo<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> todo <span class="token operator">=</span> t<span class="token punctuation">.</span>Result<span class="token punctuation">;</span>
        printfn <span class="token string">&quot;updated todo Title: %s&quot;</span> todo<span class="token punctuation">.</span>Title

        <span class="token comment">//DELETE /todos/1</span>
        <span class="token keyword">do</span><span class="token operator">!</span> client<span class="token punctuation">.</span><span class="token function">DeleteAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteTodo</span><span class="token punctuation">(</span>Id <span class="token operator">=</span> todo<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment">//GET /todos</span>
        <span class="token keyword">let!</span> all <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GetTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        printfn <span class="token string">&quot;todos: %i&quot;</span> <span class="token punctuation">(</span>seqCount all<span class="token punctuation">.</span>Results<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

<span class="token annotation"><span class="token punctuation">[&lt;</span><span class="token class-name">EntryPoint</span><span class="token punctuation">&gt;]</span></span>
<span class="token keyword">let</span> main argv <span class="token operator">=</span>
    <span class="token function">todo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token number">0</span>
</code></pre></div><p>Refer to <a href="https://github.com/NetCoreApps/todo-world/tree/master/src/clients/fsharp-generic" target="_blank" rel="noopener noreferrer">/src/clients/fsharp-generic</a> for a complete example project.</p>`,3),nn=[c,l,i,r,u,k,d,w,h,g,v,y,m,x,f,b,T,_,S,C,M,G,q,A,E,P,V,B,R,I,N,L,j,W,D,F,H,U,O,$,X,Q,J,K,Y,z,Z];function sn(an,tn,on,en,pn,cn){return o(),e("div",null,nn)}var un=t(p,[["render",sn]]);export{rn as __pageData,un as default};
