import{_ as t}from"./chunks/init-rider-ts-client.04b2ee7b.js";import{_ as s}from"./chunks/mjs-intellisense.7d2acf14.js";import{E as o}from"./chunks/empty-projects.df09c42f.js";import{o as p,c as r,e as l,u as c,d as e,b as a,a as n}from"./app.2aea72c0.js";var i="/assets/web-hello.92f6a0df.png";const u=e("p",null,"This is a quick walkthrough of getting your first web service up and running whilst having a look at the how some of the different components work.",-1),d=e("h2",{id:"step-1-install-the-x-dotnet-tool",tabindex:"-1"},[a("Step 1: Install the x dotnet tool "),e("a",{class:"header-anchor",href:"#step-1-install-the-x-dotnet-tool","aria-hidden":"true"},"#")],-1),h=e("p",null,[a("First we want to install the "),e("a",{href:"/dotnet-tool"},"x dotnet tool"),a(":")],-1),k=e("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[e("div",{class:"flex-grow bg-gray-800"},[e("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[e("p",null,"dotnet tool install --global x")])]),e("div",{class:"flex"},[e("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[e("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),e("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),m=n('<p>The <a href="/dotnet-tool">dotnet tools</a> are ServiceStack&#39;s versatile companion giving you quick access to a lot of its high-level features including generating mobile, web &amp; desktop DTOs with <a href="/add-servicestack-reference">Add ServiceStack Reference</a> generating <a href="/grpc">gRPC Clients and proto messages</a>, quickly <a href="/mix-tool">apply gists</a> to your project enabled by ServiceStack&#39;s effortless <a href="/modular-startup">no-touch Modular features</a>, <a href="/post-command">command-line API access</a>, it even includes a <a href="https://sharpscript.net/lisp/" target="_blank" rel="noopener noreferrer">lisp REPL</a> should you need to explore your <a href="https://sharpscript.net/lisp/#techstacks-tcp-lisp-repl-demo" target="_blank" rel="noopener noreferrer">remote .NET Apps in real-time</a>.</p><h2 id="step-2-selecting-a-template" tabindex="-1">Step 2: Selecting a template <a class="header-anchor" href="#step-2-selecting-a-template" aria-hidden="true">#</a></h2><p>Importantly, the dotnet tools lets you create <a href="/dotnet-new">.NET 6, .NET Framework</a> and <a href="/templates-corefx">ASP.NET Core on .NET Framework</a> projects. Unless you&#39;re restricted to working with .NET Framework you&#39;ll want to start with a <a href="/dotnet-new#usage">.NET 6 project template</a>, for this example we&#39;ll start with the Empty <a href="https://github.com/NetCoreTemplates/web" target="_blank" rel="noopener noreferrer">web</a> template which implicitly uses the folder name for the Project Name:</p>',3),g=e("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[e("div",{class:"flex-grow bg-gray-800"},[e("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[e("p",null,"x new web WebApp")])]),e("div",{class:"flex"},[e("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[e("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),e("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),v=n('<h2 id="step-3-run-your-project" tabindex="-1">Step 3: Run your project <a class="header-anchor" href="#step-3-run-your-project" aria-hidden="true">#</a></h2><p>Press <code>Ctrl+F5</code> to run your project!</p><p>You should see an already working API integration using <a href="/javascript-client">@servicestack/client</a> library to call your App&#39;s <a href="/javascript-add-servicestack-reference">JavaScript DTOs</a> and links to calling your API from <a href="/api-explorer">API Explorer</a>:</p><p><a href="https://web.web-templates.io"><img class="max-w-lg" src="'+i+'"></a></p><h4 id="watched-builds" tabindex="-1">Watched builds <a class="header-anchor" href="#watched-builds" aria-hidden="true">#</a></h4><p>A recommended alternative to running your project from your IDE is to run a watched build using <code>dotnet watch</code> from a terminal:</p>',6),w=e("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[e("div",{class:"flex-grow bg-gray-800"},[e("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[e("p",null,"dotnet watch")])]),e("div",{class:"flex"},[e("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[e("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),e("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),f=n(`<p>Where it will automatically rebuild &amp; restart your App when it detects any changes to your App&#39;s source files.</p><h3 id="how-does-it-work" tabindex="-1">How does it work? <a class="header-anchor" href="#how-does-it-work" aria-hidden="true">#</a></h3><p>Now that your new project is running, let&#39;s have a look at what we have. The template comes with a single web service route which comes from the Request DTO (Data Transfer Object) which is located in the <a href="https://github.com/NetCoreTemplates/web/blob/master/MyApp.ServiceModel/Hello.cs" target="_blank" rel="noopener noreferrer">Hello.cs</a> file:</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;/hello/{Name}&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hello</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IReturn<span class="token punctuation">&lt;</span>HelloResponse<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloResponse</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Result <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>The <code>Route</code> attribute is specifying what path <code>/hello/{Name}</code> where <code>{Name}</code> binds its value to the public string property of <strong>Name</strong>.</p><p>Let&#39;s access the route to see what comes back. Go to the following URL in your address bar:</p><pre><code>/hello/world
</code></pre><p>You will see a snapshot of the Result in a HTML response format. To change the return format to Json, simply add <code>?format=json</code> to the end of the URL. You&#39;ll learn more about <a href="/formats">formats</a>, endpoints (URLs, etc) when you continue reading the documentation.</p><p>If we go back to the solution and find the WebApplication1.ServiceInterface and open the <strong>MyServices.cs</strong> file, we can have a look at the code that is responding to the browser, giving us the <strong>Result</strong> back.</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServices</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Service</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> <span class="token function">Any</span><span class="token punctuation">(</span><span class="token class-name">Hello</span> request<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HelloResponse</span> <span class="token punctuation">{</span> Result <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;Hello, </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">request<span class="token punctuation">.</span>Name</span><span class="token punctuation">}</span></span><span class="token string">!&quot;</span></span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>If we look at the code above, there are a few things to note. The name of the method <code>Any</code> means the server will run this method for any of the valid HTTP Verbs. Service methods are where you control what returns from your service.</p><h2 id="step-4-exploring-the-servicestack-solution" tabindex="-1">Step 4: Exploring the ServiceStack Solution <a class="header-anchor" href="#step-4-exploring-the-servicestack-solution" aria-hidden="true">#</a></h2><p>The Recommended structure below is built into all ServiceStackVS <a href="http://VS.NET" target="_blank" rel="noopener noreferrer">VS.NET</a> Templates where creating any new ServiceStack project will create a solution with a minimum of 4 projects below ensuring ServiceStack solutions starts off from an optimal logical project layout, laying the foundation for growing into a more maintainable, cohesive and reusable code-base:</p><img align="right" src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/solution-layout.png"><h3 id="host-project" tabindex="-1">Host Project <a class="header-anchor" href="#host-project" aria-hidden="true">#</a></h3><p>The Host project contains your AppHost which references and registers all your App&#39;s concrete dependencies in its IOC and is the central location where all App configuration and global behavior is maintained. It also references all Web Assets like Razor Views, JS, CSS, Images, Fonts, etc. that&#39;s needed to be deployed with the App. The AppHost is the top-level project which references all dependencies used by your App whose role is akin to an orchestrator and conduit where it decides what functionality is made available and which concrete implementations are used. By design it references all other (non-test) projects whilst nothing references it and as a goal should be kept free of any App or Business logic.</p><h3 id="serviceinterface-project" tabindex="-1">ServiceInterface Project <a class="header-anchor" href="#serviceinterface-project" aria-hidden="true">#</a></h3><p>The ServiceInterface project is the implementation project where all Business Logic and Services live which typically references every other project except the Host projects. Small and Medium projects can maintain all their implementation here where logic can be grouped under feature folders. Large solutions can split this project into more manageable cohesive and modular projects which we also recommend encapsulates any dependencies they might use.</p><h3 id="servicemodel-project" tabindex="-1">ServiceModel Project <a class="header-anchor" href="#servicemodel-project" aria-hidden="true">#</a></h3><p>The ServiceModel Project contains all your Application&#39;s DTOs which is what defines your Services contract, keeping them isolated from any Server implementation is how your Service is able to encapsulate its capabilities and make them available behind a remote facade. There should be only one ServiceModel project per solution which contains all your DTOs and should be implementation, dependency and logic-free which should only reference the impl/dep-free <strong>ServiceStack.Interfaces.dll</strong> contract assembly to ensure Service contracts are decoupled from its implementation, enforces interoperability ensuring that your Services don&#39;t mandate specific client implementations and will ensure this is the only project clients need to be able to call any of your Services by either referencing the <strong>ServiceModel.dll</strong> directly or downloading the DTOs from a remote ServiceStack instance using <a href="/add-servicestack-reference">Add ServiceStack Reference</a>:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/dtos-role.png" alt=""></p><h3 id="test-project" tabindex="-1">Test Project <a class="header-anchor" href="#test-project" aria-hidden="true">#</a></h3><p>The Unit Test project contains all your Unit and Integration tests. It&#39;s also a Host project that typically references all other non-Host projects in the solution and contains a combination of concrete and mock dependencies depending on what&#39;s being tested. See the <a href="/testing">Testing Docs</a> for more information on testing ServiceStack projects.</p><h2 id="learn-servicestack-guide" tabindex="-1">Learn ServiceStack Guide <a class="header-anchor" href="#learn-servicestack-guide" aria-hidden="true">#</a></h2><p>If you&#39;re new to ServiceStack we recommend stepping through <a href="https://servicestack.net/start/project-overview" target="_blank" rel="noopener noreferrer">ServiceStack&#39;s Getting Started Guide</a> to get familiar with the basics.</p><h2 id="api-client-examples" tabindex="-1">API Client Examples <a class="header-anchor" href="#api-client-examples" aria-hidden="true">#</a></h2><h3 id="jquery-ajax" tabindex="-1">jQuery Ajax <a class="header-anchor" href="#jquery-ajax" aria-hidden="true">#</a></h3><p>ServiceStack&#39;s clean Web Services makes it simple and intuitive to be able to call ServiceStack Services from any ajax client, e.g. from a traditional <a href="https://github.com/ServiceStack/Templates/blob/master/src/ServiceStackVS/BootstrapWebApp/BootstrapWebApp/default.cshtml" target="_blank" rel="noopener noreferrer">Bootstrap Website using jQuery</a>:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Type your name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>result<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#Name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keyup</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    $<span class="token punctuation">.</span><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&#39;/hello/&#39;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#result&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>Result<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="rich-jsonapiclient-typed-dtos" tabindex="-1">Rich JsonApiClient &amp; Typed DTOs <a class="header-anchor" href="#rich-jsonapiclient-typed-dtos" aria-hidden="true">#</a></h3><p>The modern recommended alternative to jQuery that works in all modern browsers is using your APIs built-in <a href="/javascript-add-servicestack-reference">JavaScript typed DTOs</a> with the <a href="/javascript-client">@servicestack/client</a> library from a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules" target="_blank" rel="noopener noreferrer">JavaScript Module</a>.</p><p>We recommend using an <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap" target="_blank" rel="noopener noreferrer">importmap</a> to specify where <strong>@servicestack/client</strong> should be loaded from, e.g:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">async</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://ga.jspm.io/npm:es-module-shims@1.6.3/dist/es-module-shims.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--safari--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>importmap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;imports&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;@servicestack/client&quot;</span><span class="token operator">:</span><span class="token string">&quot;https://unpkg.com/@servicestack/client@2/dist/servicestack-client.mjs&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>This lets us reference the <strong>@servicestack/client</strong> package name in our source code instead of its physical location:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>txtName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>result<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> JsonApiClient<span class="token punctuation">,</span> $1<span class="token punctuation">,</span> on <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@servicestack/client&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Hello <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/types/mjs&#39;</span>

<span class="token keyword">const</span> client <span class="token operator">=</span> JsonApiClient<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;#txtName&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">keyup</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> api <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">api</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span>el<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">$1</span><span class="token punctuation">(</span><span class="token string">&#39;#result&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> api<span class="token punctuation">.</span>response<span class="token punctuation">.</span>result
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="enable-static-analysis-and-intelli-sense" tabindex="-1">Enable static analysis and intelli-sense <a class="header-anchor" href="#enable-static-analysis-and-intelli-sense" aria-hidden="true">#</a></h3><p>For better IDE intelli-sense during development, save the annotated Typed DTOs to disk with the <a href="https://docs.servicestack.net/dotnet-tool" target="_blank" rel="noopener noreferrer">x dotnet tool</a>:</p>`,38),b=e("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[e("div",{class:"flex-grow bg-gray-800"},[e("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[e("p",null,"x mjs")])]),e("div",{class:"flex"},[e("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[e("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),e("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),y=n(`<p>Then reference it instead to enable IDE static analysis when calling Typed APIs from JavaScript:</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Hello <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/js/dtos.mjs&#39;</span>
client<span class="token punctuation">.</span><span class="token function">api</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>To also enable static analysis for <strong>@servicestack/client</strong>, install the dependency-free library as a dev dependency:</p>`,3),_=e("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[e("div",{class:"flex-grow bg-gray-800"},[e("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[e("p",null,"npm install -D @servicestack/client")])]),e("div",{class:"flex"},[e("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[e("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),e("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[e("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),S=n('<p>Where only its TypeScript definitions are used by the IDE during development to enable its type-checking and intelli-sense.</p><h3 id="rich-intelli-sense-support" tabindex="-1">Rich intelli-sense support <a class="header-anchor" href="#rich-intelli-sense-support" aria-hidden="true">#</a></h3><p>Where you&#39;ll be able to benefit from rich intelli-sense support in smart IDEs like <a href="https://www.jetbrains.com/rider/" target="_blank" rel="noopener noreferrer">Rider</a> for both the client library:</p><p><img src="'+t+'" alt=""></p><p>As well as your App&#39;s server generated DTOs:</p><p><img src="'+s+'" alt=""></p><p>So even simple Apps without complex bundling solutions or external dependencies can still benefit from a rich typed authoring experience without any additional build time or tooling complexity.</p><h2 id="create-empty-servicestack-apps" tabindex="-1">Create Empty ServiceStack Apps <a class="header-anchor" href="#create-empty-servicestack-apps" aria-hidden="true">#</a></h2>',8),j=n(`<h3 id="any-typescript-or-javascript-web-node-js-or-react-native-app" tabindex="-1">Any TypeScript or JavaScript Web, Node.js or React Native App <a class="header-anchor" href="#any-typescript-or-javascript-web-node-js-or-react-native-app" aria-hidden="true">#</a></h3><p>The same TypeScript <a href="/javascript-client">JsonServiceClient</a> can also be used in more sophisticated JavaScript Apps like <a href="/typescript-add-servicestack-reference#react-native-jsonserviceclient">React Native</a> to <a href="https://github.com/ServiceStackApps/typescript-server-events" target="_blank" rel="noopener noreferrer">Node.js Server Apps</a> such as this example using TypeScript &amp; <a href="https://vuejs.org/guide/scaling-up/sfc.html" target="_blank" rel="noopener noreferrer">Vue Single-File Components</a>:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>api.error<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ml-2 text-red-500<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ error.message }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ml-3 mt-2 text-2xl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ api.loading ? &#39;Loading...&#39; : api.response.result }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> JsonApiClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@servicestack/client&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Hello <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/dtos&quot;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> defineProps<span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> client <span class="token operator">=</span> JsonApiClient<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> api <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">api</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> props<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Compare and contrast with other major SPA JavaScript Frameworks:</p><ul><li><a href="https://github.com/NetCoreTemplates/vue-mjs/blob/main/MyApp/wwwroot/mjs/components/HelloApi.mjs" target="_blank" rel="noopener noreferrer">Vue 3 HelloApi.mjs</a></li><li><a href="https://github.com/NetCoreTemplates/vue-ssg/blob/main/ui/src/components/HelloApi.vue" target="_blank" rel="noopener noreferrer">Vue SSG using swrClient</a></li><li><a href="https://github.com/NetCoreTemplates/nextjs/blob/main/ui/components/intro.tsx" target="_blank" rel="noopener noreferrer">Next.js with swrClient</a></li><li><a href="https://github.com/NetCoreTemplates/react-spa/blob/master/MyApp/src/components/Home/HelloApi.tsx" target="_blank" rel="noopener noreferrer">React HelloApi.tsx</a></li><li><a href="https://github.com/NetCoreTemplates/angular-spa/blob/master/MyApp/src/app/home/HelloApi.ts" target="_blank" rel="noopener noreferrer">Angular HelloApi.ts</a></li><li><a href="https://github.com/NetCoreTemplates/svelte-spa/blob/master/MyApp/src/components/Home.svelte" target="_blank" rel="noopener noreferrer">Svelte Home.svelte</a></li><li><a href="https://github.com/NetCoreTemplates/aurelia-spa/blob/master/MyApp/src/resources/elements/hello.ts" target="_blank" rel="noopener noreferrer">Aurelia hello.ts</a></li><li><a href="https://github.com/NetCoreTemplates/angular-lite-spa/blob/master/MyApp/src/modules/app/home/hello.ts" target="_blank" rel="noopener noreferrer">Angular v4 hello.ts</a></li></ul><h3 id="web-mobile-and-desktop-apps" tabindex="-1">Web, Mobile and Desktop Apps <a class="header-anchor" href="#web-mobile-and-desktop-apps" aria-hidden="true">#</a></h3><p>Use <a href="/add-servicestack-reference">Add ServiceStack Reference</a> to enable typed integrations for the most popular languages to develop Web, Mobile &amp; Desktop Apps.</p><h3 id="full-net-project-templates" tabindex="-1">Full .NET Project Templates <a class="header-anchor" href="#full-net-project-templates" aria-hidden="true">#</a></h3><p>The above <code>init</code> projects allow you to create a minimal web app, to create a more complete ServiceStack App with the recommended project structure, start with one of our C# project templates instead:</p><h3 id="c-project-templates-overview" tabindex="-1"><a href="/templates-overview">C# Project Templates Overview</a> <a class="header-anchor" href="#c-project-templates-overview" aria-hidden="true">#</a></h3><h2 id="simple-modern-razor-pages-mvc-vue-3-tailwind-templates" tabindex="-1">Simple, Modern Razor Pages &amp; MVC Vue 3 Tailwind Templates <a class="header-anchor" href="#simple-modern-razor-pages-mvc-vue-3-tailwind-templates" aria-hidden="true">#</a></h2><p>The new Tailwind Razor Pages &amp; MVC Templates enable rapid development of Modern Tailwind Apps without the <a href="https://vue-mjs.web-templates.io/posts/javascript" target="_blank" rel="noopener noreferrer">pitfalls plaguing SPAs</a>:</p>`,12),T=e("iframe",{class:"video-hd",src:"https://www.youtube.com/embed/SyppvQB7IPs",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,-1),x=e("p",null,[a("All Vue Tailwind templates are pre-configured with our rich "),e("a",{href:"/vue/"},"Vue 3 Tailwind Components"),a(" library for maximum productivity:")],-1),A=e("iframe",{class:"video-hd",src:"https://www.youtube.com/embed/YIa0w6whe2U",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,-1),C=e("h2",{id:"advanced-jamstack-templates",tabindex:"-1"},[a("Advanced JAMStack Templates "),e("a",{class:"header-anchor",href:"#advanced-jamstack-templates","aria-hidden":"true"},"#")],-1),q=e("p",null,"For more sophisticated Apps that need the best web tooling that npm can offer checkout our JAMStack Vite Vue & SSG templates:",-1),M=e("iframe",{class:"video-hd",src:"https://www.youtube.com/embed/D-rU0lU_B4I",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,-1),I=e("p",null,"Or if you prefer Modern React Apps checkout the Next.js template:",-1),P=e("iframe",{class:"video-hd",src:"https://www.youtube.com/embed/3pPLRyPsO5A",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,-1),N=n('<p>For Blazor WASM and Server checkout our comprehensive <a href="/templates-blazor-tailwind">Blazor projects &amp; Tailwind components</a>.</p><h3 id="integrated-in-major-ides-and-popular-mobile-desktop-platforms" tabindex="-1">Integrated in Major IDEs and popular Mobile &amp; Desktop platforms <a class="header-anchor" href="#integrated-in-major-ides-and-popular-mobile-desktop-platforms" aria-hidden="true">#</a></h3><p>ServiceStack Services are also <a href="/why-servicestack#generate-instant-typed-apis-from-within-all-major-ides">easily consumable from all major Mobile and Desktop platforms</a> including native iPhone and iPad Apps on iOS with Swift, Mobile and Tablet Apps on Android with Java or Kotlin, OSX Desktop Applications as well as targeting the most popular .NET Mobile and Desktop platforms including Xamarin.iOS, Xamarin.Android, Windows Store, WPF and WinForms.</p><h2 id="instant-client-apps" tabindex="-1">Instant Client Apps <a class="header-anchor" href="#instant-client-apps" aria-hidden="true">#</a></h2><p>Generate working native client apps for your live ServiceStack services, in a variety of languages, instantly with our free managed service.</p><p>This tool enables your developers, and even your customers, to open a working example native application straight from the web to their favorite IDE.</p>',6),R=e("iframe",{class:"video-hd",src:"https://www.youtube.com/embed/GTnuMhvUayg",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,-1),H=e("h2",{id:"fundamentals-apphost-and-configuration",tabindex:"-1"},[a("Fundamentals - AppHost and Configuration "),e("a",{class:"header-anchor",href:"#fundamentals-apphost-and-configuration","aria-hidden":"true"},"#")],-1),E=e("p",null,[a("Walk through configuring your ServiceStack Application's "),e("code",null,"AppHost"),a(":")],-1),V=e("iframe",{class:"video-hd",src:"https://www.youtube.com/embed/mOpx5mUGoqI",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,-1),D=n('<h2 id="community-resources" tabindex="-1">Community Resources <a class="header-anchor" href="#community-resources" aria-hidden="true">#</a></h2><ul><li><a href="https://www.c-sharpcorner.com/UploadFile/shashijeevan/creating-a-simple-service-using-servicestack779/" target="_blank" rel="noopener noreferrer">Creating A Simple Service Using ServiceStack</a> by <a href="http://shashijeevan.net/author/shashijeevan/" target="_blank" rel="noopener noreferrer">Shashi Jeevan</a></li><li><a href="https://www.dotnetcurry.com/aspnet/1056/introducing-service-stack-tutorial" target="_blank" rel="noopener noreferrer">Introducing ServiceStack</a> by <a href="https://twitter.com/DotNetCurry" target="_blank" rel="noopener noreferrer">@dotnetcurry</a></li><li><a href="https://www.techrepublic.com/article/create-web-services-in-net-in-a-snap-with-servicestack/" target="_blank" rel="noopener noreferrer">Create web services in .NET in a snap with ServiceStack</a> by <a href="https://twitter.com/techrepublic" target="_blank" rel="noopener noreferrer">@techrepublic</a></li><li><a href="https://kborra.wordpress.com/2014/07/29/how-to-build-web-services-in-ms-net-using-service-stack/" target="_blank" rel="noopener noreferrer">How to build web services in MS.Net using ServiceStack</a> by <a href="http://kborra.wordpress.com/about/" target="_blank" rel="noopener noreferrer">@kishoreborra</a></li><li><a href="https://dilanperera.wordpress.com/2014/02/22/getting-started-with-servicestack-creating-a-service/" target="_blank" rel="noopener noreferrer">Getting started with ServiceStack \u2013 Creating a service</a></li><li><a href="https://debuggers.domains/post/servicestack-quick-start/" target="_blank" rel="noopener noreferrer">ServiceStack Quick Start</a> by <a href="https://github.com/aarondandy" target="_blank" rel="noopener noreferrer">@aarondandy</a></li><li><a href="https://www.pluralsight.com/courses/getting-started-aspdotnet-mvcservice-stack-bootstrap" target="_blank" rel="noopener noreferrer">Getting Started with ASP.NET MVC, ServiceStack and Bootstrap</a> by <a href="http://twitter.com/pluralsight" target="_blank" rel="noopener noreferrer">@pluralsight</a></li><li><a href="https://www.pluralsight.com/courses/building-web-application-open-source-software-on-windows" target="_blank" rel="noopener noreferrer">Building Web Applications with Open-Source Software on Windows</a> by <a href="http://twitter.com/pluralsight" target="_blank" rel="noopener noreferrer">@pluralsight</a></li><li><a href="https://www.antonydenyer.co.uk/2012-09-20-servicestack-the-way-i-like-it/" target="_blank" rel="noopener noreferrer">ServiceStack the way I like it</a> by <a href="https://twitter.com/tonydenyer" target="_blank" rel="noopener noreferrer">@tonydenyer</a></li><li><a href="https://www.mattjcowan.com/funcoding/2013/03/10/rest-api-with-llblgen-and-servicestack/" target="_blank" rel="noopener noreferrer">Generating a RESTful Api and UI from a database with LLBLGen</a> by <a href="https://twitter.com/mattjcowan" target="_blank" rel="noopener noreferrer">@mattjcowan</a></li><li><a href="https://korneliuk.blogspot.com/2012/08/servicestack-reusing-dtos.html" target="_blank" rel="noopener noreferrer">ServiceStack: Reusing DTOs</a> by <a href="https://twitter.com/korneliuk" target="_blank" rel="noopener noreferrer">@korneliuk</a></li><li><a href="https://blogs.lessthandot.com/index.php/WebDev/ServerProgramming/servicestack-restservice-and-easyhttp" target="_blank" rel="noopener noreferrer">ServiceStack, Rest Service and EasyHttp</a> by <a href="https://twitter.com/chrissie1" target="_blank" rel="noopener noreferrer">@chrissie1</a></li><li><a href="https://www.mattjcowan.com/funcoding/2012/05/04/building-a-web-api-in-sharepoint-2010-with-servicestack/" target="_blank" rel="noopener noreferrer">Building a Web API in SharePoint 2010 with ServiceStack</a></li><li><a href="https://dgondotnet.blogspot.com/2012/04/rest-raiding-servicestack.html" target="_blank" rel="noopener noreferrer">REST Raiding. ServiceStack</a> by <a href="http://www.blogger.com/profile/13468563783321963413" target="_blank" rel="noopener noreferrer">Daniel Gonzalez</a></li><li><a href="https://kylehodgson.com/2012/04/21/jquerymobile-and-service-stack-eventsmanager-tutorial-post-2/" target="_blank" rel="noopener noreferrer">JQueryMobile and ServiceStack: EventsManager tutorial</a> / <a href="https://kylehodgson.com/2012/04/23/jquerymobile-and-service-stack-eventsmanager-tutorial-post-3/" target="_blank" rel="noopener noreferrer">Part 3</a> by Kyle Hodgson</li><li><a href="https://kylehodgson.com/2012/04/18/like-wcf-only-cleaner-9/" target="_blank" rel="noopener noreferrer">Like WCF: Only cleaner!</a> by Kyle Hodgson</li><li><a href="https://www.philliphaydon.com/2012/02/21/service-stack-i-heart-you-my-conversion-from-wcf-to-ss/" target="_blank" rel="noopener noreferrer">ServiceStack I heart you. My conversion from WCF to SS</a> by <a href="https://twitter.com/philliphaydon" target="_blank" rel="noopener noreferrer">@philliphaydon</a></li><li><a href="https://codealoc.wordpress.com/2012/03/24/service-stack-vs-wcf-data-services/" target="_blank" rel="noopener noreferrer">ServiceStack vs WCF Data Services</a></li><li><a href="https://www.curlette.com/?p=161" target="_blank" rel="noopener noreferrer">Buildiing a Tridion WebService with jQuery and ServiceStack</a> by <a href="https://twitter.com/#!/robrtc" target="_blank" rel="noopener noreferrer">@robrtc</a></li><li><a href="https://www.ienablemuch.com/2012/05/anonymous-type-dynamic-servicestack.html" target="_blank" rel="noopener noreferrer">Anonymous type + Dynamic + ServiceStack == Consuming cloud has never been easier</a> by <a href="https://twitter.com/ienablemuch" target="_blank" rel="noopener noreferrer">@ienablemuch</a></li><li><a href="https://github.com/jfoshee/TryServiceStack" target="_blank" rel="noopener noreferrer">Handful of examples of using ServiceStack based on the ServiceStack.Hello Tutorial</a> by <a href="https://twitter.com/82unpluggd" target="_blank" rel="noopener noreferrer">@82unpluggd</a></li></ul>',2),z='{"title":"Create your first WebService","description":"","frontmatter":{"slug":"create-your-first-webservice","title":"Create your first WebService"},"headers":[{"level":2,"title":"Step 1: Install the x dotnet tool","slug":"step-1-install-the-x-dotnet-tool"},{"level":2,"title":"Step 2: Selecting a template","slug":"step-2-selecting-a-template"},{"level":2,"title":"Step 3: Run your project","slug":"step-3-run-your-project"},{"level":3,"title":"How does it work?","slug":"how-does-it-work"},{"level":2,"title":"Step 4: Exploring the ServiceStack Solution","slug":"step-4-exploring-the-servicestack-solution"},{"level":3,"title":"Host Project","slug":"host-project"},{"level":3,"title":"ServiceInterface Project","slug":"serviceinterface-project"},{"level":3,"title":"ServiceModel Project","slug":"servicemodel-project"},{"level":3,"title":"Test Project","slug":"test-project"},{"level":2,"title":"Learn ServiceStack Guide","slug":"learn-servicestack-guide"},{"level":2,"title":"API Client Examples","slug":"api-client-examples"},{"level":3,"title":"jQuery Ajax","slug":"jquery-ajax"},{"level":3,"title":"Rich JsonApiClient & Typed DTOs","slug":"rich-jsonapiclient-typed-dtos"},{"level":3,"title":"Enable static analysis and intelli-sense","slug":"enable-static-analysis-and-intelli-sense"},{"level":3,"title":"Rich intelli-sense support","slug":"rich-intelli-sense-support"},{"level":2,"title":"Create Empty ServiceStack Apps","slug":"create-empty-servicestack-apps"},{"level":3,"title":"Any TypeScript or JavaScript Web, Node.js or React Native App","slug":"any-typescript-or-javascript-web-node-js-or-react-native-app"},{"level":3,"title":"Web, Mobile and Desktop Apps","slug":"web-mobile-and-desktop-apps"},{"level":3,"title":"Full .NET Project Templates","slug":"full-net-project-templates"},{"level":3,"title":"C# Project Templates Overview","slug":"c-project-templates-overview"},{"level":2,"title":"Simple, Modern Razor Pages & MVC Vue 3 Tailwind Templates","slug":"simple-modern-razor-pages-mvc-vue-3-tailwind-templates"},{"level":2,"title":"Advanced JAMStack Templates","slug":"advanced-jamstack-templates"},{"level":3,"title":"Integrated in Major IDEs and popular Mobile & Desktop platforms","slug":"integrated-in-major-ides-and-popular-mobile-desktop-platforms"},{"level":2,"title":"Instant Client Apps","slug":"instant-client-apps"},{"level":2,"title":"Fundamentals - AppHost and Configuration","slug":"fundamentals-apphost-and-configuration"},{"level":2,"title":"Community Resources","slug":"community-resources"}],"relativePath":"create-your-first-webservice.md"}',W={},Q=Object.assign(W,{__name:"create-your-first-webservice",setup(B){return(O,J)=>(p(),r("div",null,[u,d,h,k,m,g,v,w,f,b,y,_,S,l(c(o)),j,T,x,A,C,q,M,I,P,N,R,H,E,V,D]))}});export{z as __pageData,Q as default};
