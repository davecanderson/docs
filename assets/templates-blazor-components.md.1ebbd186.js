import{_ as e}from"./chunks/gallery-splash.defebc1e.js";import{_ as o,a as c,b as l}from"./chunks/blazor-gallery-dark.e7390591.js";import{_ as u,a as r,b as i,c as k,d,e as g,f as m,g as y,h,i as v,j as b,k as w,l as q,m as f,n as x,o as C,p as A,q as T}from"./chunks/component-gallery.9f11605c.js";import{_ as F}from"./chunks/diffusion-CreateModifier.c4533fae.js";import{I as n}from"./chunks/iconify.2272db1b.js";import{o as _,c as B,d as a,e as s,u as t,a as p}from"./app.2aea72c0.js";const S=a("p",null,"ServiceStack.Blazor high-productivity components enable the rapid development of CRUD UIs in Blazor Server and WASM Apps:",-1),I=a("div",{class:"my-8 flex justify-center"},[a("iframe",{class:"video-hd",src:"https://www.youtube.com/embed/iKpQI2233nY",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""})],-1),z=p('<div id="blazor-component-gallery" class="mt-16 relative bg-white py-4"><div class="mx-auto max-w-md px-4 text-center sm:max-w-3xl sm:px-6 lg:max-w-7xl lg:px-8"><p class="mt-2 text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl">Blazor Gallery</p><p class="mx-auto mt-5 max-w-prose text-xl text-gray-500"> Discover ServiceStack.Blazor Rich UI Components and Integrated Features </p></div></div><p><a href="https://blazor-gallery.servicestack.net" target="_blank" rel="noopener noreferrer"><img src="'+e+'" alt=""></a></p><p>As our components support both hosting models we&#39;re maintaining identical Gallery sites running on both <strong>Blazor Server</strong> and <strong>WASM</strong>:</p><div class="mb-16 mx-auto mt-5 max-w-md sm:flex sm:justify-center md:mt-8"><div class="rounded-md shadow"><a href="https://blazor-gallery.servicestack.net" class="flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-8 py-3 text-base font-medium text-white hover:bg-indigo-700 md:py-4 md:px-10 md:text-lg hover:no-underline"> Blazor Server </a></div><div class="mt-3 rounded-md shadow sm:mt-0 sm:ml-3"><a href="https://blazor-gallery.jamstacks.net" class="flex w-full items-center justify-center rounded-md border border-transparent bg-white px-8 py-3 text-base font-medium text-indigo-600 hover:bg-gray-50 md:py-4 md:px-10 md:text-lg hover:no-underline"> Blazor WASM </a></div></div><p>For a closer look at ServiceStack.Blazor Components in action, download &amp; run them to see how good they&#39;ll run in your Environment:</p>',5),D={class:"flex flex-col"},P={href:"https://github.com/NetCoreApps/BlazorGallery",class:"text-xl text-gray-800"},M=a("span",null,"NetCoreApps/BlazorGallery",-1),E={href:"https://github.com/NetCoreApps/BlazorGalleryWasm",class:"mt-2 text-xl text-gray-800"},G=a("span",null,"NetCoreApps/BlazorGalleryWasm",-1),N={class:"pt-8 my-8 ml-20 flex flex-col items-center"},Q=a("h2",{id:"darkmode",class:"border-none text-4xl sm:text-5xl md:text-6xl tracking-tight font-extrabold"},[a("span",{class:"text-gray-800 mr-6"},"Dark Mode")],-1),L=p('<p>All ServiceStack.Blazor components take advantage of Tailwind DarkMode support to include full support for Dark Mode.</p><p><img src="'+o+`" alt=""></p><p><a href="https://tailwindcss.com" target="_blank" rel="noopener noreferrer">Tailwind</a> has revolutionized how we style our Web Apps with its <a href="https://tailwindcss.com/#mobile-first" target="_blank" rel="noopener noreferrer">mobile first</a> design system that&#39;s dramatically simplified creating maintainable responsive Web Apps. It also excels at adding support for <a href="https://tailwindcss.com/#dark-mode" target="_blank" rel="noopener noreferrer">Dark Mode</a> with its first-class <strong>dark:</strong> modifier allowing the use of standard tailwind classes to specify what elements should look like when viewed in <strong>Dark Mode</strong>, e.g:</p><div class="not-prose relative bg-slate-50 rounded-xl overflow-hidden dark:bg-slate-800/25"><div style="background-position:10px 10px;" class="absolute inset-0 bg-grid-slate-100 [mask-image:linear-gradient(0deg,#fff,rgba(255,255,255,0.6))] dark:bg-grid-slate-700/25 dark:[mask-image:linear-gradient(0deg,rgba(255,255,255,0.1),rgba(255,255,255,0.5))]"></div><div class="relative rounded-xl overflow-auto"><div class="grid grid-cols-1 sm:grid-cols-2"><div class="p-8 pt-7"><p class="mb-2 text-sm font-medium text-slate-500">Light mode</p><div class="bg-white rounded-lg px-6 py-8 ring-1 ring-slate-900/5 shadow-xl"><div><span class="inline-flex items-center justify-center p-2 bg-indigo-500 rounded-md shadow-lg"><svg class="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path></svg></span></div><h3 class="mt-5 text-base font-medium text-slate-900 tracking-tight">Writes Upside-Down</h3><p class="mt-2 text-sm text-slate-500"> The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space. </p></div></div><div class="bg-slate-900 p-8 pt-7"><p class="mb-2 text-sm font-medium text-slate-400">Dark mode</p><div class="bg-slate-800 rounded-lg px-6 py-8 ring-1 ring-slate-900/5 shadow-xl"><div><span class="inline-flex items-center justify-center p-2 bg-indigo-500 rounded-md shadow-lg"><svg class="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path></svg></span></div><h3 class="mt-5 text-base font-medium text-white tracking-tight">Writes Upside-Down</h3><p class="mt-2 text-sm text-slate-400"> The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space. </p></div></div></div></div><div class="absolute inset-0 pointer-events-none border border-black/5 rounded-xl dark:border-white/5"></div></div><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-white dark:bg-slate-800 rounded-lg px-6 py-8 ring-1 ring-slate-900/5 shadow-xl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inline-flex items-center justify-center p-2 bg-indigo-500 rounded-md shadow-lg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>h-6 w-6 text-white<span class="token punctuation">&quot;</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000/svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>none<span class="token punctuation">&quot;</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0 0 24 24<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>currentColor<span class="token punctuation">&quot;</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-slate-900 dark:text-white mt-5 text-base font-medium tracking-tight<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Writes Upside-Down<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-slate-500 dark:text-slate-400 mt-2 text-sm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="view-servicestack-blazor-in-dark-mode" tabindex="-1">View ServiceStack.Blazor in Dark Mode <a class="header-anchor" href="#view-servicestack-blazor-in-dark-mode" aria-hidden="true">#</a></h3><p>We&#39;re happy to announce that Dark Mode support is included in <strong>all ServiceStack.Blazor components</strong> and all Blazor Tailwind project templates where you&#39;ll be able to toggle on/off Dark Mode with the new <code>&lt;DarkModeToggle&gt;</code> component. Checkout this video to see how beautiful Dark Mode looks like in the latest ServiceStack.Blazor Components and Tailwind project templates:</p>`,7),R=a("div",{class:"my-8 flex justify-center"},[a("iframe",{class:"video-hd",src:"https://www.youtube.com/embed/8nwpC_B4AC4",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""})],-1),V=p('<p>For a more interactive view, use the right Dark Mode toggle to turn on/off Dark Mode in the embedded <a href="https://blazor-gallery.jamstacks.net/grid/contacts-meta" target="_blank" rel="noopener noreferrer">Blazor Gallery Contacts Page</a>:</p><iframe src="https://blazor-gallery.jamstacks.net/grid/contacts-meta/embed" class="w-full border-none h-[970px] w-[1330px] -ml-40"></iframe><p>Dark Mode is all implemented with CSS, controlled by toggling the <strong>dark</strong> class on the <code>&lt;html class=&quot;dark&quot;&gt;</code> element, <code>&lt;DarkModeToggle&gt;</code> also saves this user preference in <code>localStorage</code> where it&#39;s preserved across browser restarts.</p><h3 id="view-in-dark-mode" tabindex="-1">View in Dark Mode <a class="header-anchor" href="#view-in-dark-mode" aria-hidden="true">#</a></h3><p>The Blazor Tailwind templates also include the ability to override the users color scheme preference and open a page in dark or light mode with the <code>?dark</code> and <code>?light</code> query params:</p><div class="not-prose relative"><div class="grid grid-cols-1 sm:grid-cols-2 text-center"><div><a class="flex flex-col" href="https://blazor-server.jamstacks.net/?light"><div class="py-4">blazor-server.jamstacks.net/?light</div><img class="rounded-xl overflow-hidden" src="'+c+'"></a></div><div><a class="flex flex-col" href="https://blazor-server.jamstacks.net/?dark"><div class="py-4">blazor-server.jamstacks.net/?dark</div><img class="rounded-xl overflow-hidden" src="'+l+`"></a></div></div></div><h3 id="force-dark-mode" tabindex="-1">Force Dark Mode <a class="header-anchor" href="#force-dark-mode" aria-hidden="true">#</a></h3><p>If your App is best viewed in Dark Mode you can force it to use Dark Mode with <code>JS.init()</code> when initializing ServiceStack.Blazor&#39;s JS library in Blazor Server&#39;s <strong>_Layout.cshtml</strong> or Blazor WASM&#39;s <strong>index.html</strong>, e.g:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_framework/blazor.server.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/js/servicestack-blazor.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token constant">JS</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">colorScheme</span><span class="token operator">:</span><span class="token string">&#39;dark&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p class="hide-h2"></p><h2 id="blazor-tailwind-components" tabindex="-1">Blazor Tailwind Components <a class="header-anchor" href="#blazor-tailwind-components" aria-hidden="true">#</a></h2>`,11),U={id:"blazor-components",class:"mt-16 mb-8 ml-20 flex flex-col items-center"},j=a("h2",{class:"border-none text-4xl sm:text-5xl md:text-6xl tracking-tight font-extrabold"},[a("span",{class:"text-purple-600 mr-6"},"Blazor"),a("span",{class:"mr-6",style:{color:"#44A8B3"}},"Tailwind"),a("span",{class:"text-gray-800"},"Components")],-1),H=p(`<p>We encourage you to explore to the Blazor Gallery websites for the full preview, but we&#39;ll look at some of the Components here to give you some idea of the functionality available.</p><h3 id="datagrid" tabindex="-1">DataGrid <a class="header-anchor" href="#datagrid" aria-hidden="true">#</a></h3><p><code>DataGrid</code> is a versatile Component we expect to be heavily used for rendering any typed collection:</p><div class="language-cshtml"><pre><code>&lt;DataGrid Model=&quot;Track&quot; Items=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Track<span class="token punctuation">.</span>Results</span></span> /&gt;
</code></pre></div><p>Which by default renders results in a striped Tailwind Table:</p><p><img src="`+u+`" alt=""></p><p>Whose appearance can be styled to support many of the <a href="https://tailwindui.com/components/application-ui/lists/tables" target="_blank" rel="noopener noreferrer">Tailwind Table Styles</a> with the <code>TableStyles</code> Flag enum, e.g:</p><div class="language-cshtml"><pre><code>&lt;DataGrid Model=&quot;Track&quot; Items=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Track<span class="token punctuation">.</span>Results</span></span> TableStyle=&quot;TableStyle.VerticalLines&quot; /&gt;

&lt;DataGrid Model=&quot;Track&quot; Items=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Track<span class="token punctuation">.</span>Results</span></span> TableStyle=&quot;TableStyle.WhiteBackground&quot; /&gt;

&lt;DataGrid Model=&quot;Track&quot; Items=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Track<span class="token punctuation">.</span>Results</span></span> TableStyle=&quot;TableStyle.FullWidth&quot; /&gt;

&lt;DataGrid Model=&quot;Track&quot; Items=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Track<span class="token punctuation">.</span>Results</span></span> 
          TableStyle=&quot;TableStyle.UppercaseHeadings | TableStyle.FullWidth | TableStyle.VerticalLines&quot; /&gt;
</code></pre></div><p><img src="`+r+`" alt=""></p><p>It&#39;s a highly versatile component where you&#39;ll be able to control which columns are displayed and how they&#39;re formatted using <code>&lt;Column&gt;</code> definitions, e.g. here&#39;s how we can customize the table to look like Blazor&#39;s <a href="https://github.com/SteveSanderson/Blazor/blob/master/samples/ClientServerApp/ClientServerApp.Client/FetchData.cshtml" target="_blank" rel="noopener noreferrer">FetchData.cshtml</a> tabular results:</p><div class="language-cshtml"><pre><code>&lt;DataGrid Items=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">forecasts</span></span> class=&quot;max-w-screen-md&quot; TableStyle=&quot;TableStyle.StripedRows | TableStyle.UppercaseHeadings&quot;&gt;
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(WeatherForecast x) =&gt; x.Date<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dd/MM/yyyy<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Temp. (C)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(WeatherForecast x) =&gt; x.TemperatureC<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Temp. (F)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(WeatherForecast x) =&gt; x.TemperatureF<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(WeatherForecast x) =&gt; x.Summary<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DataGrid</span><span class="token punctuation">&gt;</span></span>

<span class="token block"><span class="token keyword">@code</span> <span class="token csharp language-csharp"><span class="token punctuation">{</span>
    <span class="token class-name">List<span class="token punctuation">&lt;</span>WeatherForecast<span class="token punctuation">&gt;</span></span> forecasts <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">OnInitializedAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        forecasts <span class="token operator">=</span> <span class="token keyword">await</span> Http<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetFromJsonAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span>WeatherForecast<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;data/weather.json&quot;</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span></span></span>
</code></pre></div><p><a href="https://blazor-gallery.servicestack.net/fetchdata" target="_blank" rel="noopener noreferrer"><img src="`+i+`" alt=""></a></p><p>Here&#39;s a more advanced example showing how to implement a responsive DataGrid by utilizing custom Header and Table Cell templates to define what columns and Headers are visible at different responsive breakpoints and how to enable different features like <strong>Row Selection</strong> and <strong>Filtering</strong> and examples of handling the Row and Header selected events App&#39;s can use for executing custom logic:</p><div class="language-cshtml"><pre><code>&lt;DataGrid Model=&quot;Booking&quot; Items=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Items</span></span> AllowSelection=&quot;true&quot; AllowFiltering=&quot;true&quot;
          HeaderSelected=&quot;HandleSelectedHeader&quot; RowSelected=&quot;HandleSelectedRow&quot;&gt;
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.Id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-gray-900<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.Name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">VisibleFrom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Breakpoint.ExtraLarge<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.RoomType<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Room <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>Type
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Column</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.RoomNumber<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Room <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>No
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Column</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.Cost<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>C<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.BookingStartDate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Formatter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FormatDate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">VisibleFrom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Breakpoint.Small<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span><span class="token punctuation">&gt;</span></span>
            Start<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Header</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Column</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.BookingEndDate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Formatter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FormatDate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">VisibleFrom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Breakpoint.ExtraLarge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span><span class="token punctuation">&gt;</span></span>
            End<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Header</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Template</span><span class="token punctuation">&gt;</span></span><span class="token block"><span class="token keyword">@</span><span class="token csharp language-csharp"><span class="token punctuation">{</span> <span class="token class-name"><span class="token keyword">var</span></span> booking <span class="token operator">=</span> context <span class="token keyword">as</span> <span class="token class-name">Booking</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span></span><span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">booking<span class="token punctuation">.</span>BookingEndDate<span class="token punctuation">?.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Column</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Employee<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.CreatedBy<span class="token punctuation">&quot;</span></span> <span class="token attr-name">VisibleFrom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Breakpoint.Medium<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DataGrid</span><span class="token punctuation">&gt;</span></span>

<span class="token block"><span class="token keyword">@code</span> <span class="token csharp language-csharp"><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>Booking<span class="token punctuation">&gt;</span></span> Items <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Create<span class="token punctuation">.</span><span class="token function">Booking</span><span class="token punctuation">(</span><span class="token string">&quot;First Booking!&quot;</span><span class="token punctuation">,</span>  RoomType<span class="token punctuation">.</span>Queen<span class="token punctuation">,</span>  <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;employee@email.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BOOK10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        Create<span class="token punctuation">.</span><span class="token function">Booking</span><span class="token punctuation">(</span><span class="token string">&quot;Booking 2&quot;</span><span class="token punctuation">,</span>       RoomType<span class="token punctuation">.</span>Double<span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token string">&quot;manager@email.com&quot;</span><span class="token punctuation">,</span>  <span class="token string">&quot;BOOK25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        Create<span class="token punctuation">.</span><span class="token function">Booking</span><span class="token punctuation">(</span><span class="token string">&quot;Booking the 3rd&quot;</span><span class="token punctuation">,</span> RoomType<span class="token punctuation">.</span>Suite<span class="token punctuation">,</span>  <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token string">&quot;employee@email.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;BOOK50&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">FormatDate</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> o<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> o <span class="token keyword">is</span> <span class="token class-name">DateTime</span> <span class="token return-type class-name">d <span class="token punctuation">?</span></span> d<span class="token punctuation">.</span><span class="token function">ToShortDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">HandleSelectedHeader</span><span class="token punctuation">(</span><span class="token class-name">Column<span class="token punctuation">&lt;</span>Booking<span class="token punctuation">&gt;</span></span> item<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">await</span> JS<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">HandleSelectedRow</span><span class="token punctuation">(</span><span class="token class-name">Booking</span> x<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">await</span> JS<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span></span></span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Resize webpage to preview its responsive appearance and different resolution breakpoints</p></div><iframe class="w-full border-none" style="height:385px;" src="https://blazor-gallery.jamstacks.net/gallery/datagrid/responsive"></iframe><h3 id="autoquerygrid" tabindex="-1">AutoQueryGrid <a class="header-anchor" href="#autoquerygrid" aria-hidden="true">#</a></h3><p>The functionality and extensibility in <code>DataGrid</code> lays the foundation for higher-level components like <code>AutoQueryGrid</code> which makes use of it to enable its Auto UI around <a href="/autoquery-crud">AutoQuery CRUD</a> Services.</p><h3 id="autoquerygrid-read-only" tabindex="-1">AutoQueryGrid Read Only <a class="header-anchor" href="#autoquerygrid-read-only" aria-hidden="true">#</a></h3><p>At a minimum AutoQueryGrid requires the AutoQuery APIs it should call to implement its functionality, so you can implement a <strong>read-only</strong> grid by only specifying the AutoQuery API to query a data model, e.g:</p><div class="language-csharp"><pre><code><span class="token operator">&lt;</span><span class="token class-name">AutoQueryGrid</span> Model<span class="token operator">=</span><span class="token string">&quot;Booking&quot;</span> Apis<span class="token operator">=</span><span class="token string">&quot;Apis.AutoQuery&lt;QueryBookings&gt;()&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre></div><p>This one AutoQuery API is enough to power a functional read-only UI enabling multi flexible querying capabilities, paging, custom column selection and the ability to export the desired filtered resultset to .csv which can be open in Excel or copy the API URL Apps can use to consume the JSON API results:</p><iframe class="w-full border-none" style="height:430px;" src="https://blazor-gallery.jamstacks.net/gallery/autoquerygrid/readonly"></iframe><h3 id="autoquerygrid-crud" tabindex="-1">AutoQueryGrid CRUD <a class="header-anchor" href="#autoquerygrid-crud" aria-hidden="true">#</a></h3><p>Full CRUD functionality can be enabled by specifying the AutoQuery CRUD APIs for a specified data model, e.g:</p><div class="language-csharp"><pre><code><span class="token operator">&lt;</span><span class="token class-name">AutoQueryGrid</span> Model<span class="token operator">=</span><span class="token string">&quot;Booking&quot;</span> Apis<span class="token operator">=</span><span class="token string">&quot;Apis.AutoQuery&lt;QueryBookings,CreateBooking,UpdateBooking,DeleteBooking&gt;()&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre></div><p><a href="https://blazor-gallery.jamstacks.net/gallery/autoquerygrid/crud" target="_blank" rel="noopener noreferrer"><img src="`+k+`" alt=""></a></p><h3 id="customizable-columns" tabindex="-1">Customizable Columns <a class="header-anchor" href="#customizable-columns" aria-hidden="true">#</a></h3><p>As <code>AutoQueryGrid</code> builds on <code>DataGrid</code> it also inherits its customizable option allowing for <a href="https://blazor-gallery.servicestack.net/gallery/autoquerygrid" target="_blank" rel="noopener noreferrer">customizable responsive columns</a>, e.g:</p><div class="language-cshtml"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span> <span class="token attr-name">Model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Apis</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Apis.AutoQuery&lt;QueryBookings,CreateBooking,UpdateBooking,DeleteBooking&gt;()<span class="token punctuation">&quot;</span></span>
               <span class="token attr-name">AllowSelection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">AllowFiltering</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
               <span class="token attr-name">HeaderSelected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>OnSelectedHeader<span class="token punctuation">&quot;</span></span> <span class="token attr-name">RowSelected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>OnSelectedRow<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Columns</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Custom class --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.Id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-gray-900<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token comment">&lt;!-- Only show from Tailwind&#39;s xl responsive Breakpoint --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.Name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">VisibleFrom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Breakpoint.ExtraLarge<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token comment">&lt;!-- Custom Header collapsing &#39;Room&#39; below &#39;lg&#39; responsive breakpoint --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.RoomType<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Room <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>Type
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Header</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Column</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Custom Header collapsing &#39;Room&#39; below &#39;lg&#39; responsive breakpoint --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.RoomNumber<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Room <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>No
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Header</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Column</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Custom string Format --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.Cost<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>C<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token comment">&lt;!-- Custom C# Formatter --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.BookingStartDate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Formatter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FormatDate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">VisibleFrom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Breakpoint.Small<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span><span class="token punctuation">&gt;</span></span>
                Start<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Header</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Column</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Custom Header and Cell Value --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.BookingEndDate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">VisibleFrom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Breakpoint.ExtraLarge2x<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span><span class="token punctuation">&gt;</span></span>
                End<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Header</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Template</span><span class="token punctuation">&gt;</span></span>
                <span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">context<span class="token punctuation">.</span>BookingEndDate<span class="token punctuation">?.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Template</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Column</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Custom Title and Complex Type Cell with Reference Link --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Voucher<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Booking x) =&gt; x.Discount<span class="token punctuation">&quot;</span></span> <span class="token attr-name">VisibleFrom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Breakpoint.ExtraLarge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Template</span><span class="token punctuation">&gt;</span></span>
<span class="token block"><span class="token keyword">@if</span> <span class="token csharp language-csharp"><span class="token punctuation">(</span>context<span class="token punctuation">.</span>Discount <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token operator">&lt;</span>TextLink <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;flex items-end&quot;</span> href<span class="token operator">=</span>@<span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;/gallery/autoquerygrid/coupons?Id=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">context<span class="token punctuation">.</span>Discount<span class="token punctuation">.</span>Id</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token class-name">PreviewFormat</span> Value<span class="token operator">=</span>@context<span class="token punctuation">.</span>Discount <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>TextLink<span class="token operator">&gt;</span>
<span class="token punctuation">}</span></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Template</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Column</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Columns</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AutoQueryGrid</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Customizing how and when columns are rendered at different breakpoints using different formatting options and custom table header and cell templates:</p><p><a href="https://blazor-gallery.jamstacks.net/gallery/autoquerygrid/responsive" target="_blank" rel="noopener noreferrer"><img src="`+d+`" alt=""></a></p><h3 id="declarative-customizations" tabindex="-1">Declarative Customizations <a class="header-anchor" href="#declarative-customizations" aria-hidden="true">#</a></h3><p>The columns can also be customized declaratively using the <code>[Format]</code> Metadata Attribute on the Model type:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Contact</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">AuditBase</span></span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoIncrement</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>IconRounded<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ProfileUrl <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FirstName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> LastName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>Currency<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> SalaryExpectation <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token function">Format</span><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>LinkEmail<span class="token punctuation">,</span> Options <span class="token operator">=</span> 
        <span class="token string">@&quot;{target:&#39;_self&#39;,subject:&#39;New Job Opportunity&#39;,
           body:&#39;We have an exciting new opportunity...&#39;, cls:&#39;text-green-600&#39;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Email <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>LinkPhone<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Phone <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Which can change how results are formatted in the data grid results:</p><p><a href="https://blazor-gallery.jamstacks.net/grid/contacts-meta" target="_blank" rel="noopener noreferrer"><img src="`+g+`" alt=""></a></p><p>Whilst the <code>[Input]</code> and <code>[FieldCss]</code> attributes on the AutoQuery CRUD DTOs:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateContact</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IPatchDb<span class="token punctuation">&lt;</span>Contact<span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">IReturn<span class="token punctuation">&lt;</span>Contact<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateNotEmpty</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> FirstName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateNotEmpty</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> LastName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Input</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type <span class="token operator">=</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token class-name">UploadTo</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;profiles&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> ProfileUrl <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> SalaryExpectation <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateNotEmpty</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> JobType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> AvailabilityWeeks <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">EmploymentType<span class="token punctuation">?</span></span> PreferredWorkType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> PreferredLocation <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateNotEmpty</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Email <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Phone <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Input</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type<span class="token operator">=</span><span class="token string">&quot;textarea&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FieldCss</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Field<span class="token operator">=</span><span class="token string">&quot;col-span-12 text-center&quot;</span><span class="token punctuation">,</span> Input<span class="token operator">=</span><span class="token string">&quot;h-48&quot;</span><span class="token punctuation">,</span> Label<span class="token operator">=</span><span class="token string">&quot;text-xl text-indigo-700&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> About <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Can customize how forms are rendered, e.g:</p><p><a href="https://blazor-gallery.jamstacks.net/grid/contacts-meta" target="_blank" rel="noopener noreferrer"><img src="`+m+`" alt=""></a></p><h3 id="toolbarbuttons" tabindex="-1">ToolbarButtons <a class="header-anchor" href="#toolbarbuttons" aria-hidden="true">#</a></h3><p>The <code>&lt;ToolbarButtons&gt;</code> element can be used to customize the AutoQueryGrid to add your own custom Toolbar buttons, e.g:</p><div class="language-razor"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToolbarButtons</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pl-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pl-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ToolbarButtons</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AutoQueryGrid</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Enabling complete control over the Toolbar as all existing toolbar buttons can be removed with <a href="https://reference.servicestack.net/api/ServiceStack.Blazor.Components.Tailwind/AutoQueryGrid%60Model%60" target="_blank" rel="noopener noreferrer">AutoQueryGrid parameters</a>.</p><h3 id="custom-edit-and-create-forms" tabindex="-1">Custom Edit and Create Forms <a class="header-anchor" href="#custom-edit-and-create-forms" aria-hidden="true">#</a></h3><p>The <code>&lt;CreateForm&gt;</code> and <code>&lt;EditForm&gt;</code> elements can be used to replace the default <a href="https://blazor-gallery.jamstacks.net/gallery/autoform" target="_blank" rel="noopener noreferrer">Auto Forms</a> used in creating and editing rows when more advanced or customized functionality is needed.</p><p>With this feature we can create a Custom AutoQueryGrid component that uses Custom Edit &amp; Create Forms when selecting and adding new records and also customize the Grid results displayed with the new <code>ConfigureQuery</code> parameter to ensure results are filtered to the selected Tenant records:</p><div class="language-razor"><pre><code>&lt;AutoQueryGrid <span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp"><span class="token keyword">ref</span></span></span>=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">grid</span></span> Model=&quot;Item&quot; Apis=&quot;Apis.AutoQuery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>QueryItems,NewItem,EditItem</span><span class="token punctuation">&gt;</span></span>()&quot; ConfigureQuery=&quot;Configure&quot;&gt;
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CreateForm</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>relative z-10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10 sm:pl-16<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CustomCreateItem</span> <span class="token attr-name">OnClose</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid!.OnEditDone<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CreateForm</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditForm</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>relative z-10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10 sm:pl-16<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CustomEditItem</span> <span class="token attr-name">Item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>context<span class="token punctuation">&quot;</span></span> <span class="token attr-name">OnClose</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid!.OnEditDone<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EditForm</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AutoQueryGrid</span><span class="token punctuation">&gt;</span></span>

<span class="token block"><span class="token keyword">@code</span> <span class="token csharp language-csharp"><span class="token punctuation">{</span>
    <span class="token class-name">AutoQueryGrid<span class="token punctuation">&lt;</span>Creative<span class="token punctuation">&gt;</span><span class="token punctuation">?</span></span> grid<span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Parameter</span><span class="token punctuation">,</span> <span class="token class-name">SupplyParameterFromQuery</span></span><span class="token punctuation">]</span> <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> TenantId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Configure</span><span class="token punctuation">(</span><span class="token class-name">QueryBase</span> query<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        query<span class="token punctuation">.</span><span class="token function">AddQueryParam</span><span class="token punctuation">(</span><span class="token string">&quot;TenantId&quot;</span><span class="token punctuation">,</span> TenantId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span></span></span>
</code></pre></div><h3 id="managing-filters-preferences" tabindex="-1">Managing Filters &amp; Preferences <a class="header-anchor" href="#managing-filters-preferences" aria-hidden="true">#</a></h3><p>By default the AutoQueryGrid displays the user&#39;s selected columns and query limit preferences which are persisted in localStorage. They can be overridden with the new <strong>Prefs</strong> attribute which has different ergonomic methods for configuration within an attribute:</p><p>To limit the Query Results Limit:</p><div class="language-razor"><pre><code>&lt;AutoQueryGrid <span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp"><span class="token keyword">ref</span></span></span>=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">grid</span></span> Model=&quot;Contact&quot; Apis=&quot;Apis.AutoQuery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>QueryContacts,CreateContact,UpdateContact</span><span class="token punctuation">&gt;</span></span>()&quot;
               Prefs=&quot;ApiPrefs.Create(take:10)&quot; /&gt;
</code></pre></div><p>To limit which columns are displayed in the Query Results:</p><div class="language-razor"><pre><code>&lt;AutoQueryGrid <span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp"><span class="token keyword">ref</span></span></span>=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">grid</span></span> Model=&quot;Contact&quot; Apis=&quot;Apis.AutoQuery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>QueryContacts,CreateContact,UpdateContact</span><span class="token punctuation">&gt;</span></span>()&quot;
               Prefs=&quot;ApiPrefs.Columns(nameof(Contact.Id), nameof(Contact.LastName))&quot; /&gt;
</code></pre></div><div class="language-razor"><pre><code>&lt;AutoQueryGrid <span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp"><span class="token keyword">ref</span></span></span>=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">grid</span></span> Model=&quot;Contact&quot; Apis=&quot;Apis.AutoQuery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>QueryContacts,CreateContact,UpdateContact</span><span class="token punctuation">&gt;</span></span>()&quot;
               Prefs=&quot;ApiPrefs.Columns<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Contact</span><span class="token punctuation">&gt;</span></span>(x =&gt; new { x.Id, x.LastName, x.Email })&quot; /&gt;
</code></pre></div><p>To configure both Query Limit and Selected Columns:</p><div class="language-razor"><pre><code>&lt;AutoQueryGrid <span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp"><span class="token keyword">ref</span></span></span>=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">grid</span></span> Model=&quot;Contact&quot; Apis=&quot;Apis.AutoQuery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>QueryContacts,CreateContact,UpdateContact</span><span class="token punctuation">&gt;</span></span>()&quot;
               Prefs=&quot;ApiPrefs.Create(take:10, columns:new(){ nameof(Contact.Id), nameof(Contact.LastName) })&quot; /&gt;
</code></pre></div><div class="language-razor"><pre><code>&lt;AutoQueryGrid <span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp"><span class="token keyword">ref</span></span></span>=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">grid</span></span> Model=&quot;Contact&quot; Apis=&quot;Apis.AutoQuery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>QueryContacts,CreateContact,UpdateContact</span><span class="token punctuation">&gt;</span></span>()&quot;
               Prefs=&quot;ApiPrefs.Configure(x =&gt; { x.Take = 5; x.SelectedColumns=new() { nameof(Contact.LastName) }; })&quot;/&gt;
</code></pre></div><p>In addition the new methods below can be used to clear any user-defined query filters and column preferences:</p><table><thead><tr><th>Method</th><th>Description</th></tr></thead><tbody><tr><td>grid.ClearFiltersAsync()</td><td>Remove user-defined Filters</td></tr><tr><td>grid.ResetPreferencesAsync()</td><td>Remove user-defined Filters and Column Preferences</td></tr></tbody></table><h3 id="disable-column-filtering" tabindex="-1">Disable Column Filtering <a class="header-anchor" href="#disable-column-filtering" aria-hidden="true">#</a></h3><p>By default Filtering and Sorting are disabled for complex type columns, they can also be explicitly disabled per column with <code>AllowFiltering</code>, e.g:</p><div class="language-razor"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Column</span> <span class="token attr-name">Field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(Contact x) =&gt; x.Phone<span class="token punctuation">&quot;</span></span> <span class="token attr-name">AllowFiltering</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="changing-autoquerygrid-defaults" tabindex="-1">Changing AutoQueryGrid Defaults <a class="header-anchor" href="#changing-autoquerygrid-defaults" aria-hidden="true">#</a></h3><p>A lot of AutoQueryGrid&#39;s UI is customizable allowing you to easily toggle on/off UI features as needed, if you have a consistent style you wish to enforce you can change the defaults of every AutoQueryGrid component with <a href="#blazor-config">BlazorConfig</a>, e.g. you can remove <strong>Copy URL</strong> button and change the default Table style to use Uppercase Headings with:</p><div class="language-csharp"><pre><code>BlazorConfig<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//...</span>
    AutoQueryGridDefaults <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        TableStyle <span class="token operator">=</span> TableStyle<span class="token punctuation">.</span>StripedRows <span class="token operator">|</span> TableStyle<span class="token punctuation">.</span>UppercaseHeadings<span class="token punctuation">,</span>
        ShowCopyApiUrl <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Which will change the appearance of every <code>AutoQueryGrid</code> Component used in the App unless overridden.</p><h3 id="autoquerygrid-gallery" tabindex="-1">AutoQueryGrid Gallery <a class="header-anchor" href="#autoquerygrid-gallery" aria-hidden="true">#</a></h3><p>As AutoQueryGrid is a core component for the rapid development of Apps we&#39;re maintaining a dedicated section showcasing their different features at <a href="https://blazor-gallery.servicestack.net/grid" target="_blank" rel="noopener noreferrer">blazor-gallery.servicestack.net/grid</a>:</p><p><a href="https://blazor-gallery.servicestack.net/grid" target="_blank" rel="noopener noreferrer"><img src="`+y+`" alt=""></a></p><h2 id="modal-lookups" tabindex="-1">Modal Lookups <a class="header-anchor" href="#modal-lookups" aria-hidden="true">#</a></h2><p>To provide an optimal UX for relational fields <code>AutoQueryGrid</code> utilizes Modal Lookups for searching and selecting referential data that&#39;s automatically inferred from your OrmLite data model relationships, e.g:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JobApplication</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">AuditBase</span></span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoIncrement</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">References</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Job</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> JobId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">References</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Contact</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> ContactId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Where it will display an enhanced <a href="https://reference.servicestack.net/api/ServiceStack.Blazor.Components.Tailwind/LookupInput" target="_blank" rel="noopener noreferrer">LookupInput</a> instead of a plain Text Input for the relational <code>JobId</code> and <code>ContactId</code> fields:</p><p><a href="https://blazor-gallery.servicestack.net/grid/job-applications?edit=1" target="_blank" rel="noopener noreferrer"><img src="`+h+'" alt=""></a></p><p>Which users can use to quickly search for the related record instead of manually inserting Foreign Key Ids:</p><p><a href="https://blazor-gallery.servicestack.net/grid/job-applications?edit=1" target="_blank" rel="noopener noreferrer"><img src="'+v+`" alt=""></a></p><h2 id="file-uploads" tabindex="-1">File Uploads <a class="header-anchor" href="#file-uploads" aria-hidden="true">#</a></h2><p>Another feature showcased in the above screenshots is support for <a href="/locode/files">Managed File Uploads</a> which can be declaratively added with the <code>[Input(Type=&quot;file&quot;)]</code> to render the <a href="https://reference.servicestack.net/api/ServiceStack.Blazor.Components.Tailwind/FileInput" target="_blank" rel="noopener noreferrer">FileInput</a> Component and <code>[UploadTo]</code> attribute to specify which File <a href="/locode/files#basic-file-upload-example">Upload location</a> it should use:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateJobApplication</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IPatchDb<span class="token punctuation">&lt;</span>JobApplication<span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">IReturn<span class="token punctuation">&lt;</span>JobApplication<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> JobId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> ContactId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> AppliedDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">JobApplicationStatus<span class="token punctuation">?</span></span> ApplicationStatus <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Input</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type <span class="token operator">=</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token class-name">UploadTo</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;applications&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>JobApplicationAttachment<span class="token punctuation">&gt;</span><span class="token punctuation">?</span></span> Attachments <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>For a quick primer on using Managed File Uploads to <a href="/locode/files-blazor">Upload files from Blazor</a> checkout:</p>`,82),W=a("div",{class:"my-16 px-4 sm:px-6"},[a("div",{class:"text-center"},[a("h1",{class:"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl"},[a("a",{href:"/locode/files-blazor",class:"block xl:inline"},"File Blazor")])]),a("div",{class:"my-8"},[a("iframe",{class:"video-hd",src:"https://www.youtube.com/embed/5sd00MzHpaU",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""})])],-1),O=p(`<h2 id="auto-forms" tabindex="-1">Auto Forms <a class="header-anchor" href="#auto-forms" aria-hidden="true">#</a></h2><p>The Auto Form components are other high productivity components which can be used to create an automated form based from a Request DTO definition:</p><div class="language-csharp"><pre><code><span class="token operator">&lt;</span><span class="token class-name">AutoCreateForm</span> Model<span class="token operator">=</span><span class="token string">&quot;Booking&quot;</span> ApiType<span class="token operator">=</span><span class="token string">&quot;typeof(CreateBooking)&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre></div><p><a href="https://blazor-gallery.servicestack.net/gallery/autoform" target="_blank" rel="noopener noreferrer"><img src="`+b+`" alt=""></a></p><h3 id="autoeditform" tabindex="-1">AutoEditForm <a class="header-anchor" href="#autoeditform" aria-hidden="true">#</a></h3><p>Whilst <code>AutoEditForm</code> can be used to render an automated form based to update and delete an <a href="/autoquery-crud">AutoQuery CRUD</a> API:</p><div class="language-csharp"><pre><code><span class="token operator">&lt;</span><span class="token class-name">AutoEditForm</span> Model<span class="token operator">=</span><span class="token string">&quot;Booking&quot;</span> Edit<span class="token operator">=</span><span class="token string">&quot;Model&quot;</span> ApiType<span class="token operator">=</span><span class="token string">&quot;typeof(UpdateBooking)&quot;</span> DeleteApiType<span class="token operator">=</span><span class="token string">&quot;typeof(DeleteBooking)&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>

@code <span class="token punctuation">{</span>
    <span class="token class-name">Booking</span> Model <span class="token operator">=</span> Create<span class="token punctuation">.</span><span class="token function">Booking</span><span class="token punctuation">(</span><span class="token string">&quot;First Booking!&quot;</span><span class="token punctuation">,</span> RoomType<span class="token punctuation">.</span>Queen<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;employee@email.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><a href="https://blazor-gallery.servicestack.net/gallery/autoform" target="_blank" rel="noopener noreferrer"><img src="`+w+`" alt=""></a></p><p>The forms behavior and appearance is further customizable with the <a href="/locode/declarative#annotate-apis">API annotation</a>, declarative <a href="/locode/declarative#type-validation-attributes">validation</a> and the custom <a href="/locode/declarative#custom-fields-and-inputs">Field and Input</a> attributes, e.g:</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Description</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Update an existing Booking&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Notes</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Find out how to quickly create a &lt;a class=&#39;svg-external&#39; target=&#39;_blank&#39; href=&#39;https://youtu.be/rSFiikDjGos&#39;&gt;C# Bookings App from Scratch&lt;/a&gt;&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;/booking/{Id}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PATCH&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateHasRole</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Employee&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoApply</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Behavior<span class="token punctuation">.</span>AuditModify<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateBooking</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IPatchDb<span class="token punctuation">&lt;</span>Booking<span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">IReturn<span class="token punctuation">&lt;</span>IdResponse<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">RoomType<span class="token punctuation">?</span></span> RoomType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateGreaterThan</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> RoomNumber <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateGreaterThan</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span><span class="token punctuation">?</span></span> Cost <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> BookingStartDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> BookingEndDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Input</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type <span class="token operator">=</span> <span class="token string">&quot;textarea&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Notes <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span><span class="token punctuation">?</span></span> Cancelled <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Both AutoForm components will render the Forms UI in a Slide Over dialog and includes built-in support for calling the API to update or edit the record with integrated contextual validation, reporting any field validation errors alongside their Input controls.</p><h3 id="autoformfields" tabindex="-1">AutoFormFields <a class="header-anchor" href="#autoformfields" aria-hidden="true">#</a></h3><p>If more advanced customization of a Forms appearance and behavior is required, you can use <code>AutoFormFields</code> to just render the Form&#39;s fields (including Validation binding) that can be used to populate a Request DTO that your App can handle sending, e.g:</p><p><a href="https://blazor-gallery.servicestack.net/gallery/autoform" target="_blank" rel="noopener noreferrer"><img src="`+q+`" alt=""></a></p><div class="language-csharp"><pre><code><span class="token operator">&lt;</span><span class="token class-name">form</span> @onsubmit<span class="token operator">=</span><span class="token string">&quot;submit&quot;</span> @onsubmit<span class="token punctuation">:</span>preventDefault<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;shadow sm:overflow-hidden sm:rounded-md max-w-screen-lg&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;space-y-6 bg-white py-6 px-4 sm:p-6&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>h3 <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;text-lg font-medium leading-6 text-gray-900&quot;</span><span class="token operator">&gt;</span>@<span class="token punctuation">(</span>ApiType<span class="token punctuation">.</span><span class="token function">GetDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;notes mt-1 text-sm text-gray-500&quot;</span><span class="token operator">&gt;</span>
                    @<span class="token punctuation">(</span><span class="token punctuation">(</span>MarkupString<span class="token punctuation">)</span>ApiType<span class="token punctuation">.</span><span class="token function">GetNotes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

            <span class="token operator">&lt;</span><span class="token class-name">AutoFormFields</span> Type<span class="token operator">=</span><span class="token string">&quot;typeof(Booking)&quot;</span> Api<span class="token operator">=</span><span class="token string">&quot;Api&quot;</span> FormLayout<span class="token operator">=</span><span class="token string">&quot;FormLayout&quot;</span> ModelDictionary<span class="token operator">=</span><span class="token string">&quot;ModelDictionary&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>

        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;bg-gray-50 px-4 py-3 text-right sm:px-12&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token class-name">PrimaryButton</span> type<span class="token operator">=</span><span class="token string">&quot;submit&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;submit&quot;</span><span class="token operator">&gt;</span>Save<span class="token operator">&lt;</span><span class="token operator">/</span>PrimaryButton<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>

@code <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Inject</span></span><span class="token punctuation">]</span> <span class="token keyword">public</span> <span class="token return-type class-name">JsonApiClient<span class="token punctuation">?</span></span> Client <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token return-type class-name">IHasErrorStatus<span class="token punctuation">?</span></span> Api <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token class-name">Type</span> ApiType <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">UpdateBooking</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>InputInfo<span class="token punctuation">&gt;</span><span class="token punctuation">?</span></span> FormLayout <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token return-type class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> ModelDictionary <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name">MetadataType</span> MetadataType <span class="token operator">=&gt;</span> ApiType<span class="token punctuation">.</span><span class="token function">ToMetadataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Booking</span> Edit <span class="token operator">=</span> Create<span class="token punctuation">.</span><span class="token function">Booking</span><span class="token punctuation">(</span><span class="token string">&quot;First Booking!&quot;</span><span class="token punctuation">,</span> RoomType<span class="token punctuation">.</span>Queen<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&quot;employee@email.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">OnParametersSetAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">await</span> <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnParametersSetAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Api <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        ModelDictionary <span class="token operator">=</span> Edit<span class="token punctuation">.</span><span class="token function">ToModelDictionary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        FormLayout <span class="token operator">??=</span> MetadataType<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">CreateFormLayout</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Booking<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> request <span class="token operator">=</span> ModelDictionary<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">FromModelDictionary</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UpdateBooking<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Api <span class="token operator">=</span> <span class="token keyword">await</span> Client<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">ApiAsync</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="autocomplete" tabindex="-1">Autocomplete <a class="header-anchor" href="#autocomplete" aria-hidden="true">#</a></h2><p>The <code>&lt;Autocomplete&gt;</code> component provides a user friendly Input for being able to search and quickly select items, that includes support for rich templated content, custom matching and infinite scrolling that avoids pre-loading the entire bound list of items.</p><p>Instead of being populated with a fixed List of strings or Key Value Pairs the Autocomplete component can bind directly to a list of POCOs to render its templated content where you&#39;ll be able to specify a custom <code>Match</code> filter to control which filtered items are displayed, that it can fuzzy match on single or multiple POCO properties.</p><h3 id="single-contact" tabindex="-1">Single Contact <a class="header-anchor" href="#single-contact" aria-hidden="true">#</a></h3><p>Here&#39;s a simple Autocomplete example that binds to a <strong>simple</strong> <code>Contact</code> from a <code>List&lt;Contact&gt;</code> in <strong>allContacts</strong>:</p><div class="language-razor"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Autocomplete</span> <span class="token attr-name">T</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Contact<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>allContacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@bind-Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>simple<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Single Contact<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">Match</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(x, value) =&gt; x!.DisplayName.Contains(value, StringComparison.OrdinalIgnoreCase)<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Select Contact<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Item</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>block truncate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">context<span class="token operator">!</span><span class="token punctuation">.</span>DisplayName</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Autocomplete</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="single-contact-with-icon" tabindex="-1">Single Contact with Icon <a class="header-anchor" href="#single-contact-with-icon" aria-hidden="true">#</a></h3><p>The item content is templated allowing for rich content which can be used to display a Contact&#39;s profile picture and name:</p><div class="language-razor"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Autocomplete</span> <span class="token attr-name">T</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Contact<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>allContacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@bind-Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>contact<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Single Contact with Icon<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">Match</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(x, value) =&gt; x!.DisplayName.Contains(value, StringComparison.OrdinalIgnoreCase)<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Select Contact<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Item</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex items-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            &lt;Icon class=&quot;h-6 w-6 flex-shrink-0 rounded-full&quot; Src=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">context<span class="token punctuation">.</span>ProfileUrl</span></span> /&gt;
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ml-3 truncate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">context<span class="token operator">!</span><span class="token punctuation">.</span>DisplayName</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Autocomplete</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="multiple-contacts-with-icon" tabindex="-1">Multiple Contacts with Icon <a class="header-anchor" href="#multiple-contacts-with-icon" aria-hidden="true">#</a></h3><p>It also supports multiple selection by using <code>@bind-Values</code> to bind to the <code>List&lt;Contact&gt;</code> in <strong>contacts</strong> instead, e.g:</p><div class="language-razor"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Autocomplete</span> <span class="token attr-name">Options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>allContacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@bind-Values</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>contacts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Multiple Contacts with Icon<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">Match</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(x, value) =&gt; x!.DisplayName.Contains(value, StringComparison.OrdinalIgnoreCase)<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Select Contacts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Item</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex items-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            &lt;Icon class=&quot;h-6 w-6 flex-shrink-0 rounded-full&quot; Src=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">context<span class="token punctuation">.</span>ProfileUrl</span></span> /&gt;
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ml-3 truncate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">context<span class="token operator">!</span><span class="token punctuation">.</span>DisplayName</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Autocomplete</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>and here&#39;s a working example of what they look like together in the same form (<a href="https://blazor-gallery.jamstacks.net/gallery/inputs" target="_blank" rel="noopener noreferrer">example source code</a>):</p><div class="pt-12 flex justify-center"><iframe src="https://blazor-gallery.jamstacks.net/gallery/inputs/autocomplete" class="w-[500px] border-none h-[560px]"></iframe></div><h2 id="taginput" tabindex="-1">TagInput <a class="header-anchor" href="#taginput" aria-hidden="true">#</a></h2><p>The TagInput component is useful for when you want to manage a list of strings like words or tags - an input that&#39;s notably lacking in HTML Forms. Best of all <code>&lt;TagInput&gt;</code> functions like any other input where it can be included and customized in declarative forms.</p><p>For example this Update AutoQuery Request DTO:</p><div class="language-csharp"><pre><code><span class="token comment">// Customize Edit Forms with [Input] and [FieldCss] attributes </span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateContact</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IPatchDb<span class="token punctuation">&lt;</span>Contact<span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">IReturn<span class="token punctuation">&lt;</span>Contact<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateNotEmpty</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> FirstName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateNotEmpty</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> LastName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Input</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type <span class="token operator">=</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token class-name">UploadTo</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;profiles&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> ProfileUrl <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> SalaryExpectation <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateNotEmpty</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> JobType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> AvailabilityWeeks <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">EmploymentType<span class="token punctuation">?</span></span> PreferredWorkType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> PreferredLocation <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateNotEmpty</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Email <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Phone <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Input</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type <span class="token operator">=</span> <span class="token string">&quot;tag&quot;</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token class-name">FieldCss</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Field <span class="token operator">=</span> <span class="token string">&quot;col-span-12&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">?</span></span> Skills <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
 
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Input</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type<span class="token operator">=</span><span class="token string">&quot;textarea&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FieldCss</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Field<span class="token operator">=</span><span class="token string">&quot;col-span-12 text-center&quot;</span><span class="token punctuation">,</span> Input<span class="token operator">=</span><span class="token string">&quot;h-48&quot;</span><span class="token punctuation">,</span> Label<span class="token operator">=</span><span class="token string">&quot;text-xl text-indigo-700&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> About <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>is all that&#39;s needed to render an instantly working API-enabled Form with validation binding using <a href="https://blazor-gallery.jamstacks.net/gallery/autoform" target="_blank" rel="noopener noreferrer">Auto Form components</a>:</p><div class="language-razor"><pre><code>&lt;AutoEditForm class=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Class</span></span> Model=&quot;Contact&quot; ApiType=&quot;typeof(UpdateContact)&quot; Edit=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">contact</span></span> /&gt;
</code></pre></div><p>Which by default renders the form in a SlideOver dialog as seen when editing a row in the <a href="https://blazor-gallery.jamstacks.net/grid/contacts-meta?edit=1" target="_blank" rel="noopener noreferrer">Contacts AutoQueryGrid</a> component:</p><iframe src="https://blazor-gallery.jamstacks.net/grid/contacts-meta/embed?edit=1" class="mt-8 w-full border-none h-[970px] w-[1330px] -ml-40"></iframe><p>Alternatively it can be rendered in a traditional <strong>&quot;card&quot;</strong> form layout with the new <code>FormStyle.Card</code> option:</p><div class="language-razor"><pre><code>&lt;AutoEditForm class=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Class</span></span> FormStyle=&quot;FormStyle.Card&quot; Model=&quot;Contact&quot; ApiType=&quot;typeof(UpdateContact)&quot; Edit=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">contact</span></span> /&gt;
</code></pre></div><iframe src="https://blazor-gallery.jamstacks.net/gallery/inputs/tag?layout=ExampleLayout&amp;class=max-w-screen-md+mx-auto" class="mt-8 w-full border-none h-[1570px] w-[1330px] -ml-40"></iframe><p>Where it functions the same as other Input components where it can be bound directly to a <code>List&lt;string&gt;</code> Request DTO property:</p><div class="language-razor"><pre><code>&lt;form <span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">onsubmit</span></span>=&quot;submit&quot; <span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">onsubmit</span></span>:preventDefault class=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Class</span></span>&gt;
&lt;CascadingValue Value=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">apiQuery<span class="token punctuation">.</span>Error</span></span>&gt;
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shadow sm:rounded-md bg-white dark:bg-black<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>relative px-4 py-5 sm:p-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span><span class="token punctuation">&gt;</span></span>
                &lt;ErrorSummary Except=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">VisibleFields</span></span> /&gt;

                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid grid-cols-12 gap-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-span-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextInput</span> <span class="token attr-name">@bind-Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>request.FirstName<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-span-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextInput</span> <span class="token attr-name">@bind-Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>request.LastName<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-span-12<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TagInput</span> <span class="token attr-name">@bind-Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>request.Skills<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CascadingValue</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="navlist" tabindex="-1">NavList <a class="header-anchor" href="#navlist" aria-hidden="true">#</a></h3><p>The NavList component encapsulates Tailwind&#39;s beautiful List component which is used extensively in <a href="https://blazor-gallery.jamstacks.net/grid" target="_blank" rel="noopener noreferrer">Blazor Gallery&#39;s Navigation</a>:</p><div class="language-razor"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>max-w-screen-sm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavList</span> <span class="token attr-name">Title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Explore Blazor Components<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        &lt;NavListItem Title=&quot;DataGrid&quot; href=&quot;/gallery/datagrid&quot; IconSvg=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Icons<span class="token punctuation">.</span>DataGrid</span></span>&gt;
            DataGrid Component Examples for rendering tabular data
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavListItem</span><span class="token punctuation">&gt;</span></span>
        &lt;NavListItem Title=&quot;AutoQuery Grid&quot; href=&quot;/gallery/autoquerygrid&quot; IconSvg=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Icons<span class="token punctuation">.</span>AutoQueryGrid</span></span>&gt;
            Instant customizable UIs for calling AutoQuery CRUD APIs
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavListItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavList</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-8 text-base font-semibold text-gray-500 dark:text-gray-400 flex<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Requires Auth<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>&lt;Icon class=&quot;h-6 w-6 mr-2&quot; Svg=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Icons<span class="token punctuation">.</span>Padlock</span></span> /&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        Booking APIs
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavList</span><span class="token punctuation">&gt;</span></span>
        &lt;NavListItem Title=&quot;Bookings&quot; href=&quot;/grid/bookings&quot; Icon=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp"><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Booking</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span>&gt;
            Create and manage Bookings
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavListItem</span><span class="token punctuation">&gt;</span></span>
        &lt;NavListItem Title=&quot;Coupons&quot; href=&quot;/grid/coupons&quot; Icon=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp"><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Coupon</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span>&gt;
            Create and manage discount Coupons
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavListItem</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavList</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Where it will render a list of navigation links with descriptions and icons:</p><div class="my-8 flex justify-center"><iframe src="https://blazor-gallery.jamstacks.net/gallery/navigation/navlist" class="my-8 w-full h-[510px] border-none"></iframe></div><h3 id="colored-buttons" tabindex="-1">Colored Buttons <a class="header-anchor" href="#colored-buttons" aria-hidden="true">#</a></h3><p>The <code>ButtonStyle</code> on PrimaryButton component can be used to render buttons into Tailwind&#39;s different primary colors:</p><div class="language-csharp"><pre><code><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;grid gap-4 grid-cols-3&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>PrimaryButton<span class="token operator">&gt;</span>Default<span class="token operator">&lt;</span><span class="token operator">/</span>PrimaryButton<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">PrimaryButton</span> Style<span class="token operator">=</span><span class="token string">&quot;ButtonStyle.Blue&quot;</span><span class="token operator">&gt;</span>Blue<span class="token operator">&lt;</span><span class="token operator">/</span>PrimaryButton<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">PrimaryButton</span> Style<span class="token operator">=</span><span class="token string">&quot;ButtonStyle.Purple&quot;</span><span class="token operator">&gt;</span>Purple<span class="token operator">&lt;</span><span class="token operator">/</span>PrimaryButton<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">PrimaryButton</span> Style<span class="token operator">=</span><span class="token string">&quot;ButtonStyle.Red&quot;</span><span class="token operator">&gt;</span>Red<span class="token operator">&lt;</span><span class="token operator">/</span>PrimaryButton<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">PrimaryButton</span> Style<span class="token operator">=</span><span class="token string">&quot;ButtonStyle.Green&quot;</span><span class="token operator">&gt;</span>Green<span class="token operator">&lt;</span><span class="token operator">/</span>PrimaryButton<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">PrimaryButton</span> Style<span class="token operator">=</span><span class="token string">&quot;ButtonStyle.Sky&quot;</span><span class="token operator">&gt;</span>Sky<span class="token operator">&lt;</span><span class="token operator">/</span>PrimaryButton<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">PrimaryButton</span> Style<span class="token operator">=</span><span class="token string">&quot;ButtonStyle.Cyan&quot;</span><span class="token operator">&gt;</span>Cyan<span class="token operator">&lt;</span><span class="token operator">/</span>PrimaryButton<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre></div><div class="my-8 flex justify-center"><iframe src="https://blazor-gallery.jamstacks.net/gallery/navigation/buttons/styles" class="my-8 w-full h-[160px] border-none"></iframe></div><h3 id="select-input" tabindex="-1">Select Input <a class="header-anchor" href="#select-input" aria-hidden="true">#</a></h3><p>The <code>&lt;SelectInput&gt;</code> <code>Values</code> and <code>Entries</code> parameters can be used to populate options from an array of string&#39;s or KeyValuePair&#39;s, it also includes declarative features enabling more capable declarative forms which are typically restricted by the compile-time constant expression limitation of .NET attributes.</p><p>The <code>EvalAllowableValues</code> and <code>EvalAllowableEntries</code> attribute properties overcomes this limitation by letting you define the Select options with a <a href="https://sharpscript.net" target="_blank" rel="noopener noreferrer">#Script</a> Expression whose great <a href="https://sharpscript.net/docs/script-net" target="_blank" rel="noopener noreferrer">.NET scriptability</a> lets you reference your App&#39;s .NET instances from a string expression. This feature can then be used to populate declarative Select options from a .NET Instance, e.g:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CreateModifier</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ICreateDb<span class="token punctuation">&lt;</span>Modifier<span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">IReturn<span class="token punctuation">&lt;</span>Modifier<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateNotEmpty</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ValidateNotEmpty</span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Input</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type<span class="token operator">=</span><span class="token string">&quot;select&quot;</span><span class="token punctuation">,</span> EvalAllowableValues <span class="token operator">=</span> <span class="token string">&quot;AppData.Categories&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Category <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Description <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>That we register as a global variable in our AppHost&#39;s <code>ScriptContext</code> which we can populate from a dynamic source like a DB Table, e.g:</p><div class="language-csharp"><pre><code><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> db <span class="token operator">=</span> container<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Resolve</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IDbConnectionFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ScriptContext<span class="token punctuation">.</span>Args<span class="token punctuation">[</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>AppData<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AppData</span>
<span class="token punctuation">{</span>
    Categories <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Column</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">From</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Category<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>Where it will populate the Select input in all <code>CreateModifier</code> Auto Form components:</p><div class="mt-8 flex justify-center"><img src="`+F+`" class="max-w-screen-md" style="border:1px solid #CACACA;"></div><h2 id="previewformat" tabindex="-1">PreviewFormat <a class="header-anchor" href="#previewformat" aria-hidden="true">#</a></h2><p>The <code>&lt;PreviewFormat&gt;</code> component is useful for rendering Table Cell data into different customizable formats, e.g:</p><div class="language-cshtml"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PreviewFormat</span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>Formats.Currency</span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PreviewFormat</span> <span class="token attr-name">Value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1000000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>Formats.Bytes</span> <span class="token punctuation">/&gt;</span></span>

&lt;PreviewFormat Value=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Url</span></span> Format=Formats.Icon IconClass=&quot;w-40 h-40&quot; /&gt;

&lt;PreviewFormat Value=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Url</span></span> Format=Formats.Icon IconClass=&quot;w-40 h-40 rounded-full&quot; /&gt;

&lt;PreviewFormat Value=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Url</span></span> Format=Formats.Attachment /&gt;

&lt;PreviewFormat Value=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Path</span></span> Format=Formats.Attachment /&gt;

&lt;PreviewFormat Value=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Url</span></span> Format=Formats.Link /&gt;

&lt;PreviewFormat Value=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Email</span></span> Format=Formats.LinkEmail /&gt;

&lt;PreviewFormat Value=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Phone</span></span> Format=Formats.LinkPhone /&gt;
</code></pre></div><p><a href="https://blazor-gallery.servicestack.net/gallery/formats" target="_blank" rel="noopener noreferrer"><img src="`+f+`" alt=""></a></p><h2 id="htmlformat" tabindex="-1">HtmlFormat <a class="header-anchor" href="#htmlformat" aria-hidden="true">#</a></h2><p>Whilst the versatile <code>&lt;HtmlFormat&gt;</code> component can be used to render any Serializable object into a human-friendly HTML Format, e.g:</p><h3 id="single-model" tabindex="-1">Single Model <a class="header-anchor" href="#single-model" aria-hidden="true">#</a></h3><div class="language-cshtml"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>max-w-screen-sm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    &lt;HtmlFormat Value=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Track<span class="token punctuation">.</span>Results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span></span> /&gt;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p><a href="https://blazor-gallery.servicestack.net/gallery/formats" target="_blank" rel="noopener noreferrer"><img src="`+x+`" alt=""></a></p><h3 id="item-collections" tabindex="-1">Item Collections <a class="header-anchor" href="#item-collections" aria-hidden="true">#</a></h3><div class="language-cshtml"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>max-w-screen-sm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    &lt;HtmlFormat Value=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Track<span class="token punctuation">.</span>Results</span></span> /&gt;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p><a href="https://blazor-gallery.servicestack.net/gallery/formats" target="_blank" rel="noopener noreferrer"><img src="`+C+`" alt=""></a></p><h3 id="nested-complex-types" tabindex="-1">Nested Complex Types <a class="header-anchor" href="#nested-complex-types" aria-hidden="true">#</a></h3><div class="language-cshtml"><pre><code>&lt;HtmlFormat Value=<span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Create<span class="token punctuation">.</span>Players</span></span> /&gt;
</code></pre></div><p><a href="https://blazor-gallery.servicestack.net/gallery/formats" target="_blank" rel="noopener noreferrer"><img src="`+A+'" alt=""></a></p><p>For more info about the Blazor Components available checkout the <a href="https://blazor-gallery.servicestack.net/gallery" target="_blank" rel="noopener noreferrer">Component Gallery</a>:</p><p><a href="https://blazor-gallery.servicestack.net/gallery" target="_blank" rel="noopener noreferrer"><img src="'+T+`" alt=""></a></p><h2 id="blazor-config" tabindex="-1">Blazor Config <a class="header-anchor" href="#blazor-config" aria-hidden="true">#</a></h2><p>A lot of the default conventions used by the Blazor Components are overridable with <a href="https://reference.servicestack.net/api/ServiceStack.Blazor/BlazorConfig" target="_blank" rel="noopener noreferrer">BlazorConfig</a> initialized in <code>Program.cs</code>, where Blazor WASM projects configured with something like:</p><div class="language-csharp"><pre><code>BlazorConfig<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">BlazorConfig</span>
<span class="token punctuation">{</span>
    IsWasm <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    Services <span class="token operator">=</span> app<span class="token punctuation">.</span>Services<span class="token punctuation">,</span>
    FallbackAssetsBasePath <span class="token operator">=</span> apiBaseUrl<span class="token punctuation">,</span>
    EnableLogging <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    EnableVerboseLogging <span class="token operator">=</span> builder<span class="token punctuation">.</span>HostEnvironment<span class="token punctuation">.</span><span class="token function">IsDevelopment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="asset-and-fallback-paths" tabindex="-1">Asset and Fallback Paths <a class="header-anchor" href="#asset-and-fallback-paths" aria-hidden="true">#</a></h3><p>Where <code>FallbackAssetsBasePath</code> allows you to specify a fallback path for Images which is useful when there&#39;s a delay for syncing uploaded assets to the CDN that the Blazor WASM client is deployed to, as it can fallback to referencing the asset from the .NET App Server that handled the file upload.</p><p>Alternatively <code>AssetsBasePath</code> can be used for specifying a different primary CDN location that&#39;s different from the Blazor WASM App CDN or <code>AssetsPathResolver</code> and <code>FallbackPathResolver</code> can be used when more a advanced custom strategy is required.</p>`,82),pa='{"title":"Blazor Tailwind Components","description":"","frontmatter":{"title":"Blazor Tailwind Components"},"headers":[{"level":3,"title":"View ServiceStack.Blazor in Dark Mode","slug":"view-servicestack-blazor-in-dark-mode"},{"level":3,"title":"View in Dark Mode","slug":"view-in-dark-mode"},{"level":3,"title":"Force Dark Mode","slug":"force-dark-mode"},{"level":2,"title":"Blazor Tailwind Components","slug":"blazor-tailwind-components"},{"level":3,"title":"DataGrid","slug":"datagrid"},{"level":3,"title":"AutoQueryGrid","slug":"autoquerygrid"},{"level":3,"title":"AutoQueryGrid Read Only","slug":"autoquerygrid-read-only"},{"level":3,"title":"AutoQueryGrid CRUD","slug":"autoquerygrid-crud"},{"level":3,"title":"Customizable Columns","slug":"customizable-columns"},{"level":3,"title":"Declarative Customizations","slug":"declarative-customizations"},{"level":3,"title":"ToolbarButtons","slug":"toolbarbuttons"},{"level":3,"title":"Custom Edit and Create Forms","slug":"custom-edit-and-create-forms"},{"level":3,"title":"Managing Filters & Preferences","slug":"managing-filters-preferences"},{"level":3,"title":"Disable Column Filtering","slug":"disable-column-filtering"},{"level":3,"title":"Changing AutoQueryGrid Defaults","slug":"changing-autoquerygrid-defaults"},{"level":3,"title":"AutoQueryGrid Gallery","slug":"autoquerygrid-gallery"},{"level":2,"title":"Modal Lookups","slug":"modal-lookups"},{"level":2,"title":"File Uploads","slug":"file-uploads"},{"level":2,"title":"Auto Forms","slug":"auto-forms"},{"level":3,"title":"AutoEditForm","slug":"autoeditform"},{"level":3,"title":"AutoFormFields","slug":"autoformfields"},{"level":2,"title":"Autocomplete","slug":"autocomplete"},{"level":3,"title":"Single Contact","slug":"single-contact"},{"level":3,"title":"Single Contact with Icon","slug":"single-contact-with-icon"},{"level":3,"title":"Multiple Contacts with Icon","slug":"multiple-contacts-with-icon"},{"level":2,"title":"TagInput","slug":"taginput"},{"level":3,"title":"NavList","slug":"navlist"},{"level":3,"title":"Colored Buttons","slug":"colored-buttons"},{"level":3,"title":"Select Input","slug":"select-input"},{"level":2,"title":"PreviewFormat","slug":"previewformat"},{"level":2,"title":"HtmlFormat","slug":"htmlformat"},{"level":3,"title":"Single Model","slug":"single-model"},{"level":3,"title":"Item Collections","slug":"item-collections"},{"level":3,"title":"Nested Complex Types","slug":"nested-complex-types"},{"level":2,"title":"Blazor Config","slug":"blazor-config"},{"level":3,"title":"Asset and Fallback Paths","slug":"asset-and-fallback-paths"}],"relativePath":"templates-blazor-components.md"}',J={},ea=Object.assign(J,{__name:"templates-blazor-components",setup(K){return(Z,$)=>(_(),B("div",null,[S,I,z,a("div",D,[a("a",P,[s(t(n),{icon:"simple-icons:github",class:"w-6 h-6 mr-2 align-text-bottom"}),M]),a("a",E,[s(t(n),{icon:"simple-icons:github",class:"w-6 h-6 mr-2 align-text-bottom"}),G])]),a("div",N,[a("div",null,[s(t(n),{icon:"ic:outline-dark-mode",class:"w-40 h-40 text-gray-800 mr-8"})]),Q]),L,R,V,a("div",U,[a("div",null,[s(t(n),{icon:"simple-icons:blazor",class:"w-40 h-40 text-purple-600 mr-8"}),s(t(n),{icon:"logos:tailwindcss-icon",class:"w-44 h-44"})]),j]),H,W,O]))}});export{pa as __pageData,ea as default};
