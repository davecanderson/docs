import"./chunks/iconify.2272db1b.js";import{_ as g}from"./chunks/ApiReference.8128d97b.js";import{a as C,A as T}from"./chunks/dtos.c5cf3f3f.js";import"./chunks/data.783f420d.js";import{m as x}from"./chunks/metadata.46b41fb9.js";import{f as S,J as b,r as D,D as t,o as k,c as q,e as n,q as e,E as m,M as Q,B as y,Z as I,i as G,I as B,d as i,a,b as l}from"./app.2aea72c0.js";const E=S({__name:"CustomBooking",setup(f){const d=b(),p=D();async function u(r){const s=await d.api(new C({id:r}));s.succeeded&&(p.value=s.response.results[0])}const o=()=>p.value=null;return(r,s)=>{const h=t("Icon"),v=t("PreviewFormat"),_=t("TextLink"),w=t("AutoQueryGrid"),A=t("AutoEditForm");return k(),q("div",null,[n(w,{type:"Booking",selectedColumns:"id,name,cost,bookingStartDate,bookingEndDate,discount"},{discount:e(({discount:c})=>[c?(k(),m(_,{key:0,class:"flex items-end",onClick:Q($=>u(c.id),["stop"]),title:c.id},{default:e(()=>[n(h,{class:"w-5 h-5 mr-1",type:"Coupon"}),n(v,{value:c.description},null,8,["value"])]),_:2},1032,["onClick","title"])):y("",!0)]),_:1}),p.value?(k(),m(A,{key:0,type:"UpdateCoupon",modelValue:p.value,"onUpdate:modelValue":s[0]||(s[0]=c=>p.value=c),onDone:o,onSave:o},null,8,["modelValue"])):y("",!0)])}}});var P="/assets/audit-history-job.9f824ff0.png",R="/assets/blazor-gallery-contact.9798eb0a.png";const N=i("link",{rel:"stylesheet",href:"/css/tailwind-components.css"},null,-1),V=i("div",{class:"my-8 flex justify-center"},[i("iframe",{class:"video-hd",src:"https://www.youtube.com/embed/znCoC-Ct0Ps",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""})],-1),F=a(`<p>By default you can create an AutoQueryGrid that allows authorized users the ability to Create, Read, Update &amp; Delete records with just the DataModel, e.g:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Booking<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,2),J=i("p",null,[l("This will utilize your App's existing "),i("a",{href:"/autoquery-rdbms"},"AutoQuery APIs"),l(" for the specified DataModel to enable its CRUD functionality.")],-1),M=a(`<p>You can use <code>apis</code> to limit which AutoQuery APIs AutoQueryGrid should use, so if only the AutoQuery DTO is provided, the AutoQueryGrid will only be browsable in <strong>read-only</strong> mode:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">apis</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>QueryBookings<span class="token punctuation">&quot;</span></span>  <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,2),U=a(`<h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Table Styles </h2><p>The same <a href="/vue/gallery/datagrid#table-styles">DataGrid Table Styles</a> can also be used to style AutoQueryGrid, e.g:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">tableStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>verticalLines,uppercaseHeadings<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,3),L=a(`<p><strong>Custom Styles</strong></p><p>The AutoQueryGrid&#39;s appearance is further customizable with the property classes &amp; functions below:</p><div class="language-ts"><pre><code>defineProps<span class="token operator">&lt;</span><span class="token punctuation">{</span>
  toolbarButtonClass<span class="token operator">:</span> <span class="token builtin">string</span>
  tableStyle<span class="token operator">:</span> <span class="token string">&quot;simple&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;fullWidth&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;stripedRows&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;whiteBackground&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;uppercaseHeadings&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;verticalLines&quot;</span>
  gridClass<span class="token operator">:</span> <span class="token builtin">string</span>
  grid2Class<span class="token operator">:</span> <span class="token builtin">string</span>
  grid3Class<span class="token operator">:</span> <span class="token builtin">string</span>
  grid4Class<span class="token operator">:</span> <span class="token builtin">string</span>
  tableClass<span class="token operator">:</span> <span class="token builtin">string</span>
  theadClass<span class="token operator">:</span> <span class="token builtin">string</span>
  tbodyClass<span class="token operator">:</span> <span class="token builtin">string</span>
  theadRowClass<span class="token operator">:</span> <span class="token builtin">string</span>
  theadCellClass<span class="token operator">:</span> <span class="token builtin">string</span>

  <span class="token function-variable function">rowClass</span><span class="token operator">:</span><span class="token punctuation">(</span>model<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">,</span>i<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
  <span class="token function-variable function">rowStyle</span><span class="token operator">:</span><span class="token punctuation">(</span>model<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">,</span>i<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> StyleValue
<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Custom AutoQueryGrid </h2><p>Different AutoQueryGrid features can be hidden with <code>hide</code> and functionality disabled with <code>deny</code>, e.g:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">hide</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pagingNav,copyApiUrl,downloadCsv<span class="token punctuation">&quot;</span></span> <span class="token attr-name">deny</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filtering<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,6),O=a(`<p>Features that can be hidden and disabled include:</p><div class="language-ts"><pre><code><span class="token generic-function"><span class="token function">defineProps</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span>
    deny<span class="token operator">:</span> <span class="token string">&quot;filtering&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;queryString&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;queryFilters&quot;</span>
    hide<span class="token operator">:</span> <span class="token string">&quot;toolbar&quot;</span>   <span class="token operator">|</span> <span class="token string">&quot;preferences&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;pagingNav&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;pagingInfo&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;downloadCsv&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;refresh&quot;</span> 
       <span class="token operator">|</span> <span class="token string">&quot;copyApiUrl&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;filtersView&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;newItem&quot;</span>   <span class="token operator">|</span> <span class="token string">&quot;resetPreferences&quot;</span> 
<span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Global AutoQueryGrid Configuration </h2><p>These features can also be disabled at a global level, applying to all <code>&lt;AutoQueryGrid&gt;</code> components with <a href="/vue/use-config">setConfig</a>, e.g:</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> setAutoQueryGridDefaults <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token function">setAutoQueryGridDefaults</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">hide</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;pagingNav&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;copyApiUrl&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;downloadCsv&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Limit Columns </h2><p>By default AutoQueryGrid displays all public properties returned in its AutoQuery API which can be further limited with <code>selected-columns</code>:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">selectedColumns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id,name,roomType,roomNumber,cost<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,8),z=a(`<h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Simple Responsive Columns </h2><p>Using <code>visible-from</code> is a simple way to enable a responsive DataGrid by specifying at which <a href="https://tailwindcss.com/docs/responsive-design" target="_blank" rel="noopener noreferrer">Tailwind breakpoints</a> columns should be visible from and <code>header-titles</code> to use friendlier aliases for different columns, e.g:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Booking<span class="token punctuation">&quot;</span></span> 
  <span class="token attr-name">selectedColumns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id,name,roomType,roomNumber,cost,bookingStartDate,bookingEndDate<span class="token punctuation">&quot;</span></span> 
  <span class="token attr-name">:headerTitles</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ roomNumber:&#39;Room&#39;, bookingStartDate:&#39;Start&#39;, bookingEndDate:&#39;End&#39; }<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">:visibleFrom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ bookingStartDate:&#39;lg&#39;, bookingEndDate:&#39;xl&#39; }<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,3),j=a(`<h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Custom Responsive Columns </h2><p>Which columns are displayed and how they&#39;re formatted are further customizable with <code>&lt;template #column&gt;</code> slots:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:visibleFrom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ name:&#39;xl&#39;, bookingStartDate:&#39;sm&#39;, bookingEndDate:&#39;xl&#39;, createdBy:&#39;2xl&#39; }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ id }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-gray-900<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ id }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ name }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        {{ name }}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#roomNumber-header</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Room <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>No
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#cost</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ cost }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ currency(cost) }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#bookingStartDate-header</span><span class="token punctuation">&gt;</span></span>
        Start<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#bookingEndDate-header</span><span class="token punctuation">&gt;</span></span>
        End<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden lg:inline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> Date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#createdBy-header</span><span class="token punctuation">&gt;</span></span>
        Employee
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#createdBy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ createdBy }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ createdBy }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AutoQueryGrid</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Custom Functionality </h2><p>The column template slots can be leveraged to implement custom functionality, e.g. instead of navigating to separate pages to manage related data we can use a custom column to manage Booking Coupons from within the same grid, e.g:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Booking<span class="token punctuation">&quot;</span></span> <span class="token attr-name">selectedColumns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id,name,cost,bookingStartDate,bookingEndDate,discount<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#discount</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ discount }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextLink</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>discount<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex items-end<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>showCoupon(discount.id)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>discount.id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>w-5 h-5 mr-1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Coupon<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PreviewFormat</span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>discount.description<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TextLink</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AutoQueryGrid</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoEditForm</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>coupon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UpdateCoupon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>coupon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@done</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>close<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@save</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>close<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@servicestack/vue&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> QueryCoupons <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;dtos&quot;</span>

<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token function">useClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> coupon <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">showCoupon</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">id</span><span class="token operator">:</span>string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> api <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">api</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryCoupons</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>api<span class="token punctuation">.</span>succeeded<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        coupon<span class="token punctuation">.</span>value <span class="token operator">=</span> api<span class="token punctuation">.</span>response<span class="token operator">!</span><span class="token punctuation">.</span>results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">close</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> coupon<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,6),H=a(`<h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Data Reference Labels </h2><p><a href="/autoquery-rdbms">AutoQuery</a> is able to infer relationships from the <a href="/ormlite/reference-support">POCO References</a> of your Data Models where if your DataModel includes <code>[Reference]</code> attributes so that its related Data is returned in your AutoQuery APIs, AutoQueryGrid will be able to make use of it to render the Contacts &amp; Job Names and Icons instead of just the plain Foreign Key Ids.</p><p>An example of this in the <a href="https://blazor-gallery.servicestack.net/locode/QueryJobApplications" target="_blank" rel="noopener noreferrer">JobApplications</a> DataModel DTO:</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Icon</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Svg <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Application<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JobApplication</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">AuditBase</span></span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoIncrement</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">References</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Job</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> JobId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">References</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Contact</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> ContactId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Reference</span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>Hidden<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Job</span> Position <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Reference</span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Format</span><span class="token attribute-arguments"><span class="token punctuation">(</span>FormatMethods<span class="token punctuation">.</span>Hidden<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Contact</span> Applicant <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Reference</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>JobApplicationComment<span class="token punctuation">&gt;</span></span> Comments <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> AppliedDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name">JobApplicationStatus</span> ApplicationStatus <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Which AutoQueryGrid uses to automatically display the Job and Contact name instead of their ids:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>JobApplication<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:prefs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{take:5}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div>`,6),W=a(`<p>With the original ids are discoverable by hovering over the Job &amp; Contact labels.</p><p>By default AutoQuery will infer using the first string column of the related table for its label, this information can also be explicitly defined with the <code>[Ref]</code> attribute, e.g:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JobApplication</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">AuditBase</span></span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoIncrement</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">References</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Job</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Ref</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Model<span class="token operator">=</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Job<span class="token punctuation">)</span><span class="token punctuation">,</span> RefId<span class="token operator">=</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Job<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">,</span> RefLabel<span class="token operator">=</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Job<span class="token punctuation">.</span>Title<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> JobId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">References</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Contact</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Ref</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Model<span class="token operator">=</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Contact<span class="token punctuation">)</span><span class="token punctuation">,</span> RefId<span class="token operator">=</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Contact<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">,</span> RefLabel<span class="token operator">=</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Contact<span class="token punctuation">.</span>DisplayName<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> ContactId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Alternatively you can use <code>[Ref(None=true)]</code> to disable any implicit inferences and render the FK property Ids as-is.</p><p>When displaying referential data you can tell AutoQueryGrid to hide rendering the complex data references as well columns using <code>[Format(FormatMethods.Hidden)]</code>.</p><h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> AutoQueryGrid Template Slots </h2><p>AutoQueryGrid supports a number of <a href="https://vuejs.org/guide/components/slots.html" target="_blank" rel="noopener noreferrer">Vue slots</a> to customize its built-in UIs, including <code>formheader</code> and <code>formfooter</code> slots to insert custom content before and after the Auto Create &amp; Edit components forms:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#formheader</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ form, type, apis, model, id }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#formfooter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ form, type, apis, model, id }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>This feature is used to implement <a href="/locode/auditing">Locode&#39;s Audit History UI</a> for displaying the Audit History of each record in the bottom of the Edit Form for Authorized Users, implemented with:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoQueryGrid</span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>store.opDataModel<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>store.opDataModel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#formfooter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ form, type, apis, model, id }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AuditEvents</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form === &#39;edit&#39; &amp;&amp; canAccessCrudEvents<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AutoQueryGrid</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Which loads the <a href="https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack/src/ServiceStack/modules/locode/components/AuditEvents.mjs" target="_blank" rel="noopener noreferrer">AuditEvents.mjs</a> component at the bottom of <strong>Edit</strong> forms, allowing Admin Users to inspect the Audit History of each record:</p><p><a href="/locode/auditing"><img src="`+P+`" alt=""></a></p><p>Alternatively you can replace the entire Create and Edit Forms used with the <code>createform</code> and <code>editforms</code> slots:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#createform</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ form, apis, type }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#editform</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ form, apis, type }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Additional toolbar buttons can be added with the <code>toolbarbuttons</code> slot, e.g:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#toolbarbuttons</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ toolbarButtonClass }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pl-2 mt-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customAction<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toolbarButtonClass<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>whitespace-nowrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>My Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Alternatively you can replace the entire toolbar with your own with:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#toolbar</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>All other template slots are passed down to the embedded <a href="/vue/gallery/datagrid">DataGrid</a> component where they can be used to customize column headers and cells.</p><h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> AutoQueryGrid Properties </h2><p>Additional customizations available using AutoQueryGrid properties include:</p><div class="language-ts"><pre><code>defineProps<span class="token operator">&lt;</span><span class="token punctuation">{</span>
    filterDefinitions<span class="token operator">?</span><span class="token operator">:</span> AutoQueryConvention<span class="token punctuation">[</span><span class="token punctuation">]</span>
    id<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    apis<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token operator">|</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    type<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token operator">|</span>InstanceType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token operator">|</span><span class="token builtin">Function</span>
    prefs<span class="token operator">?</span><span class="token operator">:</span> ApiPrefs

    deny<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token operator">|</span>GridAllowOptions<span class="token operator">|</span>GridAllowOptions<span class="token punctuation">[</span><span class="token punctuation">]</span>
    hide<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token operator">|</span>GridShowOptions<span class="token operator">|</span>GridShowOptions<span class="token punctuation">[</span><span class="token punctuation">]</span>
    
    selectedColumns<span class="token operator">?</span><span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token builtin">string</span>
    toolbarButtonClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    tableStyle<span class="token operator">?</span><span class="token operator">:</span> TableStyleOptions
    gridClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    grid2Class<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    grid3Class<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    grid4Class<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    tableClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    theadClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    tbodyClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    theadRowClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    theadCellClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>

    headerTitle<span class="token operator">?</span><span class="token operator">:</span><span class="token punctuation">(</span>name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
    headerTitles<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">[</span>name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">}</span>
    visibleFrom<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">[</span>name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span>Breakpoint<span class="token punctuation">}</span>
    rowClass<span class="token operator">?</span><span class="token operator">:</span><span class="token punctuation">(</span>model<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">,</span>i<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
    rowStyle<span class="token operator">?</span><span class="token operator">:</span><span class="token punctuation">(</span>model<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">,</span>i<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> StyleValue <span class="token operator">|</span> <span class="token keyword">undefined</span>

    apiPrefs<span class="token operator">?</span><span class="token operator">:</span> ApiPrefs
    canFilter<span class="token operator">?</span><span class="token operator">:</span><span class="token punctuation">(</span>column<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>
    disableKeyBindings<span class="token operator">?</span><span class="token operator">:</span><span class="token punctuation">(</span>column<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>
    configureField<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>field<span class="token operator">:</span>InputProp<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
    skip<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
    create<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
    edit<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token operator">|</span><span class="token builtin">number</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> AutoQueryGrid Events </h2><p>Whilst the <code>headerSelected</code> and <code>rowSelected</code> events can be used to invoke custom functionality when column headers and rows are selected:</p><div class="language-ts"><pre><code><span class="token generic-function"><span class="token function">defineEmits</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span>
    <span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token string">&quot;headerSelected&quot;</span><span class="token punctuation">,</span> name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span> ev<span class="token operator">:</span>Event<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
    <span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token string">&quot;rowSelected&quot;</span><span class="token punctuation">,</span> item<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">,</span> ev<span class="token operator">:</span>Event<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 class="pt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Powers Locode </h2><p>AutoQueryGrid is already used extensively and is the key component that enables <a href="/locode/">Locode&#39;s</a> Instant Auto UI to manage your App&#39;s AutoQuery CRUD APIs.</p><p><a href="/locode/"><img src="`+R+'" alt=""></a></p>',28),tn='{"title":"AutoQueryGrid Component","description":"","frontmatter":{"title":"AutoQueryGrid Component"},"headers":[],"relativePath":"vue/gallery/autoquerygrid.md"}',K={},pn=Object.assign(K,{__name:"autoquerygrid",setup(f){const{setMetadata:d}=I();return d(x),G(async()=>{const u=await b().api(new T({provider:"credentials",userName:"admin@email.com",password:"p@55wOrd"}));if(u.succeeded){const{signIn:o}=B();o(u.response)}}),(p,u)=>{const o=t("Breadcrumb"),r=t("Breadcrumbs"),s=t("AutoQueryGrid");return k(),q("div",null,[N,n(r,{class:"not-prose mt-4","home-href":"/vue/"},{default:e(()=>[n(o,{href:"/vue/gallery/"},{default:e(()=>[l("gallery")]),_:1}),n(o,null,{default:e(()=>[l("AutoQueryGrid Examples")]),_:1})]),_:1}),V,n(g,{Component:"AutoQueryGrid<Model>"},{default:e(()=>[l("Default CRUD ")]),_:1}),F,n(s,{type:"Booking"}),J,n(g,{Component:"AutoQueryGrid<Model>"},{default:e(()=>[l("Read Only")]),_:1}),M,n(s,{type:"Booking",apis:"QueryBookings"}),U,n(s,{type:"Booking",tableStyle:"verticalLines,uppercaseHeadings"}),L,n(s,{type:"Booking",hide:"pagingNav,copyApiUrl,downloadCsv",deny:"filtering"}),O,n(s,{type:"Booking",selectedColumns:"id,name,roomType,roomNumber,cost"}),z,n(s,{type:"Booking",selectedColumns:"id,name,roomType,roomNumber,cost,bookingStartDate,bookingEndDate",headerTitles:{roomNumber:"Room",bookingStartDate:"Start",bookingEndDate:"End"},visibleFrom:{bookingStartDate:"lg",bookingEndDate:"xl"}}),j,n(E),H,n(s,{type:"JobApplication",prefs:{take:5}}),W])}}});export{tn as __pageData,pn as default};
