import"./chunks/iconify.2272db1b.js";import{_ as c}from"./chunks/ApiReference.8128d97b.js";import{D as t,o as u,c as l,e as n,q as s,d as i,a as o,b as e}from"./app.2aea72c0.js";const r=i("link",{rel:"stylesheet",href:"/css/tailwind-components.css"},null,-1),k=o(`<p>Vue.js Apps can access Authenticated Users using <a href="https://docs.servicestack.net/vue/use-auth" target="_blank" rel="noopener noreferrer">useAuth()</a> which can also be populated without the overhead of an Ajax request by embedding the response of the built-in <a href="https://vue-mjs.web-templates.io/ui/Authenticate?tab=details" target="_blank" rel="noopener noreferrer">Authenticate API</a> inside <code>_Layout.cshtml</code> with:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@@servicestack/vue&quot;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> signIn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">signIn</span><span class="token punctuation">(</span>@<span class="token keyword">await</span> Html<span class="token punctuation">.</span><span class="token function">ApiAsJsonAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Authenticate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Where it enables access to the below <a href="https://docs.servicestack.net/vue/use-auth" target="_blank" rel="noopener noreferrer">useAuth()</a> utils for inspecting the current authenticated user:</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> 
    signIn<span class="token punctuation">,</span>           <span class="token comment">// Sign In the currently Authenticated User</span>
    signOut<span class="token punctuation">,</span>          <span class="token comment">// Sign Out currently Authenticated User</span>
    user<span class="token punctuation">,</span>             <span class="token comment">// Access Authenticated User info in a reactive Ref&lt;AuthenticateResponse&gt;</span>
    isAuthenticated<span class="token punctuation">,</span>  <span class="token comment">// Check if the current user is Authenticated in a reactive Ref&lt;boolean&gt;</span>
    hasRole<span class="token punctuation">,</span>          <span class="token comment">// Check if the Authenticated User has a specific role</span>
    hasPermission<span class="token punctuation">,</span>    <span class="token comment">// Check if the Authenticated User has a specific permission</span>
    isAdmin           <span class="token comment">// Check if the Authenticated User has the Admin role</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>An example where this is used is in <a href="https://github.com/NetCoreTemplates/vue-mjs/blob/main/MyApp/wwwroot/Pages/Bookings.mjs" target="_blank" rel="noopener noreferrer">Bookings.mjs</a> to control whether the <code>&lt;AutoEditForm&gt;</code> component should enable its delete functionality:</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    template<span class="token comment">/*html*/</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;AutoEditForm type=&quot;UpdateBooking&quot; :deleteType=&quot;canDelete ? &#39;DeleteBooking&#39; : null&quot; /&gt;
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> hasRole <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> canDelete <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">&#39;Manager&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> canDelete <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,6),h=o(`<p>TypeScript definition of the API surface area and type information for correct usage of <code>useAuth()</code></p><div class="language-ts"><pre><code><span class="token comment">/** Access the currently Authenticated User info in a reactive Ref&lt;AuthenticateResponse&gt; */</span>
<span class="token keyword">const</span> user<span class="token operator">:</span> Ref<span class="token operator">&lt;</span>AuthenticateResponse<span class="token operator">&gt;</span>

<span class="token comment">/** Check if the current user is Authenticated in a reactive Ref&lt;boolean&gt; */</span>
<span class="token keyword">const</span> isAuthenticated<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>

<span class="token comment">/** Sign In the currently Authenticated User */</span>
<span class="token keyword">function</span> <span class="token function">signIn</span><span class="token punctuation">(</span>user<span class="token operator">:</span>AuthenticateResponse<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

<span class="token comment">/** Sign Out currently Authenticated User */</span>
<span class="token keyword">function</span> <span class="token function">signOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

<span class="token comment">/** Check if the Authenticated User has a specific role */</span>
<span class="token keyword">function</span> <span class="token function">hasRole</span><span class="token punctuation">(</span>role<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>

<span class="token comment">/** Check if the Authenticated User has a specific permission */</span>
<span class="token keyword">function</span> <span class="token function">hasPermission</span><span class="token punctuation">(</span>permission<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>

<span class="token comment">/** Check if the Authenticated User has the Admin role */</span>
<span class="token keyword">function</span> <span class="token function">isAdmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</code></pre></div>`,2),b='{"title":"Auth Features","description":"","frontmatter":{"title":"Auth Features"},"headers":[],"relativePath":"vue/use-auth.md"}',d={},w=Object.assign(d,{__name:"use-auth",setup(m){return(f,g)=>{const a=t("Breadcrumb"),p=t("Breadcrumbs");return u(),l("div",null,[r,n(p,{class:"not-prose my-4 mb-8","home-href":"/vue/"},{default:s(()=>[n(a,{href:"/vue/gallery/"},{default:s(()=>[e("gallery")]),_:1}),n(a,null,{default:s(()=>[e("useAuth")]),_:1})]),_:1}),k,n(c,{component:"TypeScript Definition"}),h])}}});export{b as __pageData,w as default};
