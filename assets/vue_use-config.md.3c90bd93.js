import"./chunks/iconify.2272db1b.js";import{_ as o}from"./chunks/ApiReference.8128d97b.js";import{D as e,o as l,c as r,e as s,q as n,d as i,a,b as p}from"./app.2aea72c0.js";const u=i("link",{rel:"stylesheet",href:"/css/tailwind-components.css"},null,-1),k=a(`<h2 id="formatters" class="mt-8 mb-4 text-2xl font-semibold text-gray-900 dark:text-gray-100"> Manage Global Configuration </h2><p><code>useConfig</code> is used to maintain global configuration that&#39;s used throughout the Vue Component Library.</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@servicestack/vue&quot;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">,</span>                   <span class="token comment">// Resolve configuration in a reactive Ref&lt;UiConfig&gt;</span>
    setConfig<span class="token punctuation">,</span>                <span class="token comment">// Set global configuration</span>
    assetsPathResolver<span class="token punctuation">,</span>       <span class="token comment">// Resolve Absolute URL to use for relative paths</span>
    fallbackPathResolver<span class="token punctuation">,</span>     <span class="token comment">// Resolve fallback URL to use if primary URL fails</span>
    autoQueryGridDefaults<span class="token punctuation">,</span>    <span class="token comment">// Resolve AutoQueryGrid default configuration</span>
    setAutoQueryGridDefaults<span class="token punctuation">,</span> <span class="token comment">// Set AutoQueryGrid default configuration</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>The asset and fallback URL resolvers are useful when hosting assets on a separate CDN from the hosted website.</p><h3 class="my-4 text-lg font-semibold">Default configuration</h3><div class="language-js"><pre><code><span class="token function">setConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">redirectSignIn</span><span class="token operator">:</span>       <span class="token string">&#39;/signin&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">assetsPathResolver</span><span class="token operator">:</span>   <span class="token parameter">src</span> <span class="token operator">=&gt;</span> src<span class="token punctuation">,</span>
    <span class="token function-variable function">fallbackPathResolver</span><span class="token operator">:</span> <span class="token parameter">src</span> <span class="token operator">=&gt;</span> src<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div>`,6),d=a(`<p>Use <code>setAutoQueryGridDefaults</code> to change the default configuration for all <a href="/vue/gallery/autoquerygrid">AutoQueryGrid</a> components:</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> setAutoQueryGridDefaults <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token function">setAutoQueryGridDefaults</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    deny<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    hide<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    toolbarButtonClass<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    tableStyle<span class="token operator">:</span> <span class="token string">&quot;stripedRows&quot;</span><span class="token punctuation">,</span>
    take<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
    maxFieldLength<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>TypeScript Definitions for available AutoQueryGridDefaults:</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">AutoQueryGridDefaults</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    deny<span class="token operator">?</span><span class="token operator">:</span>GridAllowOptions<span class="token punctuation">[</span><span class="token punctuation">]</span>
    hide<span class="token operator">?</span><span class="token operator">:</span>GridShowOptions<span class="token punctuation">[</span><span class="token punctuation">]</span>
    toolbarButtonClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    tableStyle<span class="token operator">?</span><span class="token operator">:</span> TableStyleOptions
    take<span class="token operator">?</span><span class="token operator">:</span><span class="token builtin">number</span>
    maxFieldLength<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">GridAllowOptions</span> <span class="token operator">=</span> <span class="token string">&quot;filtering&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;queryString&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;queryFilters&quot;</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">GridShowOptions</span> <span class="token operator">=</span> <span class="token string">&quot;toolbar&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;preferences&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;pagingNav&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;pagingInfo&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;downloadCsv&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;refresh&quot;</span> 
    <span class="token operator">|</span> <span class="token string">&quot;copyApiUrl&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;resetPreferences&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;filtersView&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;newItem&quot;</span>
</code></pre></div>`,4),f=a(`<p>TypeScript definition of the API surface area and type information for correct usage of <code>useConfig()</code></p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">UiConfig</span> <span class="token punctuation">{</span>
    redirectSignIn<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    assetsPathResolver<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>src<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
    fallbackPathResolver<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>src<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">/** Resolve configuration in a reactive Ref&lt;UiConfig&gt; */</span>
<span class="token keyword">const</span> config<span class="token operator">:</span>ComputedRef<span class="token operator">&lt;</span>UiConfig<span class="token operator">&gt;</span>

<span class="token comment">/** Set global configuration */</span>
<span class="token keyword">function</span> <span class="token function">setConfig</span><span class="token punctuation">(</span>config<span class="token operator">:</span> UiConfig<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

<span class="token comment">/** Resolve Absolute URL to use for relative paths */</span>
<span class="token keyword">function</span> <span class="token function">assetsPathResolver</span><span class="token punctuation">(</span>src<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

<span class="token comment">/** Resolve fallback URL to use if primary URL fails */</span>
<span class="token keyword">function</span> <span class="token function">fallbackPathResolver</span><span class="token punctuation">(</span>src<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
</code></pre></div>`,2),q='{"title":"Vue Tailwind Global Configuration","description":"","frontmatter":{"title":"Vue Tailwind Global Configuration"},"headers":[],"relativePath":"vue/use-config.md"}',g={},w=Object.assign(g,{__name:"use-config",setup(m){return(_,y)=>{const t=e("Breadcrumb"),c=e("Breadcrumbs");return l(),r("div",null,[u,s(c,{class:"not-prose my-4 mb-8","home-href":"/vue/"},{default:n(()=>[s(t,{href:"/vue/gallery/"},{default:n(()=>[p("gallery")]),_:1}),s(t,null,{default:n(()=>[p("useConfig")]),_:1})]),_:1}),k,s(o,{component:"AutoQueryGrid Defaults"}),d,s(o,{component:"TypeScript Definition"}),f])}}});export{q as __pageData,w as default};
