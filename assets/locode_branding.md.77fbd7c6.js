import{_ as s,o as a,c as t,a as e}from"./app.2aea72c0.js";var o="/assets/database-first-northwind-branding1.0e609e91.png",n="/assets/database-first-northwind-branding2.32930708.png",p="/assets/custom-brand.9596ab3c.png",c="/assets/code-first-bookings-custom-1.c770c4b6.png",i="/assets/database-first-northwind-icons-default.91dab397.png",l="/assets/database-first-northwind-icons-custom.d9703ca7.png",r="/assets/database-first-northwind-tags.0c7ef4c7.png";const y='{"title":"Appearance & Branding","description":"","frontmatter":{"title":"Appearance & Branding"},"headers":[{"level":3,"title":"Custom Brand Component","slug":"custom-brand-component"},{"level":2,"title":"Custom Table Icons","slug":"custom-table-icons"},{"level":3,"title":"Custom Icons for Database-first tables","slug":"custom-icons-for-database-first-tables"},{"level":2,"title":"Grouping services with Tag","slug":"grouping-services-with-tag"},{"level":3,"title":"Adding Tags to Database-first tables","slug":"adding-tags-to-database-first-tables"}],"relativePath":"locode/branding.md"}',u={},d=e(`<p>The logo at the top left can be changed by configuring the <code>UiFeature</code> plugin from your AppHost using <code>ConfigurePlugin&lt;UiFeature&gt;</code>.</p><div class="language-csharp"><pre><code><span class="token generic-method"><span class="token function">ConfigurePlugin</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UiFeature<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>feature <span class="token operator">=&gt;</span> 
    feature<span class="token punctuation">.</span>Info<span class="token punctuation">.</span>BrandIcon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ImageInfo</span> <span class="token punctuation">{</span> Uri <span class="token operator">=</span> <span class="token string">&quot;/logo.svg&quot;</span><span class="token punctuation">,</span> Cls <span class="token operator">=</span> <span class="token string">&quot;w-8 h-8 mr-1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><code>Uri</code> is the path of your own logo from the <code>wwwroot</code> folder and the <code>Cls</code> value is the CSS classes applied to the image.</p><ul class="my-8 grid gap-4 sm:grid-cols-2"><li class="rounded-lg m-0 col-span-1 flex flex-col text-center items-center bg-white shadow divide-y divide-gray-200"><div class="flex-1 flex flex-col px-4 mt-4"><div class="mt-4 p-0 text-xl font-medium text-gray-500">Default</div><div class="rounded-lg focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"><img src="`+o+'" alt=""></div></div></li><li class="rounded-lg m-0 col-span-1 flex flex-col text-center items-center bg-white shadow divide-y divide-gray-200"><div class="flex-1 flex flex-col px-4 mt-4"><div class="mt-4 p-0 text-xl font-medium text-gray-500">Custom branding</div><div class="rounded-lg focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"><img src="'+n+`" alt=""></div></div></li></ul><h3 id="custom-brand-component" tabindex="-1">Custom Brand Component <a class="header-anchor" href="#custom-brand-component" aria-hidden="true">#</a></h3><p>For even greater flexibility you can also replace the entire <a href="/locode/custom#custom-app-example">Brand.mjs component</a> by creating a local <code>Brand</code> component in <a href="https://github.com/ServiceStack/ServiceStack/blob/main/ServiceStack.Blazor/tests/ServiceStack.Blazor.Bootstrap.Tests/Server/js/components/Brand.mjs" target="_blank" rel="noopener noreferrer">/wwwroot/js/components/Brand.mjs</a> which the Blazor WASM template does with:</p><div class="language-js"><pre><code><span class="token keyword">const</span> Brand <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token comment">/*html*/</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div class=&quot;flex items-center flex-shrink-0 max-w-sidebar&quot;&gt;
        &lt;a title=&quot;My App&quot; v-href=&quot;{ $page:&#39;&#39; }&quot;
           class=&quot;text-2xl whitespace-nowrap overflow-x-hidden flex items-center&quot;&gt;
           &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; class=&quot;w-8 h-8 ml-1 mr-2&quot; viewBox=&quot;0 0 24 24&quot;&gt;
               &lt;path d=&quot;M23.834 8.101a13.912 13.912 0 0 1-13.643 11.72a10.105 10.105 0 0 1-1.994-.12a6.111 6.111 0 0 1-5.082-5.761a5.934 5.934 0 0 1 
               11.867-.084c.025.983-.401 1.846-1.277 1.871c-.936 0-1.374-.668-1.374-1.567v-2.5a1.531 1.531 0 0 0-1.52-1.533H8.715a3.648 3.648 0 1 0 
               2.695 6.08l.073-.11l.074.121a2.58 2.58 0 0 0 2.2 1.048a2.909 2.909 0 0 0 2.695-3.04a7.912 7.912 0 0 0-.217-1.933a7.404 7.404 0 0 0-14.64 
               1.603a7.497 7.497 0 0 0 7.308 7.405s.549.05 1.167.035a15.803 15.803 0 0 0 8.475-2.528c.036-.025.072.025.048.061a12.44 12.44 0 0 1-9.69 
               3.963a8.744 8.744 0 0 1-8.9-8.972a9.049 9.049 0 0 1 3.635-7.247a8.863 8.863 0 0 1 5.229-1.726h2.813a7.915 7.915 0 0 0 5.839-2.578a.11.11 
               0 0 1 .059-.034a.112.112 0 0 1 .12.053a.113.113 0 0 1 .015.067a7.934 7.934 0 0 1-1.227 3.549a.107.107 0 0 0-.014.06a.11.11 0 0 0 
               .073.095a.109.109 0 0 0 .062.004a8.505 8.505 0 0 0 5.913-4.876a.155.155 0 0 1 .055-.053a.15.15 0 0 1 .147 0a.153.153 0 0 1 .054.053A10.779 
               10.779 0 0 1 23.834 8.1zM8.895 11.628a2.188 2.188 0 1 0 2.188 2.188v-2.042a.158.158 0 0 0-.15-.15z&quot; fill=&quot;#5C2D91&quot;/&gt;
            &lt;/svg&gt;
           My App
        &lt;/a&gt;
    &lt;/div&gt;
    </span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> Brand
</code></pre></div><p>To render its <a href="https://blazor-wasm-api.jamstacks.net/ui" target="_blank" rel="noopener noreferrer">custom App Brand component</a>:</p><p><a href="https://blazor-wasm-api.jamstacks.net/ui" target="_blank" rel="noopener noreferrer"><img src="`+p+`" alt=""></a></p><h2 id="custom-table-icons" tabindex="-1">Custom Table Icons <a class="header-anchor" href="#custom-table-icons" aria-hidden="true">#</a></h2><p>Attributes added to your database model can change the visuals in your Locode application. For example, by adding <code>[Icon]</code> top of <code>Booking</code> specifying either an <code>Svg</code> or <code>Uri</code> path we can change the icon for the table in left menu and table relationships.</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Icon</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Svg <span class="token operator">=</span> <span class="token string">&quot;&lt;svg xmlns=\\&quot;http://www.w3.org/2000/svg\\&quot; ...&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Booking</span>
<span class="token punctuation">{</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Which will use this Icon whenever referring to <code>Booking</code> items:</p><p><img src="`+c+`" alt=""></p><h3 id="custom-icons-for-database-first-tables" tabindex="-1">Custom Icons for Database-first tables <a class="header-anchor" href="#custom-icons-for-database-first-tables" aria-hidden="true">#</a></h3><p>On database model classes, the <code>Icon</code> attribute can be used with a <code>Uri</code> or <code>Svg</code> to style the table in the left menu and when lookup data is displayed. For example, if we use the <code>TypeFilter</code> to access the data model types, we can apply the <code>Icon</code> attribute dynamically to <code>Order</code> it will impact the tables that reference <code>Order</code>.</p><div class="language-csharp"><pre><code>TypeFilter <span class="token operator">=</span> <span class="token punctuation">(</span>type<span class="token punctuation">,</span> req<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Icons<span class="token punctuation">.</span><span class="token function">TryGetValue</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">var</span></span> icon<span class="token punctuation">)</span><span class="token punctuation">)</span>
        type<span class="token punctuation">.</span><span class="token function">AddAttribute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">IconAttribute</span> <span class="token punctuation">{</span> Svg <span class="token operator">=</span> Svg<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>icon<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> Icons <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token string">&quot;Order&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;&lt;path fill=&#39;currentColor&#39; ...&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><ul class="my-8 grid gap-4 sm:grid-cols-2"><li class="rounded-lg m-0 col-span-1 flex flex-col text-center items-center bg-white shadow divide-y divide-gray-200"><div class="flex-1 flex flex-col px-4 mt-4"><div class="mt-4 p-0 text-xl font-medium text-gray-500">Default Icon</div><div class="rounded-lg focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"><img src="`+i+'" alt=""></div></div></li><li class="rounded-lg m-0 col-span-1 flex flex-col text-center items-center bg-white shadow divide-y divide-gray-200"><div class="flex-1 flex flex-col px-4 mt-4"><div class="mt-4 p-0 text-xl font-medium text-gray-500">Custom Icon</div><div class="rounded-lg focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"><img src="'+l+`" alt=""></div></div></li></ul><h2 id="grouping-services-with-tag" tabindex="-1">Grouping services with Tag <a class="header-anchor" href="#grouping-services-with-tag" aria-hidden="true">#</a></h2><p>To group the Northwind services under the same <code>Tag</code> name for the left menu in Locode, we can use the <code>Tag</code> attribute.</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Tag</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Northwind&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Category</span> <span class="token punctuation">{</span> <span class="token range operator">..</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Tag</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;Northwind&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Customer</span> <span class="token punctuation">{</span> <span class="token range operator">..</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
</code></pre></div><p>Instead of <code>Tables</code> we can now see our <code>Northwind</code> tag in the Locode app UI.</p><ul class="my-8 grid gap-4 sm:grid-cols-2"><li class="rounded-lg m-0 col-span-1 flex flex-col text-center items-center bg-white shadow divide-y divide-gray-200"><div class="flex-1 flex flex-col px-4 mt-4"><div class="mt-4 p-0 text-xl font-medium text-gray-500">Default &quot;Tables&quot;</div><div class="rounded-lg focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"><img src="`+n+'" alt=""></div></div></li><li class="rounded-lg m-0 col-span-1 flex flex-col text-center items-center bg-white shadow divide-y divide-gray-200"><div class="flex-1 flex flex-col px-4 mt-4"><div class="mt-4 p-0 text-xl font-medium text-gray-500">Custom Tag</div><div class="rounded-lg focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"><img src="'+r+`" alt=""></div></div></li></ul><p>As more unique <code>Tag</code> names are added, additional drop down menus will be created to group your services together.</p><h3 id="adding-tags-to-database-first-tables" tabindex="-1">Adding Tags to Database-first tables <a class="header-anchor" href="#adding-tags-to-database-first-tables" aria-hidden="true">#</a></h3><p>We can add the <code>[Tag]</code> attribute to all our Database-First Request DTOs using <a href="/autoquery-autogen">AutoQuery AutoGen&#39;s</a> <code>ServiceFilter</code>:</p><div class="language-cs"><pre><code>GenerateCrudServices <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">GenerateCrudServices</span> <span class="token punctuation">{</span>
    AutoRegister <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    ServiceFilter <span class="token operator">=</span> <span class="token punctuation">(</span>op<span class="token punctuation">,</span> req<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// Annotate all Auto generated Request DTOs with [Tag(&quot;Northwind&quot;)] attribute</span>
        op<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">AddAttributeIfNotExists</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">TagAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;Northwind&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div>`,27),g=[d];function k(f,h,m,w,v,b){return a(),t("div",null,g)}var q=s(u,[["render",k]]);export{y as __pageData,q as default};
